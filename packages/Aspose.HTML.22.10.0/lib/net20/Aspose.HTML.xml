<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Aspose.HTML</name>
  </assembly>
  <members>
    <member name="T:Aspose.Html.Canvas.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Dom.Canvas</b> namespace provides interfaces
            for 2D rendering details qualification as well as options for
            filling and Path2D class.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Canvas.CanvasFillRule">
      <summary>
            This enumeration is used to select the fill rule algorithm by which to determine if a point is inside or outside a path.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Canvas.CanvasFillRule.NonZero">
      <summary>
            The value "nonzero" value indicates the non-zero winding rule, wherein a point is considered to be outside a 
            shape if the number of times a half-infinite straight line drawn from that point crosses the shape's path 
            going in one direction is equal to the number of times it crosses the path going in the other direction.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Canvas.CanvasFillRule.EvenOdd">
      <summary>
            The "evenodd" value indicates the even-odd rule, wherein a point is considered to be outside a shape if the 
            number of times a half-infinite straight line drawn from that point crosses the shape's path is even.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Canvas.ICanvasDrawingStyles">
      <summary>
            The ICanvasDrawingStyles interface provides methods and properties control how lines are drawn and how text is laid out.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasDrawingStyles.SetLineDash(System.Double[])">
      <summary>
            Sets the current line dash pattern.
            </summary>
      <param name="segments">An Array of numbers which specify distances to alternately draw a line and a gap (in coordinate space units)</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasDrawingStyles.GetLineDash">
      <summary>
            Returns the current line dash pattern array containing an even number of non-negative numbers.
            </summary>
      <returns>An Array. A list of numbers that specifies distances to alternately draw a line and a gap (in coordinate space units).</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasDrawingStyles.LineWidth">
      <summary>
            Width of lines. Default 1.0
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasDrawingStyles.LineCap">
      <summary>
            Type of endings on the end of lines. Possible values: butt (default), round, square.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasDrawingStyles.LineJoin">
      <summary>
            Defines the type of corners where two lines meet. Possible values: round, bevel, miter (default).
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasDrawingStyles.MiterLimit">
      <summary>
            Miter limit ratio. Default 10.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasDrawingStyles.LineDashOffset">
      <summary>
            Specifies where to start a dash array on a line.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasDrawingStyles.Font">
      <summary>
            Font setting. Default value 10px sans-serif
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasDrawingStyles.TextAlign">
      <summary>
            Text alignment setting. Possible values: start (default), end, left, right or center.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasDrawingStyles.TextBaseline">
      <summary>
            Baseline alignment setting. Possible values: top, hanging, middle, alphabetic (default), ideographic, bottom.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Canvas.ICanvasGradient">
      <summary>
             Represents an opaque object describing a gradient.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasGradient.AddColorStop(System.Double,System.String)">
      <summary>
             Adds a new stop, defined by an offset and a color, to the gradient.
            </summary>
      <param name="offset">A number between 0 and 1.</param>
      <param name="color">A CSS color</param>
    </member>
    <member name="T:Aspose.Html.Dom.Canvas.ICanvasPathMethods">
      <summary>
            The ICanvasPathMethods interface is used to manipulate paths of objects.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasPathMethods.ClosePath">
      <summary>
            Causes the point of the pen to move back to the start of the current sub-path. 
            It tries to draw a straight line from the current point to the start. 
            If the shape has already been closed or has only one point, this function does nothing.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasPathMethods.MoveTo(System.Double,System.Double)">
      <summary>
            Moves the starting point of a new sub-path to the (x, y) coordinates.
            </summary>
      <param name="x">The x axis of the point</param>
      <param name="y">The y axis of the point</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasPathMethods.LineTo(System.Double,System.Double)">
      <summary>
            Connects the last point in the subpath to the x, y coordinates with a straight line.
            </summary>
      <param name="x">The x axis of the coordinate for the end of the line.</param>
      <param name="y">The y axis of the coordinate for the end of the line.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasPathMethods.QuadraticCurveTo(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds a quadratic Bézier curve to the current path.
            </summary>
      <param name="cpx">The x axis of the coordinate for the control point.</param>
      <param name="cpy">The y axis of the coordinate for the control point.</param>
      <param name="x">The x axis of the coordinate for the end point.</param>
      <param name="y">The y axis of the coordinate for the end point.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasPathMethods.BezierCurveTo(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds a cubic Bézier curve to the path. It requires three points. 
            The first two points are control points and the third one is the end point. 
            The starting point is the last point in the current path, 
            which can be changed using moveTo() before creating the Bézier curve.
            </summary>
      <param name="cp1x">The x axis of the coordinate for the first control point.</param>
      <param name="cp1y">The y axis of the coordinate for the first control point.</param>
      <param name="cp2x">The x axis of the coordinate for the second control point.</param>
      <param name="cp2y">The y axis of the coordinate for the second control point.</param>
      <param name="x">The x axis of the coordinate for the end point.</param>
      <param name="y">The y axis of the coordinate for the end point.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasPathMethods.ArcTo(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds an arc to the path with the given control points and radius, connected to the previous point by a straight line.
            </summary>
      <param name="x1">x-axis coordinates for the first control point.</param>
      <param name="y1">y-axis coordinates for the first control point.</param>
      <param name="x2">x-axis coordinates for the second control point.</param>
      <param name="y2">y-axis coordinates for the second control point.</param>
      <param name="radius">The arc's radius.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasPathMethods.Rect(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Creates a path for a rectangle at position (x, y) with a size that is determined by width and height.
            </summary>
      <param name="x">The x axis of the coordinate for the rectangle starting point.</param>
      <param name="y">The y axis of the coordinate for the rectangle starting point.</param>
      <param name="w">The rectangle's width.</param>
      <param name="h">The rectangle's height.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasPathMethods.Arc(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds an arc to the path which is centered at (x, y) position with radius r starting at startAngle and ending at endAngle going in the given direction by anticlockwise (defaulting to clockwise).
            </summary>
      <param name="x">The x coordinate of the arc's center.</param>
      <param name="y">The y coordinate of the arc's center.</param>
      <param name="radius">The arc's radius.</param>
      <param name="startAngle">The angle at which the arc starts, measured clockwise from the positive x axis and expressed in radians.</param>
      <param name="endAngle">The angle at which the arc ends, measured clockwise from the positive x axis and expressed in radians.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasPathMethods.Arc(System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Adds an arc to the path which is centered at (x, y) position with radius r starting at startAngle and ending at endAngle going in the given direction by anticlockwise (defaulting to clockwise).
            </summary>
      <param name="x">The x coordinate of the arc's center.</param>
      <param name="y">The y coordinate of the arc's center.</param>
      <param name="radius">The arc's radius.</param>
      <param name="startAngle">The angle at which the arc starts, measured clockwise from the positive x axis and expressed in radians.</param>
      <param name="endAngle">The angle at which the arc ends, measured clockwise from the positive x axis and expressed in radians.</param>
      <param name="counterclockwise">Causes the arc to be drawn counter-clockwise between the two angles. By default it is drawn clockwise.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasPathMethods.Ellipse(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
             Adds an ellipse to the path which is centered at (x, y) position with the radii radiusX and radiusY starting at startAngle
             and ending at endAngle going in the given direction by anticlockwise (defaulting to clockwise).
            </summary>
      <param name="x">The x axis of the coordinate for the ellipse's center.</param>
      <param name="y">The y axis of the coordinate for the ellipse's center.</param>
      <param name="radiusX">The ellipse's major-axis radius.</param>
      <param name="radiusY">The ellipse's minor-axis radius.</param>
      <param name="rotation">The rotation for this ellipse, expressed in radians.</param>
      <param name="startAngle">The starting point, measured from the x axis, from which it will be drawn, expressed in radians.</param>
      <param name="endAngle">The end ellipse's angle to which it will be drawn, expressed in radians.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasPathMethods.Ellipse(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
             Adds an ellipse to the path which is centered at (x, y) position with the radii radiusX and radiusY starting at startAngle
             and ending at endAngle going in the given direction by anticlockwise (defaulting to clockwise).
            </summary>
      <param name="x">The x axis of the coordinate for the ellipse's center.</param>
      <param name="y">The y axis of the coordinate for the ellipse's center.</param>
      <param name="radiusX">The ellipse's major-axis radius.</param>
      <param name="radiusY">The ellipse's minor-axis radius.</param>
      <param name="rotation">The rotation for this ellipse, expressed in radians.</param>
      <param name="startAngle">The starting point, measured from the x axis, from which it will be drawn, expressed in radians.</param>
      <param name="endAngle">The end ellipse's angle to which it will be drawn, expressed in radians.</param>
      <param name="anticlockwise">An optional boolean which, if true, draws the ellipse anticlockwise (counter-clockwise), otherwise in a clockwise direction.</param>
    </member>
    <member name="T:Aspose.Html.Dom.Canvas.ICanvasPattern">
      <summary>
            Represents an opaque object describing a pattern, based on an image, a canvas or a video.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasPattern.SetTransform(Aspose.Html.Dom.Svg.DataTypes.SVGMatrix)">
      <summary>
            Applies an SVGMatrix representing a linear transform to the pattern.
            </summary>
      <param name="transform">An SVGMatrix to use as the pattern's transformation matrix.</param>
    </member>
    <member name="T:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D">
      <summary>
            The ICanvasRenderingContext2D interface is used for drawing rectangles, text, images and other objects onto the canvas element. It provides the 2D rendering context for the drawing surface of a canvas element.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Save">
      <summary>
            Saves the current drawing style state using a stack so you can revert any change you make to it using restore().
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Restore">
      <summary>
            Restores the drawing style state to the last element on the 'state stack' saved by save().
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Scale(System.Double,System.Double)">
      <summary>
            Adds a scaling transformation to the canvas units by x horizontally and by y vertically.
            </summary>
      <param name="x">Scaling factor in the horizontal direction.</param>
      <param name="y">Scaling factor in the vertical direction.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Rotate(System.Double)">
      <summary>
            Adds a rotation to the transformation matrix. The angle argument represents a clockwise rotation angle and is expressed in radians.
            </summary>
      <param name="angle">Represents a clockwise rotation angle expressed in radians.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Translate(System.Double,System.Double)">
      <summary>
            Adds a translation transformation by moving the canvas and its origin x horzontally and y vertically on the grid.
            </summary>
      <param name="x">Distance to move in the horizontal direction.</param>
      <param name="y">Distance to move in the vertical direction.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Transform(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Multiplies the current transformation matrix with the matrix described by its arguments.
            </summary>
      <param name="a">Horizontal scaling.</param>
      <param name="b">Horizontal skewing.</param>
      <param name="c">Vertical skewing.</param>
      <param name="d">Vertical scaling.</param>
      <param name="e">Horizontal moving.</param>
      <param name="f">Vertical moving.</param>&gt;
        </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.SetTransform(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Resets the current transform to the identity matrix, and then invokes the transform() method with the same arguments.
            </summary>
      <param name="a">Horizontal scaling.</param>
      <param name="b">Horizontal skewing.</param>
      <param name="c">Vertical skewing.</param>
      <param name="d">Vertical scaling.</param>
      <param name="e">Horizontal moving.</param>
      <param name="f">Vertical moving.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.ResetTransform">
      <summary>
            Resets the current transform by the identity matrix.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.CreateLinearGradient(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Creates a linear gradient along the line given by the coordinates represented by the parameters.
            </summary>
      <param name="x0">The x axis of the coordinate of the start point.</param>
      <param name="y0">The y axis of the coordinate of the start point.</param>
      <param name="x1">The x axis of the coordinate of the end point.</param>
      <param name="y1">The y axis of the coordinate of the end point.</param>
      <returns>The linear CanvasGradient.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.CreateRadialGradient(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Creates a radial gradient given by the coordinates of the two circles represented by the parameters.
            </summary>
      <param name="x0">The x axis of the coordinate of the start circle.</param>
      <param name="y0">The y axis of the coordinate of the start circle</param>
      <param name="r0">The radius of the start circle.</param>
      <param name="x1">The x axis of the coordinate of the end circle.</param>
      <param name="y1">The y axis of the coordinate of the end circle.</param>
      <param name="r1">The radius of the end circle.</param>
      <returns>A radial CanvasGradient initialized with the two specified circles.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.CreatePattern(Aspose.Html.HTMLImageElement,System.String)">
      <summary>
            Creates a pattern using the specified image (a CanvasImageSource). 
            It repeats the source in the directions specified by the repetition argument. 
            </summary>
      <param name="image">A HTMLImageElement to be used as the image to repeat</param>
      <param name="repetition">A string indicating how to repeat the image.</param>
      <returns>An opaque object describing a pattern.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.CreatePattern(Aspose.Html.HTMLCanvasElement,System.String)">
      <summary>
            Creates a pattern using the specified image (a CanvasImageSource). 
            It repeats the source in the directions specified by the repetition argument. 
            </summary>
      <param name="image">A HTMLCanvasElement to be used as the image to repeat</param>
      <param name="repetition">A string indicating how to repeat the image.</param>
      <returns>An opaque object describing a pattern.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.ClearRect(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Sets all pixels in the rectangle defined by starting point (x, y) and size (width, height) to transparent black, erasing any previously drawn content.
            </summary>
      <param name="x">The x axis of the coordinate for the rectangle starting point.</param>
      <param name="y">The y axis of the coordinate for the rectangle starting point.</param>
      <param name="w">The rectangle's width.</param>
      <param name="h">The rectangle's height.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.FillRect(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Draws a filled rectangle at (x, y) position whose size is determined by width and height.
            </summary>
      <param name="x">The x axis of the coordinate for the rectangle starting point.</param>
      <param name="y">The y axis of the coordinate for the rectangle starting point.</param>
      <param name="w">The rectangle's width.</param>
      <param name="h">The rectangle's height.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.StrokeRect(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Paints a rectangle which has a starting point at (x, y) and has a w width and an h height onto the canvas, using the current stroke style.
            </summary>
      <param name="x">The x axis of the coordinate for the rectangle starting point.</param>
      <param name="y">The y axis of the coordinate for the rectangle starting point.</param>
      <param name="w">The rectangle's width.</param>
      <param name="h">The rectangle's height.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.BeginPath">
      <summary>
            Starts a new path by emptying the list of sub-paths. Call this method when you want to create a new path.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Fill">
      <summary>
            Fills the subpaths with the current fill style and default algorithm CanvasFillRule.Nonzero.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Fill(Aspose.Html.Dom.Canvas.CanvasFillRule)">
      <summary>
            Fills the subpaths with the current fill style.
            </summary>
      <param name="fillRule">The algorithm by which to determine if a point is inside a path or outside a path.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Fill(Aspose.Html.Dom.Canvas.Path2D)">
      <summary>
            Fills the subpaths with the current fill style and default algorithm CanvasFillRule.Nonzero.
            </summary>
      <param name="path">A Path2D path to fill.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Fill(Aspose.Html.Dom.Canvas.Path2D,Aspose.Html.Dom.Canvas.CanvasFillRule)">
      <summary>
            Fills the subpaths with the current fill style.
            </summary>
      <param name="path">A Path2D path to fill.</param>
      <param name="fillRule">The algorithm by which to determine if a point is inside a path or outside a path.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Stroke">
      <summary>
            Strokes the subpaths with the current stroke style.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Stroke(Aspose.Html.Dom.Canvas.Path2D)">
      <summary>
            Strokes the subpaths with the current stroke style.
            </summary>
      <param name="path">A Path2D path to stroke.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.DrawFocusIfNeeded(Aspose.Html.Dom.Element)">
      <summary>
            If a given element is focused, this method draws a focus ring around the current path.
            </summary>
      <param name="element">The element to check whether it is focused or not.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Clip">
      <summary>
            Creates a new clipping region by calculating the intersection of the current clipping region and the area described by the path, using the non-zero winding number rule.
            Open subpaths must be implicitly closed when computing the clipping region, without affecting the actual subpaths.
            The new clipping region replaces the current clipping region.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Clip(Aspose.Html.Dom.Canvas.CanvasFillRule)">
      <summary>
            Creates a new clipping region by calculating the intersection of the current clipping region and the area described by the path, using the non-zero winding number rule. 
            Open subpaths must be implicitly closed when computing the clipping region, without affecting the actual subpaths.
            The new clipping region replaces the current clipping region.
            </summary>
      <param name="fillRule">The algorithm by which to determine if a point is inside a path or outside a path</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Clip(Aspose.Html.Dom.Canvas.Path2D,Aspose.Html.Dom.Canvas.CanvasFillRule)">
      <summary>
            Creates a new clipping region by calculating the intersection of the current clipping region and the area described by the path, using the non-zero winding number rule. 
            Open subpaths must be implicitly closed when computing the clipping region, without affecting the actual subpaths.
            The new clipping region replaces the current clipping region.
            </summary>
      <param name="path">A Path2D path to clip.</param>
      <param name="fillRule">The algorithm by which to determine if a point is inside a path or outside a path.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.IsPointInPath(System.Double,System.Double)">
      <summary>
            Reports whether or not the specified point is contained in the current path. 
            </summary>
      <param name="x">The X coordinate of the point to check.</param>
      <param name="y">The Y coordinate of the point to check.</param>
      <returns>Returns true if the point is inside the area contained by the filling of a path, otherwise false.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.IsPointInPath(System.Double,System.Double,Aspose.Html.Dom.Canvas.CanvasFillRule)">
      <summary>
            Reports whether or not the specified point is contained in the current path. 
            </summary>
      <param name="x">The X coordinate of the point to check.</param>
      <param name="y">The Y coordinate of the point to check.</param>
      <param name="fillRule">The algorithm by which to determine if a point is inside a path or outside a path.</param>
      <returns>Returns true if the point is inside the area contained by the filling of a path, otherwise false.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.IsPointInPath(Aspose.Html.Dom.Canvas.Path2D,System.Double,System.Double)">
      <summary>
            Reports whether or not the specified point is contained in the current path. 
            </summary>
      <param name="path">A Path2D path to check.</param>
      <param name="x">The X coordinate of the point to check.</param>
      <param name="y">The Y coordinate of the point to check.</param>
      <returns>Returns true if the point is inside the area contained by the filling of a path, otherwise false.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.IsPointInPath(Aspose.Html.Dom.Canvas.Path2D,System.Double,System.Double,Aspose.Html.Dom.Canvas.CanvasFillRule)">
      <summary>
            Reports whether or not the specified point is contained in the current path. 
            </summary>
      <param name="path">A Path2D path to check.</param>
      <param name="x">The X coordinate of the point to check.</param>
      <param name="y">The Y coordinate of the point to check.</param>
      <param name="fillRule">The algorithm by which to determine if a point is inside a path or outside a path.</param>
      <returns>Returns true if the point is inside the area contained by the filling of a path, otherwise false.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.IsPointInStroke(System.Double,System.Double)">
      <summary>
            Reports whether or not the specified point is inside the area contained by the stroking of a path. 
            </summary>
      <param name="x">The X coordinate of the point to check.</param>
      <param name="y">The Y coordinate of the point to check.</param>
      <returns>Returns true if the point is inside the area contained by the stroking of a path, otherwise false.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.IsPointInStroke(Aspose.Html.Dom.Canvas.Path2D,System.Double,System.Double)">
      <summary>
            Reports whether or not the specified point is inside the area contained by the stroking of a path. 
            </summary>
      <param name="path">A Path2D path to check.</param>
      <param name="x">The X coordinate of the point to check.</param>
      <param name="y">The Y coordinate of the point to check.</param>
      <returns>Returns true if the point is inside the area contained by the stroking of a path, otherwise false.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.FillText(System.String,System.Double,System.Double)">
      <summary>
            Draws (fills) a given text at the given (x,y) position.
            </summary>
      <param name="text">The text to draw using the current font, textAlign, textBaseline, and direction values.</param>
      <param name="x">The x axis of the coordinate for the text starting point.</param>
      <param name="y">The y axis of the coordinate for the text starting point.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.FillText(System.String,System.Double,System.Double,System.Double)">
      <summary>
            Draws (fills) a given text at the given (x,y) position.
            </summary>
      <param name="text">The text to draw using the current font, textAlign, textBaseline, and direction values.</param>
      <param name="x">The x axis of the coordinate for the text starting point.</param>
      <param name="y">The y axis of the coordinate for the text starting point.</param>
      <param name="maxWidth">The maximum width to draw. If specified, and the string is computed to be wider than this width, the font is adjusted to use a more horizontally condensed font (if one is available or if a reasonably readable one can be synthesized by scaling the current font horizontally) or a smaller font.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.StrokeText(System.String,System.Double,System.Double)">
      <summary>
            Draws (strokes) a given text at the given (x, y) position.
            </summary>
      <param name="text">The text to draw using the current font, textAlign, textBaseline, and direction values.</param>
      <param name="x">The x axis of the coordinate for the text starting point.</param>
      <param name="y">The y axis of the coordinate for the text starting point.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.StrokeText(System.String,System.Double,System.Double,System.Nullable{System.Double})">
      <summary>
            Draws (strokes) a given text at the given (x, y) position.
            </summary>
      <param name="text">The text to draw using the current font, textAlign, textBaseline, and direction values.</param>
      <param name="x">The x axis of the coordinate for the text starting point.</param>
      <param name="y">The y axis of the coordinate for the text starting point.</param>
      <param name="maxWidth">The maximum width to draw. If specified, and the string is computed to be wider than this width, the font is adjusted to use a more horizontally condensed font (if one is available or if a reasonably readable one can be synthesized by scaling the current font horizontally) or a smaller font.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.MeasureText(System.String)">
      <summary>
            Returns a TextMetrics object.
            </summary>
      <param name="text">The text to measure.</param>
      <returns>A TextMetrics object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.DrawImage(Aspose.Html.HTMLImageElement,System.Double,System.Double)">
      <summary>
            Draws the specified image.
            </summary>
      <param name="image">The HTMLImageElement to draw into the context.</param>
      <param name="dx">The X coordinate in the destination canvas at which to place the top-left corner of the source image.</param>
      <param name="dy">The Y coordinate in the destination canvas at which to place the top-left corner of the source image.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.DrawImage(Aspose.Html.HTMLCanvasElement,System.Double,System.Double)">
      <summary>
            Draws the specified image.
            </summary>
      <param name="image">The HTMLCanvasElement to draw into the context.</param>
      <param name="dx">The X coordinate in the destination canvas at which to place the top-left corner of the source image.</param>
      <param name="dy">The Y coordinate in the destination canvas at which to place the top-left corner of the source image.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.DrawImage(Aspose.Html.HTMLImageElement,System.Double,System.Double,System.Double,System.Double)">
      <summary>
             Draws the specified image.
            </summary>
      <param name="image">The HTMLImageElement to draw into the context.</param>
      <param name="dx">The X coordinate in the destination canvas at which to place the top-left corner of the source image.</param>
      <param name="dy">The Y coordinate in the destination canvas at which to place the top-left corner of the source image.</param>
      <param name="dw">The width to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</param>
      <param name="dh">The height to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.DrawImage(Aspose.Html.HTMLCanvasElement,System.Double,System.Double,System.Double,System.Double)">
      <summary>
             Draws the specified image.
            </summary>
      <param name="image">The HTMLCanvasElement to draw into the context.</param>
      <param name="dx">The X coordinate in the destination canvas at which to place the top-left corner of the source image.</param>
      <param name="dy">The Y coordinate in the destination canvas at which to place the top-left corner of the source image.</param>
      <param name="dw">The width to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</param>
      <param name="dh">The height to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.DrawImage(Aspose.Html.HTMLImageElement,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Draws the specified image. 
            </summary>
      <param name="image">The HTMLImageElement to draw into the context.</param>
      <param name="sx">The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</param>
      <param name="sy">The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</param>
      <param name="sw">The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by sx and sy to the bottom-right corner of the image is used.</param>
      <param name="sh">The height of the sub-rectangle of the source image to draw into the destination context.</param>
      <param name="dx">The X coordinate in the destination canvas at which to place the top-left corner of the source image.</param>
      <param name="dy">The Y coordinate in the destination canvas at which to place the top-left corner of the source image.</param>
      <param name="dw">The width to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</param>
      <param name="dh">The height to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.DrawImage(Aspose.Html.HTMLCanvasElement,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Draws the specified image. 
            </summary>
      <param name="image">The HTMLCanvasElement to draw into the context.</param>
      <param name="sx">The X coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</param>
      <param name="sy">The Y coordinate of the top left corner of the sub-rectangle of the source image to draw into the destination context.</param>
      <param name="sw">The width of the sub-rectangle of the source image to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by sx and sy to the bottom-right corner of the image is used.</param>
      <param name="sh">The height of the sub-rectangle of the source image to draw into the destination context.</param>
      <param name="dx">The X coordinate in the destination canvas at which to place the top-left corner of the source image.</param>
      <param name="dy">The Y coordinate in the destination canvas at which to place the top-left corner of the source image.</param>
      <param name="dw">The width to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</param>
      <param name="dh">The height to draw the image in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.AddHitRegion(System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>
            Adds a hit region to the canvas. 
            This allows you to make hit detection easier, lets you route events to DOM elements, 
            and makes it possible for users to explore the canvas without seeing it.
            </summary>
      <param name="options">The options argument is optional. When provided, it is an Object which can contain properties.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.RemoveHitRegion(System.String)">
      <summary>
            Removes the hit region with the specified id from the canvas.
            </summary>
      <param name="id">A string representing the id of the region that is to be removed.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.ClearHitRegions">
      <summary>
            Removes all hit regions from the canvas.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.CreateImageData(System.Double,System.Double)">
      <summary>
            Creates a new, blank ImageData object with the specified dimensions. 
            All of the pixels in the new object are transparent black.
            </summary>
      <param name="sw">The width to give the new ImageData object.</param>
      <param name="sh">The height to give the new ImageData object.</param>
      <returns>A new ImageData object with the specified width and height. The new object is filled with transparent black pixels.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.CreateImageData(Aspose.Html.Dom.Canvas.IImageData)">
      <summary>
            Creates a new, blank ImageData object with the specified dimensions. 
            All of the pixels in the new object are transparent black.
            </summary>
      <param name="imagedata">An existing ImageData object from which to copy the width and height. The image itself is not copied.</param>
      <returns>A new ImageData object with the specified width and height. The new object is filled with transparent black pixels.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.GetImageData(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Returns an ImageData object representing the underlying pixel data for the area of the canvas denoted by the rectangle which starts at (sx, sy) and has an sw width and sh height.
            This method is not affected by the canvas transformation matrix.
            </summary>
      <param name="sx">The x coordinate of the upper left corner of the rectangle from which the ImageData will be extracted.</param>
      <param name="sy">The y coordinate of the upper left corner of the rectangle from which the ImageData will be extracted.</param>
      <param name="sw">The width of the rectangle from which the ImageData will be extracted.</param>
      <param name="sh">The height of the rectangle from which the ImageData will be extracted.</param>
      <returns>An ImageData object containing the image data for the given rectangle of the canvas.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.PutImageData(Aspose.Html.Dom.Canvas.IImageData,System.Double,System.Double)">
      <summary>
            Paints data from the given ImageData object onto the bitmap. 
            If a dirty rectangle is provided, only the pixels from that rectangle are painted. 
            This method is not affected by the canvas transformation matrix.
            </summary>
      <param name="imagedata">An ImageData object containing the array of pixel values.</param>
      <param name="dx">Horizontal position (x-coordinate) at which to place the image data in the destination canvas.</param>
      <param name="dy">Vertical position (y-coordinate) at which to place the image data in the destination canvas.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.PutImageData(Aspose.Html.Dom.Canvas.IImageData,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Paints data from the given ImageData object onto the bitmap. 
            If a dirty rectangle is provided, only the pixels from that rectangle are painted. 
            This method is not affected by the canvas transformation matrix.
            </summary>
      <param name="imagedata">An ImageData object containing the array of pixel values.</param>
      <param name="dx">Horizontal position (x-coordinate) at which to place the image data in the destination canvas.</param>
      <param name="dy">Vertical position (y-coordinate) at which to place the image data in the destination canvas.</param>
      <param name="dirtyX">Horizontal position (x-coordinate). The x coordinate of the top left hand corner of your Image data. Defaults to 0.</param>
      <param name="dirtyY">Vertical position (y-coordinate). The y coordinate of the top left hand corner of your Image data. Defaults to 0.</param>
      <param name="dirtyWidth">Width of the rectangle to be painted. Defaults to the width of the image data.</param>
      <param name="dirtyHeight">Height of the rectangle to be painted. Defaults to the height of the image data.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.Canvas">
      <summary>
            A read-only back-reference to the HTMLCanvasElement. Might be null if it is not associated with a canvas element.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.GlobalAlpha">
      <summary>
             Alpha value that is applied to shapes and images before they are composited onto the canvas. Default 1.0 (opaque).
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.GlobalCompositeOperation">
      <summary>
            With globalAlpha applied this sets how shapes and images are drawn onto the existing bitmap. Default: (source-over)
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.StrokeStyle">
      <summary>
            Color or style to use for the lines around shapes. Default: (black).
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.FillStyle">
      <summary>
            Color or style to use inside shapes. Default: (black).
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.ImageSmoothingEnabled">
      <summary>
            Image smoothing mode; if disabled, images will not be smoothed if scaled.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.ShadowOffsetX">
      <summary>
            Horizontal distance the shadow will be offset. Default 0.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.ShadowOffsetY">
      <summary>
            Vertical distance the shadow will be offset. Default 0.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.ShadowBlur">
      <summary>
            Specifies the blurring effect. Default 0
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ICanvasRenderingContext2D.ShadowColor">
      <summary>
            Color of the shadow. Default fully-transparent black.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Canvas.IImageData">
      <summary>
            Creates an ImageData object from a given Uint8ClampedArray and the size of the image it contains. 
            If no array is given, it creates an image of a black rectangle.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.IImageData.Width">
      <summary>
            Is an unsigned long representing the actual width, in pixels, of the ImageData.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.IImageData.Height">
      <summary>
            Is an unsigned long representing the actual height, in pixels, of the ImageData.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.IImageData.Data">
      <summary>
            Is a Uint8ClampedArray representing a one-dimensional array containing the data in the RGBA order, 
            with integer values between 0 and 255 (included).
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Canvas.ITextMetrics">
      <summary>
            Represents the dimension of a text in the canvas.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Canvas.ITextMetrics.Width">
      <summary>
            Is a double giving the calculated width of a segment of inline text in CSS pixels.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Canvas.Path2D">
      <summary>
            The Path2D interface of the Canvas 2D API is used to declare paths that are then later used on CanvasRenderingContext2D objects. 
            The path methods of the CanvasRenderingContext2D interface are present on this interface as well and are allowing you to create 
            paths that you can retain and replay as required on a canvas.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.#ctor">
      <summary>
            returns a newly instantiated Path2D object
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.#ctor(Aspose.Html.Dom.Canvas.Path2D)">
      <summary>
            returns a newly instantiated Path2D object with another path as an argument (creates a copy)
            </summary>
      <param name="path">When invoked with another Path2D object, a copy of the path argument is created</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.#ctor(System.String)">
      <summary>
             returns a newly instantiated Path2D object with a string consisting of SVG path data.
            </summary>
      <param name="d">The string consisting of SVG path data</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.AddPath(Aspose.Html.Dom.Canvas.Path2D)">
      <summary>
            Adds to the path the path given by the argument.
            </summary>
      <param name="path">A Path2D path to add.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.AddPath(Aspose.Html.Dom.Canvas.Path2D,Aspose.Html.Dom.Svg.DataTypes.SVGMatrix)">
      <summary>
            Adds to the path the path given by the argument.
            </summary>
      <param name="path">A Path2D path to add.</param>
      <param name="transformation">An SVGMatrix to be used as the transformation matrix for the path that is added.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.ClosePath">
      <summary>
            Causes the point of the pen to move back to the start of the current sub-path. 
            It tries to draw a straight line from the current point to the start. 
            If the shape has already been closed or has only one point, this function does nothing.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.MoveTo(System.Double,System.Double)">
      <summary>
            Moves the starting point of a new sub-path to the (x, y) coordinates.
            </summary>
      <param name="x">The x axis of the point</param>
      <param name="y">The y axis of the point</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.LineTo(System.Double,System.Double)">
      <summary>
            Connects the last point in the subpath to the x, y coordinates with a straight line.
            </summary>
      <param name="x">The x axis of the coordinate for the end of the line.</param>
      <param name="y">The y axis of the coordinate for the end of the line.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.QuadraticCurveTo(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds a quadratic Bézier curve to the current path.
            </summary>
      <param name="cpx">The x axis of the coordinate for the control point.</param>
      <param name="cpy">The y axis of the coordinate for the control point.</param>
      <param name="x">The x axis of the coordinate for the end point.</param>
      <param name="y">The y axis of the coordinate for the end point.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.BezierCurveTo(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds a cubic Bézier curve to the path. It requires three points. 
            The first two points are control points and the third one is the end point. 
            The starting point is the last point in the current path, 
            which can be changed using moveTo() before creating the Bézier curve.
            </summary>
      <param name="cp1x">The x axis of the coordinate for the first control point.</param>
      <param name="cp1y">The y axis of the coordinate for the first control point.</param>
      <param name="cp2x">The x axis of the coordinate for the second control point.</param>
      <param name="cp2y">The y axis of the coordinate for the second control point.</param>
      <param name="x">The x axis of the coordinate for the end point.</param>
      <param name="y">The y axis of the coordinate for the end point.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.ArcTo(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds an arc to the path with the given control points and radius, connected to the previous point by a straight line.
            </summary>
      <param name="x1">x-axis coordinates for the first control point.</param>
      <param name="y1">y-axis coordinates for the first control point.</param>
      <param name="x2">x-axis coordinates for the second control point.</param>
      <param name="y2">y-axis coordinates for the second control point.</param>
      <param name="radius">The arc's radius.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.Rect(System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Creates a path for a rectangle at position (x, y) with a size that is determined by width and height.
            </summary>
      <param name="x">The x axis of the coordinate for the rectangle starting point.</param>
      <param name="y">The y axis of the coordinate for the rectangle starting point.</param>
      <param name="w">The rectangle's width.</param>
      <param name="h">The rectangle's height.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.Arc(System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Adds an arc to the path which is centered at (x, y) position with radius r starting at startAngle and ending at endAngle going in the given direction by anticlockwise (defaulting to clockwise).
            </summary>
      <param name="x">The x coordinate of the arc's center.</param>
      <param name="y">The y coordinate of the arc's center.</param>
      <param name="radius">The arc's radius.</param>
      <param name="startAngle">The angle at which the arc starts, measured clockwise from the positive x axis and expressed in radians.</param>
      <param name="endAngle">The angle at which the arc ends, measured clockwise from the positive x axis and expressed in radians.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.Arc(System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Adds an arc to the path which is centered at (x, y) position with radius r starting at startAngle and ending at endAngle going in the given direction by anticlockwise (defaulting to clockwise).
            </summary>
      <param name="x">The x coordinate of the arc's center.</param>
      <param name="y">The y coordinate of the arc's center.</param>
      <param name="radius">The arc's radius.</param>
      <param name="startAngle">The angle at which the arc starts, measured clockwise from the positive x axis and expressed in radians.</param>
      <param name="endAngle">The angle at which the arc ends, measured clockwise from the positive x axis and expressed in radians.</param>
      <param name="counterclockwise">Causes the arc to be drawn counter-clockwise between the two angles. By default it is drawn clockwise.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.Ellipse(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
             Adds an ellipse to the path which is centered at (x, y) position with the radii radiusX and radiusY starting at startAngle
             and ending at endAngle going in the given direction by anticlockwise (defaulting to clockwise).
            </summary>
      <param name="x">The x axis of the coordinate for the ellipse's center.</param>
      <param name="y">The y axis of the coordinate for the ellipse's center.</param>
      <param name="radiusX">The ellipse's major-axis radius.</param>
      <param name="radiusY">The ellipse's minor-axis radius.</param>
      <param name="rotation">The rotation for this ellipse, expressed in radians.</param>
      <param name="startAngle">The starting point, measured from the x axis, from which it will be drawn, expressed in radians.</param>
      <param name="endAngle">The end ellipse's angle to which it will be drawn, expressed in radians.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.Ellipse(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
             Adds an ellipse to the path which is centered at (x, y) position with the radii radiusX and radiusY starting at startAngle
             and ending at endAngle going in the given direction by anticlockwise (defaulting to clockwise).
            </summary>
      <param name="x">The x axis of the coordinate for the ellipse's center.</param>
      <param name="y">The y axis of the coordinate for the ellipse's center.</param>
      <param name="radiusX">The ellipse's major-axis radius.</param>
      <param name="radiusY">The ellipse's minor-axis radius.</param>
      <param name="rotation">The rotation for this ellipse, expressed in radians.</param>
      <param name="startAngle">The starting point, measured from the x axis, from which it will be drawn, expressed in radians.</param>
      <param name="endAngle">The end ellipse's angle to which it will be drawn, expressed in radians.</param>
      <param name="anticlockwise">An optional boolean which, if true, draws the ellipse anticlockwise (counter-clockwise), otherwise in a clockwise direction.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Canvas.Path2D.Dispose">
      <summary>
            Disposes object.
            </summary>
    </member>
    <member name="T:Aspose.Html.Services.IService">
      <summary>
            Defines a base interface for service implementation.
            </summary>
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="T:Aspose.Html.Loading.TemplateLoadOptions">
      <summary>
            Specific load options data class.
            </summary>
    </member>
    <member name="P:Aspose.Html.Loading.TemplateLoadOptions.NamesAreCaseSensitive">
      <summary>
            Property that specifies whether the template and data element names will be matched regardless to the character case or not.
            If true, matching is case sensitive; if false, character case will be ignored.
            Default value is true.
            </summary>
    </member>
    <member name="T:Aspose.Html.Saving.DocSaveOptions">
      <summary>
            Specific options data class.
            </summary>
    </member>
    <member name="T:Aspose.Html.Saving.ImageSaveOptions">
      <summary>
            Specific options data class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Saving.ImageSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Saving.ImageSaveOptions" /> class; <see cref="F:Aspose.Html.Rendering.Image.ImageFormat.Png" /> will be used as default image format.
            </summary>
    </member>
    <member name="M:Aspose.Html.Saving.ImageSaveOptions.#ctor(Aspose.Html.Rendering.Image.ImageFormat)">
      <summary>
            Image format <see cref="T:Aspose.Html.Rendering.Image.ImageFormat" /> based on initialization
            </summary>
      <param name="format">Image format</param>
    </member>
    <member name="T:Aspose.Html.Saving.PdfSaveOptions">
      <summary>
            Specific options data class.
            </summary>
    </member>
    <member name="T:Aspose.Html.Saving.XpsSaveOptions">
      <summary>
            Specific options data class.
            </summary>
    </member>
    <member name="T:Aspose.Html.Converters.Converter">
      <summary>
            Shared facade only for most often conversion scenarios.
            It provides a wide range of conversions to the popular formats, such as PDF, XPS, image formats, etc.
            More specific conversion (rendering, saving) user cases are presented by well known and documented low level API functions.
            </summary>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertTemplate(Aspose.Html.HTMLDocument,Aspose.Html.Converters.TemplateData,Aspose.Html.Loading.TemplateLoadOptions,System.String)">
      <summary>
            Merge html template with user data. Result is html file.
            </summary>
      <param name="template">Source skeleton html doc.</param>
      <param name="data">Data for merging (XML, JSON).</param>
      <param name="options">Merging options object.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertTemplate(Aspose.Html.Url,Aspose.Html.Converters.TemplateData,Aspose.Html.Loading.TemplateLoadOptions,System.String)">
      <summary>
            Merge html template with user data. Result is html file.
            </summary>
      <param name="url">Template source document URL.</param>
      <param name="data">Data for merging (XML, JSON).</param>
      <param name="options">Merging options object.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertTemplate(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Converters.TemplateData,Aspose.Html.Loading.TemplateLoadOptions,System.String)">
      <summary>
            Merge html template with user data. Result is html file.
            </summary>
      <param name="url">Template source document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="data">Data for merging (XML, JSON).</param>
      <param name="options">Merging options object.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertTemplate(System.String,Aspose.Html.Converters.TemplateData,Aspose.Html.Loading.TemplateLoadOptions,System.String)">
      <summary>
            Merge html template with user data. Result is html file.
            </summary>
      <param name="sourcePath">Path to template source html file. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="data">Data for merging (XML, JSON).</param>
      <param name="options">Merging options object.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertTemplate(System.String,Aspose.Html.Configuration,Aspose.Html.Converters.TemplateData,Aspose.Html.Loading.TemplateLoadOptions,System.String)">
      <summary>
            Merge html template with user data. Result is html file.
            </summary>
      <param name="sourcePath">Path to template source html file. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="data">Data for merging (XML, JSON).</param>
      <param name="options">Merging options object.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertTemplate(System.String,System.String,Aspose.Html.Converters.TemplateData,Aspose.Html.Loading.TemplateLoadOptions,System.String)">
      <summary>
            Merge html template with user data. Result is html file.
            </summary>
      <param name="content">Inline html template - skeleton.</param>
      <param name="baseUrl">Base URI of the html template. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="data">Data for merging (XML, JSON).</param>
      <param name="options">Merging options object.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertTemplate(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Converters.TemplateData,Aspose.Html.Loading.TemplateLoadOptions,System.String)">
      <summary>
            Merge html template with user data. Result is html file.
            </summary>
      <param name="content">Inline html template - skeleton.</param>
      <param name="baseUrl">Base URI of the html template. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="data">Data for merging (XML, JSON).</param>
      <param name="options">Merging options object.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertTemplate(Aspose.Html.HTMLDocument,Aspose.Html.Converters.TemplateData,Aspose.Html.Loading.TemplateLoadOptions)">
      <summary>
            Merge html template with user data. Result is <see cref="T:Aspose.Html.HTMLDocument" />.
            </summary>
      <param name="template">Source skeleton html doc.</param>
      <param name="data">Data for merging (XML, JSON).</param>
      <param name="options">Merging options object.</param>
      <returns>Conversion result HTMLDocument.</returns>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertTemplate(Aspose.Html.Url,Aspose.Html.Converters.TemplateData,Aspose.Html.Loading.TemplateLoadOptions)">
      <summary>
            Merge html template with user data. Result is <see cref="T:Aspose.Html.HTMLDocument" />.
            </summary>
      <param name="url">Template source document URL.</param>
      <param name="data">Data for merging (XML, JSON).</param>
      <param name="options">Merging options object.</param>
      <returns>Conversion result HTMLDocument.</returns>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertTemplate(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Converters.TemplateData,Aspose.Html.Loading.TemplateLoadOptions)">
      <summary>
            Merge html template with user data. Result is <see cref="T:Aspose.Html.HTMLDocument" />.
            </summary>
      <param name="url">Template source document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="data">Data for merging (XML, JSON).</param>
      <param name="options">Merging options object.</param>
      <returns>Conversion result HTMLDocument.</returns>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertTemplate(System.String,Aspose.Html.Converters.TemplateData,Aspose.Html.Loading.TemplateLoadOptions)">
      <summary>
            Merge html template with user data. Result is <see cref="T:Aspose.Html.HTMLDocument" />.
            </summary>
      <param name="sourcePath">Path to template source html file. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="data">Data for merging (XML, JSON).</param>
      <param name="options">Merging options object.</param>
      <returns>Conversion result HTMLDocument.</returns>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertTemplate(System.String,Aspose.Html.Configuration,Aspose.Html.Converters.TemplateData,Aspose.Html.Loading.TemplateLoadOptions)">
      <summary>
            Merge html template with user data. Result is <see cref="T:Aspose.Html.HTMLDocument" />.
            </summary>
      <param name="sourcePath">Path to template source html file. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="data">Data for merging (XML, JSON).</param>
      <param name="options">Merging options object.</param>
      <returns>Conversion result HTMLDocument.</returns>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertTemplate(System.String,System.String,Aspose.Html.Converters.TemplateData,Aspose.Html.Loading.TemplateLoadOptions)">
      <summary>
            Merge html template with user data. Result is <see cref="T:Aspose.Html.HTMLDocument" />.
            </summary>
      <param name="content">Inline html template - skeleton.</param>
      <param name="baseUrl">Base URI of the html template. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="data">Data for merging (XML, JSON).</param>
      <param name="options">Merging options object.</param>
      <returns>Conversion result HTMLDocument.</returns>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertTemplate(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Converters.TemplateData,Aspose.Html.Loading.TemplateLoadOptions)">
      <summary>
            Merge html template with user data. Result is <see cref="T:Aspose.Html.HTMLDocument" />.
            </summary>
      <param name="content">Inline html template - skeleton.</param>
      <param name="baseUrl">Base URI of the html template. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="data">Data for merging (XML, JSON).</param>
      <param name="options">Merging options object.</param>
      <returns>Conversion result HTMLDocument.</returns>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.HTMLDocument,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert html source document to PDF. Result is pdf file.
            </summary>
      <param name="document">Conversion source <see cref="T:Aspose.Html.HTMLDocument" />.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert html source document to PDF. Result is pdf file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert html source document to PDF. Result is pdf file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert html source document to PDF. Result is pdf file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert html source document to PDF. Result is pdf file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert html source document to PDF. Result is pdf file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert html source document to PDF. Result is pdf file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.HTMLDocument,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source document to PDF. Result is pdf file.
            </summary>
      <param name="document">Conversion source <see cref="T:Aspose.Html.HTMLDocument" />.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source document to PDF. Result is pdf file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source document to PDF. Result is pdf file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source document to PDF. Result is pdf file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source document to PDF. Result is pdf file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source document to PDF. Result is pdf file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source document to PDF. Result is pdf file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.HTMLDocument,Aspose.Html.Saving.MHTMLSaveOptions,System.String)">
      <summary>
            Convert html document to mhtml. Result is mhtml file.
            </summary>
      <param name="document">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Saving.MHTMLSaveOptions,System.String)">
      <summary>
            Convert html document to mhtml. Result is mhtml file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.MHTMLSaveOptions,System.String)">
      <summary>
            Convert html document to mhtml. Result is mhtml file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Saving.MHTMLSaveOptions,System.String)">
      <summary>
            Convert html document to mhtml. Result is mhtml file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.MHTMLSaveOptions,System.String)">
      <summary>
            Convert html document to mhtml. Result is mhtml file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Saving.MHTMLSaveOptions,System.String)">
      <summary>
            Convert html document to mhtml. Result is mhtml file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.MHTMLSaveOptions,System.String)">
      <summary>
            Convert html document to mhtml. Result is mhtml file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.HTMLDocument,Aspose.Html.Saving.MarkdownSaveOptions,System.String)">
      <summary>
            Convert html document to markdown. Result is md file.
            </summary>
      <param name="document">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Saving.MarkdownSaveOptions,System.String)">
      <summary>
            Convert html source to markdown. Result is md file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.MarkdownSaveOptions,System.String)">
      <summary>
            Convert html source to markdown. Result is md file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Saving.MarkdownSaveOptions,System.String)">
      <summary>
            Convert html source to markdown. Result is md file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.MarkdownSaveOptions,System.String)">
      <summary>
            Convert html source to markdown. Result is md file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Saving.MarkdownSaveOptions,System.String)">
      <summary>
            Convert html source to markdown. Result is md file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.MarkdownSaveOptions,System.String)">
      <summary>
            Convert html source to markdown. Result is md file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.HTMLDocument,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert html document to xps. Result is xps file.
            </summary>
      <param name="document">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert html document to xps. Result is xps file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert html document to xps. Result is xps file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert html document to xps. Result is xps file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert html document to xps. Result is xps file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert html document to xps. Result is xps file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert html document to xps. Result is xps file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.HTMLDocument,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source to xps. Result is xps file.
            </summary>
      <param name="document">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source to xps. Result is xps file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source to xps. Result is xps file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source to xps. Result is xps file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source to xps. Result is xps file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source to xps. Result is xps file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source to xps. Result is xps file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.HTMLDocument,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert html document to image. Result is image file.
            </summary>
      <param name="document">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert html document to image. Result is image file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert html document to image. Result is image file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert html document to image. Result is image file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert html document to image. Result is image file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert html document to image. Result is image file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert html document to image. Result is image file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.HTMLDocument,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source to image. Result is image file.
            </summary>
      <param name="document">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source to image. Result is image file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source to image. Result is image file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source to image. Result is image file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source to image. Result is image file.
            </summary>
      <param name="sourcePath">Html file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source to image. Result is image file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert html source to image. Result is image file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Dom.Svg.SVGDocument,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert svg document to xps.Result is xps file.
            </summary>
      <param name="source">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert svg source to xps. Result is xps file.
            </summary>
      <param name="url">Source document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert svg source to xps. Result is xps file.
            </summary>
      <param name="url">Source document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert svg source to xps. Result is xps file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert svg source to xps. Result is xps file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert svg source to xps. Result is xps file.
            </summary>
      <param name="content">Inline string svg content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert svg source to xps. Result is xps file.
            </summary>
      <param name="content">Inline string svg content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Dom.Svg.SVGDocument,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to xps. Result is xps file.
            </summary>
      <param name="document">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to xps. Result is xps file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to xps. Result is xps file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to xps. Result is xps file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to xps. Result is xps file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to xps. Result is xps file.
            </summary>
      <param name="content">Inline string svg content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to xps. Result is xps file.
            </summary>
      <param name="content">Inline string svg content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Dom.Svg.SVGDocument,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert SVG document to DOCX. Result is docx file.
            </summary>
      <param name="source">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert SVG document to DOCX. Result is docx file.
            </summary>
      <param name="url">Source document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert SVG document to DOCX. Result is docx file.
            </summary>
      <param name="url">Source document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert SVG document to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert SVG document to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert SVG document to DOCX. Result is docx file.
            </summary>
      <param name="content">Inline string svg content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert SVG document to DOCX. Result is docx file.
            </summary>
      <param name="content">Inline string svg content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Dom.Svg.SVGDocument,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert SVG document to DOCX. Result is docx file.
            </summary>
      <param name="document">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert SVG document to DOCX. Result is docx file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert SVG document to DOCX. Result is docx file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert SVG document to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert SVG document to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert SVG document to DOCX. Result is docx file.
            </summary>
      <param name="content">Inline string svg content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert SVG document to DOCX. Result is docx file.
            </summary>
      <param name="content">Inline string svg content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Dom.Svg.SVGDocument,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert svg source to pdf. Result is pdf file.
            </summary>
      <param name="source">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert svg source to pdf. Result is pdf file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert svg source to pdf. Result is pdf file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert svg source to pdf. Result is pdf file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert svg source to pdf. Result is pdf file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert svg source to pdf. Result is pdf file.
            </summary>
      <param name="content">Inline string svg content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert svg source to pdf. Result is pdf file.
            </summary>
      <param name="content">Inline string svg content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Dom.Svg.SVGDocument,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to pdf. Result is pdf file.
            </summary>
      <param name="document">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to pdf. Result is pdf file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to pdf. Result is pdf file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to pdf. Result is pdf file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to pdf. Result is pdf file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to pdf. Result is pdf file.
            </summary>
      <param name="content">Source document content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to pdf. Result is pdf file.
            </summary>
      <param name="content">Inline string svg content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Dom.Svg.SVGDocument,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert svg document to image. Result is image file.
            </summary>
      <param name="source">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert svg document to image. Result is image file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert svg document to image. Result is image file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert svg document to image. Result is image file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert svg document to image. Result is image file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert svg document to image. Result is image file.
            </summary>
      <param name="content">Inline string svg content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert svg document to image. Result is image file.
            </summary>
      <param name="content">Inline string svg content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Dom.Svg.SVGDocument,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to image. Result is image file.
            </summary>
      <param name="document">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to image. Result is image file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to image. Result is image file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to image. Result is image file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to image. Result is image file.
            </summary>
      <param name="sourcePath">Svg file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to image. Result is image file.
            </summary>
      <param name="content">Inline string svg content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertSVG(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert svg source to image. Result is image file.
            </summary>
      <param name="content">Inline string svg content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert epub source to xps. Result is xps file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert epub source to xps. Result is xps file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert epub source to xps. Result is xps file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert epub source to xps. Result is xps file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert epub source to xps. Result is xps file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert epub source to xps. Result is xps file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to xps. Result is xps file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to xps. Result is xps file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to xps. Result is xps file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to xps. Result is xps file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to xps. Result is xps file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to xps. Result is xps file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert EPUB source to DOCX. Result is docx file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert EPUB source to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert EPUB source to DOCX. Result is docx file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert EPUB source to DOCX. Result is docx file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert EPUB source to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert EPUB source to DOCX. Result is docx file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert EPUB source to DOCX. Result is docx file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert EPUB source to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert EPUB source to DOCX. Result is docx file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert EPUB source to DOCX. Result is docx file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert EPUB source to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert EPUB source to DOCX. Result is docx file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert epub source to pdf. Result is pdf file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert epub source to pdf. Result is pdf file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert epub source to pdf. Result is pdf file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert epub source to pdf. Result is pdf file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert epub source to pdf. Result is pdf file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert epub source to pdf. Result is pdf file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to pdf. Result is pdf file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to pdf. Result is pdf file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to pdf. Result is pdf file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to pdf. Result is pdf file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to pdf. Result is pdf file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to pdf. Result is pdf file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert epub source to image. Result is image file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert epub source to image. Result is image file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert epub source to image. Result is image file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert epub source to image. Result is image file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert epub source to image. Result is image file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert epub source to image. Result is image file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to image. Result is image file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to image. Result is image file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to image. Result is image file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to image. Result is image file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to image. Result is image file.
            </summary>
      <param name="sourcePath">EPUB source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertEPUB(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert epub source to image. Result is image file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMarkdown(System.IO.Stream,System.String)">
      <summary>
            Convert Markdown source to html. Result is <see cref="T:Aspose.Html.HTMLDocument" />.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <returns>Conversion result <see cref="T:Aspose.Html.HTMLDocument" />.</returns>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMarkdown(System.IO.Stream,System.String,Aspose.Html.Configuration)">
      <summary>
            Convert Markdown source to html. Result is <see cref="T:Aspose.Html.HTMLDocument" />.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <returns>Conversion result <see cref="T:Aspose.Html.HTMLDocument" />.</returns>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMarkdown(System.IO.Stream,System.String,System.String)">
      <summary>
            Convert Markdown source to html. Result is html file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMarkdown(System.IO.Stream,System.String,Aspose.Html.Configuration,System.String)">
      <summary>
            Convert Markdown source to html. Result is html file.
            </summary>
      <param name="stream">Conversion source.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMarkdown(System.String)">
      <summary>
            Convert Markdown source to html. Result is <see cref="T:Aspose.Html.HTMLDocument" />.
            </summary>
      <param name="sourcePath">Path to source Markdown file. It will be combined with the current directory path to form an absolute URL.</param>
      <returns>Conversion result <see cref="T:Aspose.Html.HTMLDocument" />.</returns>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMarkdown(System.String,Aspose.Html.Configuration)">
      <summary>
            Convert Markdown source to html. Result is <see cref="T:Aspose.Html.HTMLDocument" />.
            </summary>
      <param name="sourcePath">Path to source Markdown file. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <returns>Conversion result <see cref="T:Aspose.Html.HTMLDocument" />.</returns>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMarkdown(System.String,System.String)">
      <summary>
            Convert Markdown source to html. Result is html file.
            </summary>
      <param name="sourcePath">Path to source Markdown file. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMarkdown(System.String,Aspose.Html.Configuration,System.String)">
      <summary>
            Convert Markdown source to html. Result is html file.
            </summary>
      <param name="sourcePath">Path to source Markdown file. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert mhtml source to xps. Result is xps file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert mhtml source to xps. Result is xps file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert mhtml source to xps. Result is xps file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert mhtml source to xps. Result is xps file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert mhtml source to xps. Result is xps file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,System.String)">
      <summary>
            Convert mhtml source to xps. Result is xps file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to xps. Result is xps file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to xps. Result is xps file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to xps. Result is xps file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to xps. Result is xps file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to xps. Result is xps file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.XpsSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to xps. Result is xps file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert MHTML source to DOCX. Result is docx file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert MHTML source to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert MHTML source to DOCX. Result is docx file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert MHTML source to DOCX. Result is docx file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert MHTML source to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert MHTML source to DOCX. Result is docx file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert MHTML source to DOCX. Result is docx file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert MHTML source to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert MHTML source to DOCX. Result is docx file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert MHTML source to DOCX. Result is docx file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert MHTML source to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert MHTML source to DOCX. Result is docx file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert mhtml source to pdf. Result is pdf file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert mhtml source to pdf. Result is pdf file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert mhtml source to pdf. Result is pdf file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert mhtml source to pdf. Result is pdf file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert mhtml source to pdf. Result is pdf file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,System.String)">
      <summary>
            Convert mhtml source to pdf. Result is pdf file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to pdf. Result is pdf file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to pdf. Result is pdf file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to pdf. Result is pdf file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to pdf. Result is pdf file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to pdf. Result is pdf file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.PdfSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to pdf. Result is pdf file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert mhtml source to image. Result is image file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert mhtml source to image. Result is image file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert mhtml source to image. Result is image file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert mhtml source to image. Result is image file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert mhtml source to image. Result is image file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,System.String)">
      <summary>
            Convert mhtml source to image. Result is image file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to image. Result is image file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to image. Result is image file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to image. Result is image file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.IO.Stream,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to image. Result is image file.
            </summary>
      <param name="stream">Conversion source stream.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to image. Result is image file.
            </summary>
      <param name="sourcePath">MHTML source file path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertMHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.ImageSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert mhtml source to image. Result is image file.
            </summary>
      <param name="sourceUrl">The source URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.HTMLDocument,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert HTML source document to DOCX. Result is docx file.
            </summary>
      <param name="document">Conversion source <see cref="T:Aspose.Html.HTMLDocument" />.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert HTML source document to DOCX. Result is docx file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert HTML source document to DOCX. Result is docx file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert HTML source document to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">HTML file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert HTML source document to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">HTML file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert HTML source document to DOCX. Result is docx file.
            </summary>
      <param name="content">Inline string HTML content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,System.String)">
      <summary>
            Convert HTML source document to DOCX. Result is docx file.
            </summary>
      <param name="content">Inline string html content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="outputPath">Output file path.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.HTMLDocument,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert HTML source document to DOCX. Result is docx file.
            </summary>
      <param name="document">Conversion source <see cref="T:Aspose.Html.HTMLDocument" />.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert HTML source document to DOCX. Result is docx file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(Aspose.Html.Url,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert HTML source document to DOCX. Result is docx file.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert HTML source document to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">HTML file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert HTML source document to DOCX. Result is docx file.
            </summary>
      <param name="sourcePath">HTML file source path. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert HTML source document to DOCX. Result is docx file.
            </summary>
      <param name="content">Inline string HTML content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="M:Aspose.Html.Converters.Converter.ConvertHTML(System.String,System.String,Aspose.Html.Configuration,Aspose.Html.Saving.DocSaveOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Convert HTML source document to DOCX. Result is docx file.
            </summary>
      <param name="content">Inline string HTML content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <param name="options">Conversion options.</param>
      <param name="provider">Implementation of the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface, which will be used to get an output stream.</param>
    </member>
    <member name="T:Aspose.Html.Converters.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Converters</b> namespace goal is easy access to conversion methods. It provides a wide range of conversions to the popular formats, such as PDF, XPS, image formats, etc.
            More specific conversion (rendering, saving) user cases are presented by well
            known and documented low level API functions in subject oriented namespaces.
            </summary>
    </member>
    <member name="T:Aspose.Html.Converters.TemplateContent">
      <summary>
            Content type identifier.
            </summary>
    </member>
    <member name="F:Aspose.Html.Converters.TemplateContent.Undefined">
      <summary>
            Undetermined value.
            </summary>
    </member>
    <member name="F:Aspose.Html.Converters.TemplateContent.XML">
      <summary>
            XML content identifier.
            </summary>
    </member>
    <member name="F:Aspose.Html.Converters.TemplateContent.JSON">
      <summary>
            JSON content identifier.
            </summary>
    </member>
    <member name="T:Aspose.Html.Converters.TemplateContentOptions">
      <summary>
            Inline content object for merging processing.
            </summary>
    </member>
    <member name="M:Aspose.Html.Converters.TemplateContentOptions.#ctor(System.String,Aspose.Html.Converters.TemplateContent)">
      <summary>
            Inline (String) based initialization
            </summary>
      <param name="dataContent">Inline (String) content.</param>
      <param name="contentType">Content type.</param>
    </member>
    <member name="P:Aspose.Html.Converters.TemplateContentOptions.DataContent">
      <summary>
            Data content property.
            </summary>
    </member>
    <member name="P:Aspose.Html.Converters.TemplateContentOptions.ContentType">
      <summary>
            Content type property.
            </summary>
    </member>
    <member name="P:Aspose.Html.Converters.TemplateContentOptions.Format">
      <summary>
            String representation of <see cref="P:Aspose.Html.Converters.TemplateContentOptions.ContentType" /> property.
            </summary>
    </member>
    <member name="T:Aspose.Html.Converters.TemplateData">
      <summary>
            Merging (User) data object.
            </summary>
    </member>
    <member name="M:Aspose.Html.Converters.TemplateData.#ctor(Aspose.Html.Converters.TemplateContentOptions)">
      <summary>
            Inline content based on initialization (XML, JSON).
            </summary>
      <param name="contentOptions">Content description object.</param>
    </member>
    <member name="M:Aspose.Html.Converters.TemplateData.#ctor(System.String)">
      <summary>
            Absolute path to data file (XML, JSON) based on initialization.
            </summary>
      <param name="dataPath">Path to data file (XML, JSON)</param>
    </member>
    <member name="P:Aspose.Html.Converters.TemplateData.DataPath">
      <summary>
            Data path property.
            </summary>
    </member>
    <member name="P:Aspose.Html.Converters.TemplateData.ContentOptions">
      <summary>
            Content object property.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.Counter">
      <summary>
            The Counter interface is used to represent any counter or counters function value. This interface reflects the values in the underlying style property.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Counter.Identifier">
      <summary>
            This attribute is used for the identifier of the counter.
            </summary>
      <value>
            The counter identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Counter.ListStyle">
      <summary>
            This attribute is used for the style of the list.
            </summary>
      <value>
            The list style identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Counter.Separator">
      <summary>
            This attribute is used for the separator of the nested counters.
            </summary>
      <value>
            The counter separator.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.CSSPrimitiveValue">
      <summary>
            The CSSPrimitiveValue interface represents a single CSS value. This interface may be used to determine the value of a specific style property currently set in a block or to set a specific style property explicitly within the block. An instance of this interface might be obtained from the getPropertyCSSValue method of the CSSStyleDeclaration interface. A CSSPrimitiveValue object only occurs in a context of a CSS property.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_UNKNOWN">
      <summary>
            The value is not a recognized CSS2 value. The value can only be obtained by using the cssText attribute.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_NUMBER">
      <summary>
            The value is a simple number. The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_PERCENTAGE">
      <summary>
            The value is a percentage. The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_EMS">
      <summary>
            The value is a length (ems). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_EXS">
      <summary>
            The value is a length (exs). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_PX">
      <summary>
            The value is a length (px). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_CM">
      <summary>
            The value is a length (cm). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_MM">
      <summary>
            The value is a length (mm). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_IN">
      <summary>
            The value is a length (in). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_PT">
      <summary>
            The value is a length (pt). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_PC">
      <summary>
            The value is a length (pc). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_DEG">
      <summary>
            The value is an angle (deg). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_RAD">
      <summary>
            The value is an angle (rad). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_GRAD">
      <summary>
            The value is an angle (grad). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_MS">
      <summary>
            The value is a time (ms). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_S">
      <summary>
            The value is a time (s). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_HZ">
      <summary>
            The value is a frequency (Hz). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_KHZ">
      <summary>
            The value is a frequency (kHz). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_DIMENSION">
      <summary>
            The value is a number with an unknown dimension. The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_REM">
      <summary>
            The value is a length (rem). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_CH">
      <summary>
            The value is a length (ch). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_STRING">
      <summary>
            The value is a STRING. The value can be obtained by using the getStringValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_URI">
      <summary>
            The value is a URI. The value can be obtained by using the getStringValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_IDENT">
      <summary>
            The value is an identifier. The value can be obtained by using the getStringValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_ATTR">
      <summary>
            The value is a attribute function. The value can be obtained by using the getStringValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_COUNTER">
      <summary>
            The value is a counter or counters function. The value can be obtained by using the GetCounterValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_RECT">
      <summary>
            The value is a rect function. The value can be obtained by using the GetRectValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_RGBCOLOR">
      <summary>
            The value is a RGB color. The value can be obtained by using the GetRGBColorValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_DPI">
      <summary>
            The value is a dots per inch (dpi).
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_DPCM">
      <summary>
            The value is a dots per centimeter (dpcm).
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_DPPX">
      <summary>
            The value is a dots per ‘px’ unit (dppx).
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_VW">
      <summary>
            The value is a percentage of the full viewport width.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_VH">
      <summary>
            The value is a percentage of the full viewport height.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_VMIN">
      <summary>
            The value is a percentage of the viewport width or height, whichever is smaller.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_VMAX">
      <summary>
            The value is a percentage of the viewport width or height, whichever is larger.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Css.CSSPrimitiveValue" /> class.
            </summary>
      <param name="unitType">Type of the unit.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.SetFloatValue(System.UInt16,System.Single)">
      <summary>
            A method to set the float value with a specified unit. If the property attached with this value can not accept the specified unit or the float value, the value will be unchanged and a DOMException will be raised.
            </summary>
      <param name="unitType">Type of the unit.</param>
      <param name="floatValue">The float value.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.GetFloatValue(System.UInt16)">
      <summary>
            This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DOMException is raised.
            </summary>
      <param name="unitType">Type of the unit.</param>
      <returns>Returns value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.SetIntValue(System.UInt16,System.Int32)">
      <summary>
            A method to set the int value with a specified unit. If the property attached with this value can not accept the specified unit or the int value, the value will be unchanged and a DOMException will be raised.
            </summary>
      <param name="unitType">Type of the unit.</param>
      <param name="intValue">The int value.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.GetIntValue(System.UInt16)">
      <summary>
            This method is used to get an int value in a specified unit. If this CSS value doesn't contain an int value or can't be converted into the specified unit, a DOMException is raised.
            </summary>
      <param name="unitType">Type of the unit.</param>
      <returns>Returns value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.SetStringValue(System.UInt16,System.String)">
      <summary>
            A method to set the string value with the specified unit. If the property attached to this value can't accept the specified unit or the string value, the value will be unchanged and a DOMException will be raised.
            </summary>
      <param name="stringType">Type of the string.</param>
      <param name="stringValue">The string value.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.GetStringValue">
      <summary>
            This method is used to get the string value. If the CSS value doesn't contain a string value, a DOMException is raised.
            </summary>
      <returns>Returns value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.GetCounterValue">
      <summary>
            This method is used to get the Counter value. If this CSS value doesn't contain a counter value, a DOMException is raised. Modification to the corresponding style property can be achieved using the Counter interface.
            </summary>
      <returns>Returns Counter value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.GetRectValue">
      <summary>
            This method is used to get the Rect value. If this CSS value doesn't contain a rect value, a DOMException is raised. Modification to the corresponding style property can be achieved using the Rect interface.
            </summary>
      <returns>Returns Rect value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.GetRGBColorValue">
      <summary>
            This method is used to get the RGB color. If this CSS value doesn't contain a RGB color value, a DOMException is raised. Modification to the corresponding style property can be achieved using the RGBColor interface.
            </summary>
      <returns>Returns RGB color value</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.CSSPrimitiveValue.PrimitiveType">
      <summary>
            The type of the value as defined by the constants specified above.
            </summary>
      <value>
            The type of the primitive.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.CSSValueList">
      <summary>
            The CSSValueList interface provides the abstraction of an ordered collection of CSS values.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValueList.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Css.CSSValueList" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValueList.#ctor(System.Collections.Generic.IEnumerable{Aspose.Html.Dom.Css.CSSValue})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Css.CSSValueList" /> class.
            </summary>
      <param name="values">The values.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValueList.#ctor(Aspose.Html.Dom.Css.CSSValue[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Css.CSSValueList" /> class.
            </summary>
      <param name="values">The values.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValueList.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValueList.Equals(Aspose.Html.Dom.Css.CSSValue)">
      <summary>
            Determines whether the specified object is equal to this instance.
            </summary>
      <param name="obj">The object to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:Aspose.Html.Dom.Css.CSSValue" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValueList.GetPlatformType">
      <summary>
            This method is used to retrieve ECMAScript object <see cref="T:System.Type" />.
            </summary>
      <returns>
            The ECMAScript object <see cref="T:System.Type" />.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.CSSValueList.CSSText">
      <summary>
            A string representation of the current value.
            </summary>
      <value>
            The CSS text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.CSSValueList.Length">
      <summary>
            The number of CSSValues in the list.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.CSSValueList.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Html.Dom.Css.CSSValue" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Css.CSSValue" />.
            </value>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSCharsetRule">
      <summary>
            The CSSCharsetRule interface represents a @charset rule in a CSS style sheet. 
            The value of the encoding attribute does not affect the encoding of text data in the DOM objects; this encoding is always UTF-16. After a stylesheet is loaded, the value of the encoding attribute is the value found in the @charset rule. If there was no @charset in the original document, then no CSSCharsetRule is created. 
            The value of the encoding attribute may also be used as a hint for the encoding used on serialization of the style sheet.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSCharsetRule.Encoding">
      <summary>
            The encoding information used in this @charset rule.
            </summary>
      <value>
            The encoding.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSCounterStyleRule">
      <summary>
            The @counter-style rule allows authors to define a custom counter style.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSCounterStyleRule.Name">
      <summary>
            Gets the name.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSCounterStyleRule.CounterType">
      <summary>
            Gets the type of the counter.
            </summary>
      <value>
            The type of the counter.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSCounterStyleRule.Glyphs">
      <summary>
            Gets the glyphs.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSCounterStyleRule.Prefix">
      <summary>
            Gets the prefix.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSCounterStyleRule.Suffix">
      <summary>
            Gets the suffix.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSCounterStyleRule.Fallback">
      <summary>
            Gets the fallback.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSFontFaceRule">
      <summary>
            The CSSFontFaceRule interface represents a @font-face rule in a CSS style sheet. The @font-face rule is used to hold a set of font descriptions.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSFontFaceRule.Style">
      <summary>
            The declaration-block of this rule.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSImportRule">
      <summary>
            The CSSImportRule interface represents a @import rule within a CSS style sheet. The @import rule is used to import style rules from other style sheets.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSImportRule.Href">
      <summary>
            The location of the style sheet to be imported. The attribute will not contain the "url(...)" specifier around the URI.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSImportRule.Media">
      <summary>
            A list of media types for which this style sheet may be used.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSImportRule.StyleSheet">
      <summary>
            The style sheet referred to by this rule, if it has been loaded. The value of this attribute is null if the style sheet has not yet been loaded or if it will not be loaded (e.g. if the style sheet is for a media type not supported by the user agent).
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSKeyframeRule">
      <summary>
            The CSSKeyframeRule interface represents the style rule for a single key.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSKeyframeRule.KeyText">
      <summary>
            This attribute represents the keyframe selector as a comma-separated list of percentage values. The ‘from’ and ‘to’ keywords map to ‘0%’ and ‘100%’, respectively.
            </summary>
      <value>
            The key text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSKeyframeRule.Style">
      <summary>
            This attribute represents the style associated with this keyframe.
            </summary>
      <value>
            The style.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSKeyframesRule">
      <summary>
            The CSSKeyframesRule interface represents a complete set of keyframes for a single animation
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSKeyframesRule.AppendRule(System.String)">
      <summary>
            The appendRule method appends the passed CSSKeyframeRule into the list at the passed key
            </summary>
      <param name="rule">The rule to be appended, expressed in the same syntax as one entry in the ‘@keyframes’ rule</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSKeyframesRule.DeleteRule(System.String)">
      <summary>
            The deleteRule method deletes the CSSKeyframeRule with the passed key. If a rule with this key does not exist, the method does nothing
            </summary>
      <param name="key">The key which describes the rule to be deleted. The key must resolve to a number between 0 and 1, or the rule is ignored</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSKeyframesRule.FindRule(System.String)">
      <summary>
            The findRule method returns the rule with a key matching the passed key. If no such rule exists, a null value is returned
            </summary>
      <param name="key">The key which described the rule to find. The key must resolve to a number between 0 and 1, or the rule is ignored.</param>
      <returns>The found rule</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSKeyframesRule.Name">
      <summary>
            This attribute is the name of the keyframes, used by the ‘animation-name’ property.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSKeyframesRule.CSSRules">
      <summary>
            This attribute gives access to the keyframes in the list
            </summary>
      <value>
            The CSS rules.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSMarginRule">
      <summary>
            The CSSMarginRule interface represents a margin at-rule.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSMarginRule.Name">
      <summary>
            The name attribute must return the name of the margin at-rule. The @ character is not included in the name.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSMarginRule.Style">
      <summary>
            The declaration-block of this rule.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSMediaRule">
      <summary>
            The CSSMediaRule interface represents a @media rule in a CSS style sheet. A @media rule can be used to delimit style rules for specific media types.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSMediaRule.InsertRule(System.String,System.Int64)">
      <summary>
            Used to insert a new rule into the media block.
            </summary>
      <param name="rule">The media rule.</param>
      <param name="index">The index.</param>
      <returns>The inserted index.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSMediaRule.DeleteRule(System.Int64)">
      <summary>
            Used to delete a rule from the media block.
            </summary>
      <param name="index">The index.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSMediaRule.Media">
      <summary>
            A list of media types for this rule.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSMediaRule.CSSRules">
      <summary>
            A list of all CSS rules contained within the media block.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSPageRule">
      <summary>
            The CSSPageRule interface represents a @page rule within a CSS style sheet. The @page rule is used to specify the dimensions, orientation, margins, etc. of a page box for paged media.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSPageRule.SelectorText">
      <summary>
            The parsable textual representation of the page selector for the rule.
            </summary>
      <value>
            The selector text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSPageRule.Style">
      <summary>
            The declaration-block of this rule.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSStyleRule">
      <summary>
            The CSSStyleRule interface represents a single rule set in a CSS style sheet.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleRule.SelectorText">
      <summary>
            The textual representation of the selector for the rule set. The implementation may have stripped out insignificant whitespace while parsing the selector.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleRule.Style">
      <summary>
            The declaration-block of this rule set.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSUnknownRule">
      <summary>
            The CSSUnknownRule interface represents an at-rule not supported by this user agent.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSValueList">
      <summary>
            The interface provides the abstraction of an ordered collection of CSS values.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSValueList.Length">
      <summary>
            The number of CSSValues in the list.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSValueList.Item(System.Int32)">
      <summary>
            Method returns the <see cref="T:Aspose.Html.Dom.Css.CSSValue" /> at the specified index.
            http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/css.html#CSS-CSSValueList
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Css.CSSValue" />.
            </value>
      <param name="index">The index.</param>
      <returns>
            The CSSValue.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Css.IDocumentCSS">
      <summary>
            This interface represents a document with a CSS view.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.IDocumentCSS.GetOverrideStyle(Aspose.Html.Dom.Element,System.String)">
      <summary>
            This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element.
             </summary>
      <param name="elt">The element whose style is to be modified. This parameter cannot be null.</param>
      <param name="pseudoElt">The pseudo-element or null if none.</param>
      <returns>The override style declaration</returns>
    </member>
    <member name="T:Aspose.Html.Dom.Css.IElementCSSInlineStyle">
      <summary>
            Inline style information attached to elements is exposed through the style attribute. This represents the contents of the STYLE attribute for HTML elements (or elements in other schemas or DTDs which use the STYLE attribute in the same way). 
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IElementCSSInlineStyle.Style">
      <summary>
            Represents Represents a style attribute that allows author to directly apply style information to specific element.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Dom.Css</b> namespace is for all CSS related manipulations.
            It concentrates around CSS property name - value pairs
            specified by CSS official documents.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.Rect">
      <summary>
            The Rect interface is used to represent any rect value. This interface reflects the values in the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects modify the style property.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Rect.Top">
      <summary>
            This attribute is used for the top of the rect.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Rect.Right">
      <summary>
            This attribute is used for the right of the rect.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Rect.Bottom">
      <summary>
            This attribute is used for the bottom of the rect.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Rect.Left">
      <summary>
            This attribute is used for the left of the rect.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.RGBColor">
      <summary>
            The RGBColor interface is used to represent any RGB color value. This interface reflects the values in the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects modify the style property.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.RGBColor.ToNative">
      <summary>
            Converts to the native color object.
            </summary>
      <returns>The <see cref="T:System.Drawing.Color" /> object.</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.RGBColor.Red">
      <summary>
            This attribute is used for the red value of the RGB color.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.RGBColor.Green">
      <summary>
            This attribute is used for the green value of the RGB color.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.RGBColor.Blue">
      <summary>
            This attribute is used for the blue value of the RGB color.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.RGBColor.Alpha">
      <summary>
            This attribute is used for the alpha value of the RGB color.
            </summary>
    </member>
    <member name="T:Aspose.Html.ArrayBuffer">
      <summary>
            The ArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer. 
            </summary>
    </member>
    <member name="M:Aspose.Html.ArrayBuffer.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.ArrayBuffer" /> class.
            </summary>
      <param name="length">The size, in bytes, of the array buffer to create.</param>
    </member>
    <member name="M:Aspose.Html.ArrayBuffer.#ctor(System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.ArrayBuffer" /> class.
            </summary>
      <param name="data">The raw binary data.</param>
    </member>
    <member name="M:Aspose.Html.ArrayBuffer.op_Explicit(Aspose.Html.ArrayBuffer)~System.Byte[]">
      <summary>
            Performs an explicit conversion from <see cref="T:Aspose.Html.ArrayBuffer" /> to <see cref="!:System.Byte[]" />.
            </summary>
      <param name="value">The value.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="P:Aspose.Html.ArrayBuffer.ByteLength">
      <summary>
            The byteLength accessor property represents the length of an ArrayBuffer in bytes.
            </summary>
      <value>
            The length in bytes.
            </value>
    </member>
    <member name="P:Aspose.Html.ArrayBuffer.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:System.Byte" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:System.Byte" />.
            </value>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Html.Configuration">
      <summary>
            Represents the configuration context object that is used to set up the environment settings for the application.
            </summary>
    </member>
    <member name="M:Aspose.Html.Configuration.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Configuration" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Configuration.GetService``1">
      <summary>
            Gets the requested service.
            </summary>
      <typeparam name="TService">The type of service to retrieve.</typeparam>
      <returns>An instance of the service if it could be found, or <value>null</value> if it could not be found</returns>
    </member>
    <member name="M:Aspose.Html.Configuration.AddService``1(``0)">
      <summary>
            Adds the specified service to the configuration.
            </summary>
      <typeparam name="TService">The type of service to add.</typeparam>
      <param name="service">An instance of the service to add.</param>
    </member>
    <member name="M:Aspose.Html.Configuration.InitializeServices">
      <summary>
            Initializes the services.
            </summary>
    </member>
    <member name="M:Aspose.Html.Configuration.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="P:Aspose.Html.Configuration.Security">
      <summary>
            Gets or sets the sandboxing flag of the configuration.
            </summary>
      <value>
            The security.
            </value>
    </member>
    <member name="T:Aspose.Html.Float32Array">
      <summary>
            Represents an array of 32-bit floating point numbers (corresponding to the C float data type) in the platform byte order.
            </summary>
    </member>
    <member name="F:Aspose.Html.Float32Array.BYTES_PER_ELEMENT">
      <summary>
            The property represents the size in bytes of each element in an typed array.
            </summary>
    </member>
    <member name="M:Aspose.Html.Float32Array.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Float32Array" /> class.
            </summary>
      <param name="length">The length (number of elements).</param>
    </member>
    <member name="M:Aspose.Html.Float32Array.#ctor(System.Single[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Float32Array" /> class.
            </summary>
      <param name="data">The array data.</param>
    </member>
    <member name="M:Aspose.Html.Float32Array.#ctor(Aspose.Html.ArrayBuffer)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Float32Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
    </member>
    <member name="M:Aspose.Html.Float32Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Float32Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
    </member>
    <member name="M:Aspose.Html.Float32Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Float32Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
      <param name="length">The length.</param>
    </member>
    <member name="P:Aspose.Html.Float32Array.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:System.Single" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:System.Single" />.
            </value>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Html.Float64Array">
      <summary>
            Represents an array of 64-bit floating point numbers (corresponding to the C float data type) in the platform byte order.
            </summary>
    </member>
    <member name="F:Aspose.Html.Float64Array.BYTES_PER_ELEMENT">
      <summary>
            The property represents the size in bytes of each element in an typed array.
            </summary>
    </member>
    <member name="M:Aspose.Html.Float64Array.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Float64Array" /> class.
            </summary>
      <param name="length">The length (number of elements).</param>
    </member>
    <member name="M:Aspose.Html.Float64Array.#ctor(System.Double[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Float64Array" /> class.
            </summary>
      <param name="data">The array data.</param>
    </member>
    <member name="M:Aspose.Html.Float64Array.#ctor(Aspose.Html.ArrayBuffer)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Float64Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
    </member>
    <member name="M:Aspose.Html.Float64Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Float64Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
    </member>
    <member name="M:Aspose.Html.Float64Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Float64Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
      <param name="length">The length.</param>
    </member>
    <member name="P:Aspose.Html.Float64Array.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:System.Double" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:System.Double" />.
            </value>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Html.FontsSettings">
      <summary>
            Represents fonts handling settings.
            </summary>
    </member>
    <member name="M:Aspose.Html.FontsSettings.GetFontsLookupFolders">
      <summary>
            Gets a copy of array which contains fonts folders. Fonts found in these folders are used for characters rendering.
            </summary>
      <returns>A copy of fonts folders array.</returns>
    </member>
    <member name="M:Aspose.Html.FontsSettings.SetFontsLookupFolder(System.String)">
      <summary>
            Sets folder used during fonts selection.
            </summary>
      <param name="fontsFolder">The fonts folder.</param>
    </member>
    <member name="M:Aspose.Html.FontsSettings.SetFontsLookupFolder(System.String,System.Boolean)">
      <summary>
            Sets folder used during fonts selection.
            </summary>
      <param name="fontsFolder">The fonts folder.</param>
      <param name="recursive">If set to <c>true</c> all nested directories will be used. Default value is <c>false</c>.</param>
    </member>
    <member name="M:Aspose.Html.FontsSettings.SetFontsLookupFolders(System.String[])">
      <summary>
            Sets an array of folders used during fonts selection.
            </summary>
      <param name="fontsFolders">The fonts folders.</param>
    </member>
    <member name="M:Aspose.Html.FontsSettings.SetFontsLookupFolders(System.String[],System.Boolean)">
      <summary>
            Sets an array of folders used during fonts selection.
            </summary>
      <param name="fontsFolders">The fonts folders.</param>
      <param name="recursive">If set to <c>true</c> all nested directories will be used. Default value is <c>false</c>.</param>
    </member>
    <member name="P:Aspose.Html.FontsSettings.FontMatcher">
      <summary>
            Gets or sets the class which allows you to control some parts of the font matching algorithm.
            </summary>
    </member>
    <member name="T:Aspose.Html.IDocumentFragmentElement">
      <summary>
            Represents common interface for all Document Fragment elements.
            </summary>
    </member>
    <member name="P:Aspose.Html.IDocumentFragmentElement.Content">
      <summary>
            Gets the instance of the <see cref="T:Aspose.Html.Dom.DocumentFragment" />.
            </summary>
      <value>
            The content.
            </value>
    </member>
    <member name="T:Aspose.Html.IFormAssociatedElement">
      <summary>
            A form-associated element can have a relationship with a form element, which is called the element's form owner. If a form-associated element is not associated with a form element, its form owner is said to be null.
            A form-associated element is, by default, associated with its nearest ancestor form element (as described below), but, if it is reassociateable, may have a form attribute specified to override this.
            </summary>
    </member>
    <member name="P:Aspose.Html.IFormAssociatedElement.Form">
      <summary>
            Gets or sets the form instance.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Element" /> instance.
            </value>
    </member>
    <member name="T:Aspose.Html.IHTMLFormElement">
      <summary>
            Represents a base interface that should be implemented by HTML Form Elements.
            </summary>
    </member>
    <member name="P:Aspose.Html.IHTMLFormElement.Elements">
      <summary>
            Gets the collection of the child form elements.
            </summary>
      <value>
            The elements.
            </value>
    </member>
    <member name="T:Aspose.Html.Int16Array">
      <summary>
            Represents an array of twos-complement 16-bit signed integers in the platform byte order. 
            </summary>
    </member>
    <member name="F:Aspose.Html.Int16Array.BYTES_PER_ELEMENT">
      <summary>
            The property represents the size in bytes of each element in an typed array.
            </summary>
    </member>
    <member name="M:Aspose.Html.Int16Array.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Int16Array" /> class.
            </summary>
      <param name="length">The length (number of elements).</param>
    </member>
    <member name="M:Aspose.Html.Int16Array.#ctor(System.Int16[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Int16Array" /> class.
            </summary>
      <param name="data">The array data.</param>
    </member>
    <member name="M:Aspose.Html.Int16Array.#ctor(Aspose.Html.ArrayBuffer)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Int16Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
    </member>
    <member name="M:Aspose.Html.Int16Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Int16Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
    </member>
    <member name="M:Aspose.Html.Int16Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Int16Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
      <param name="length">The length.</param>
    </member>
    <member name="P:Aspose.Html.Int16Array.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:System.Int16" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:System.Int16" />.
            </value>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Html.Int32Array">
      <summary>
            Represents an array of twos-complement 32-bit signed integers in the platform byte order. 
            </summary>
    </member>
    <member name="F:Aspose.Html.Int32Array.BYTES_PER_ELEMENT">
      <summary>
            The property represents the size in bytes of each element in an typed array.
            </summary>
    </member>
    <member name="M:Aspose.Html.Int32Array.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Int32Array" /> class.
            </summary>
      <param name="length">The length (number of elements).</param>
    </member>
    <member name="M:Aspose.Html.Int32Array.#ctor(System.Int32[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Int32Array" /> class.
            </summary>
      <param name="data">The array data.</param>
    </member>
    <member name="M:Aspose.Html.Int32Array.#ctor(Aspose.Html.ArrayBuffer)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Int32Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
    </member>
    <member name="M:Aspose.Html.Int32Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Int32Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
    </member>
    <member name="M:Aspose.Html.Int32Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Int32Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
      <param name="length">The length.</param>
    </member>
    <member name="P:Aspose.Html.Int32Array.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:System.Int32" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:System.Int32" />.
            </value>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Html.Int8Array">
      <summary>
            Represents an array of twos-complement 8-bit signed integers.
            </summary>
    </member>
    <member name="F:Aspose.Html.Int8Array.BYTES_PER_ELEMENT">
      <summary>
            The property represents the size in bytes of each element in an typed array.
            </summary>
    </member>
    <member name="M:Aspose.Html.Int8Array.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Int8Array" /> class.
            </summary>
      <param name="length">The length (number of elements).</param>
    </member>
    <member name="M:Aspose.Html.Int8Array.#ctor(System.SByte[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Int8Array" /> class.
            </summary>
      <param name="data">The array data.</param>
    </member>
    <member name="M:Aspose.Html.Int8Array.#ctor(Aspose.Html.ArrayBuffer)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Int8Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
    </member>
    <member name="M:Aspose.Html.Int8Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Int8Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
    </member>
    <member name="M:Aspose.Html.Int8Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Int8Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
      <param name="length">The length.</param>
    </member>
    <member name="P:Aspose.Html.Int8Array.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:System.SByte" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:System.SByte" />.
            </value>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Html.IUrlSearchParams">
      <summary>
            Provides methods to work with URLs query string.
            </summary>
    </member>
    <member name="M:Aspose.Html.IUrlSearchParams.Append(System.String,System.String)">
      <summary>
            Appends a new name-value pair whose name is <c>name</c> and value is <c>value</c>.
            </summary>
      <param name="name">Name of the new name-value pair.</param>
      <param name="value">Value of the new name-value pair.</param>
    </member>
    <member name="M:Aspose.Html.IUrlSearchParams.Delete(System.String)">
      <summary>
            Removes all name-value pairs whose name is <c>name</c>.
            </summary>
      <param name="name">Key which will be used to find name-value pairs.</param>
    </member>
    <member name="M:Aspose.Html.IUrlSearchParams.Get(System.String)">
      <summary>
            Returns value of the first name-value pair whose name is <c>name</c>.
            </summary>
      <param name="name">Key which will be used to find name-value pair.</param>
      <returns> Value of the first name-value pair whose name is <c>name</c> or null 
            if there is none.</returns>
    </member>
    <member name="M:Aspose.Html.IUrlSearchParams.GetAll(System.String)">
      <summary>
            Returns all values whose name is <c>name</c>.
            </summary>
      <param name="name">Key which will be used to find name-value pair.</param>
      <returns> List containing all values whose name is <c>name</c>.</returns>
    </member>
    <member name="M:Aspose.Html.IUrlSearchParams.Has(System.String)">
      <summary>
            Checks if there is a name-value pair whose name is <c>name</c> in list.
            </summary>
      <param name="name">Key which will be used to find name-value pair.</param>
      <returns>
        <c>True</c> if there is a name-value pair whose name is <c>name</c> 
            in list, and <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Aspose.Html.IUrlSearchParams.Set(System.String,System.String)">
      <summary>
            Sets value of the first found name-value pair to the specified value and removes the others.
            If no name-value pairs with the specified name are found, new one will be appended to the list.
            </summary>
      <param name="name">Key which will be used to find name-value pairs.</param>
      <param name="value">Value which will be set.</param>
    </member>
    <member name="M:Aspose.Html.IUrlSearchParams.Sort">
      <summary>
            Sorts all name-value pairs, if any, by their names.
            </summary>
    </member>
    <member name="T:Aspose.Html.MimeType">
      <summary>
            Represents an Internet Media Types 
            </summary>
      <seealso cref="T:System.IEquatable`1" />
    </member>
    <member name="M:Aspose.Html.MimeType.#ctor(System.String)">
      <summary>
            Initializes a new instance of MIME type based on serialized string value.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Aspose.Html.MimeType.Equals(Aspose.Html.MimeType)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
      <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents Mime type.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.op_Equality(Aspose.Html.MimeType,Aspose.Html.MimeType)">
      <summary>
            Compares two Mime type and returns a boolean indicating if the two do match.
            </summary>
      <param name="a">The first Mime to compare.</param>
      <param name="b">The second Mime to compare.</param>
      <returns>
        <value>True</value> if both priorities are equal, otherwise <value>false</value>.
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.op_Inequality(Aspose.Html.MimeType,Aspose.Html.MimeType)">
      <summary>
            Compares two Mime type and returns a boolean indicating if the two do match.
            </summary>
      <param name="a">The first Mime to compare.</param>
      <param name="b">The second Mime to compare.</param>
      <returns>
        <value>True</value> if both priorities are not equal, otherwise <value>false</value>.
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.op_Implicit(System.String)~Aspose.Html.MimeType">
      <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:Aspose.Html.MimeType" />.
            </summary>
      <param name="string">The string.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.op_Implicit(Aspose.Html.MimeType)~System.String">
      <summary>
            Performs an implicit conversion from <see cref="T:Aspose.Html.MimeType" /> to <see cref="T:System.String" />.
            </summary>
      <param name="type">The mime type.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.FromFileExtension(System.String)">
      <summary>
            Creates a new MIME type based on file extension.
            </summary>
      <param name="fileName">The name of the file.</param>
      <returns>The new instance of MIME type</returns>
    </member>
    <member name="P:Aspose.Html.MimeType.Type">
      <summary>
            Gets the media type.
            </summary>
      <value>
            The media type.
            </value>
    </member>
    <member name="P:Aspose.Html.MimeType.SubType">
      <summary>
            Gets the sub media type.
            </summary>
      <value>
            The sub media type.
            </value>
    </member>
    <member name="T:Aspose.Html.PlatformException">
      <summary>
            Represents the base class for all exceptions that may occur during the application execution.
            </summary>
    </member>
    <member name="M:Aspose.Html.PlatformException.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.PlatformException" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.PlatformException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.PlatformException" /> class with a specified error message.
            </summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:Aspose.Html.PlatformException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.PlatformException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
    </member>
    <member name="T:Aspose.Html.Sandbox">
      <summary>
            A sandboxing flag set is a set of zero or more of the following flags, which are used to restrict the abilities that potentially untrusted resources.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.None">
      <summary>
            No flag is set, every sandbox feature is accepted
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.Navigation">
      <summary>
            This flag prevents content from navigating browsing contexts other than the sandboxed browsing context itself (or browsing contexts further nested inside it), auxiliary browsing contexts (which are protected by the sandboxed auxiliary navigation browsing context flag defined next), and the top-level browsing context (which is protected by the sandboxed top-level navigation browsing context flag defined below). 
            If the sandboxed auxiliary navigation browsing context flag is not set, then in certain cases the restrictions nonetheless allow popups (new top-level browsing contexts) to be opened. These browsing contexts always have one permitted sandboxed navigator, set when the browsing context is created, which allows the browsing context that created them to actually navigate them. (Otherwise, the sandboxed navigation browsing context flag would prevent them from being navigated even if they were opened.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.AuxiliaryNavigation">
      <summary>
            This flag prevents content from creating new auxiliary browsing contexts, e.g. using the target attribute, or the window.open() method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.TopLevelNavigation">
      <summary>
            This flag prevents content from navigating their top-level browsing context and prevents content from closing their top-level browsing context. 
            When the sandboxed top-level navigation browsing context flag is not set, content can navigate its top-level browsing context, but other browsing contexts are still protected by the sandboxed navigation browsing context flag and possibly the sandboxed auxiliary navigation browsing context flag.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.Plugins">
      <summary>
            This flag prevents content from instantiating plugins, whether using the embed element, the object element, the applet element, or through navigation of a nested browsing context, unless those plugins can be secured.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.Origin">
      <summary>
            This flag forces content into a unique origin, thus preventing it from accessing other content from the same origin.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.Forms">
      <summary>
            This flag blocks form submission.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.PointerLock">
      <summary>
            This flag disables the Pointer Lock API. 
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.Scripts">
      <summary>
            This flag blocks script execution.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.AutomaticFeatures">
      <summary>
            This flag blocks features that trigger automatically, such as automatically playing a video or automatically focusing a form control.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.Fullscreen">
      <summary>
            This flag prevents content from using the requestFullscreen() method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.DocumentDomain">
      <summary>
            This flag prevents content from using the document.domain feature to change the effective script origin.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.Images">
      <summary>
            This flag disables image loading.
            </summary>
    </member>
    <member name="T:Aspose.Html.TypedArray`1">
      <summary>
            TypedArray objects present an array-like view of an underlying binary data buffer.
            </summary>
      <typeparam name="T">The data type.</typeparam>
    </member>
    <member name="P:Aspose.Html.TypedArray`1.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="!:T" /> at the specified index.
            </summary>
      <value>
            The <see cref="!:T" />.
            </value>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Html.TypedArray">
      <summary>
            TypedArray objects present an array-like view of an underlying binary data buffer.
            </summary>
    </member>
    <member name="P:Aspose.Html.TypedArray.Buffer">
      <summary>
            Gets the ArrayBuffer referenced by this instance.
            </summary>
      <value>
            The buffer.
            </value>
    </member>
    <member name="P:Aspose.Html.TypedArray.ByteLength">
      <summary>
            Gets the byteLength accessor property represents the length of an ArrayBuffer in bytes.
            </summary>
      <value>
            The length in bytes.
            </value>
    </member>
    <member name="P:Aspose.Html.TypedArray.ByteOffset">
      <summary>
            Gets the byteOffset from the start of referenced ArrayBuffer.
            </summary>
      <value>
            The length in bytes.
            </value>
    </member>
    <member name="P:Aspose.Html.TypedArray.Length">
      <summary>
            Gets the length of a typed array.
            </summary>
      <value>
            The length in bytes.
            </value>
    </member>
    <member name="T:Aspose.Html.Uint16Array">
      <summary>
            Represents an array of twos-complement 16-bit unsigned integers in the platform byte order. 
            </summary>
    </member>
    <member name="F:Aspose.Html.Uint16Array.BYTES_PER_ELEMENT">
      <summary>
            The property represents the size in bytes of each element in an typed array.
            </summary>
    </member>
    <member name="M:Aspose.Html.Uint16Array.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint16Array" /> class.
            </summary>
      <param name="length">The length (number of elements).</param>
    </member>
    <member name="M:Aspose.Html.Uint16Array.#ctor(System.UInt16[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint16Array" /> class.
            </summary>
      <param name="data">The array data.</param>
    </member>
    <member name="M:Aspose.Html.Uint16Array.#ctor(Aspose.Html.ArrayBuffer)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint16Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
    </member>
    <member name="M:Aspose.Html.Uint16Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint16Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
    </member>
    <member name="M:Aspose.Html.Uint16Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint16Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
      <param name="length">The length.</param>
    </member>
    <member name="P:Aspose.Html.Uint16Array.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:System.UInt16" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:System.UInt16" />.
            </value>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Html.Uint32Array">
      <summary>
            Represents an array of twos-complement 32-bit unsigned integers in the platform byte order. 
            </summary>
    </member>
    <member name="F:Aspose.Html.Uint32Array.BYTES_PER_ELEMENT">
      <summary>
            The property represents the size in bytes of each element in an typed array.
            </summary>
    </member>
    <member name="M:Aspose.Html.Uint32Array.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint32Array" /> class.
            </summary>
      <param name="length">The length (number of elements).</param>
    </member>
    <member name="M:Aspose.Html.Uint32Array.#ctor(System.UInt32[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint32Array" /> class.
            </summary>
      <param name="data">The array data.</param>
    </member>
    <member name="M:Aspose.Html.Uint32Array.#ctor(Aspose.Html.ArrayBuffer)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint32Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
    </member>
    <member name="M:Aspose.Html.Uint32Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint32Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
    </member>
    <member name="M:Aspose.Html.Uint32Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint32Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
      <param name="length">The length.</param>
    </member>
    <member name="P:Aspose.Html.Uint32Array.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:System.UInt32" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:System.UInt32" />.
            </value>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Html.Uint8Array">
      <summary>
            Represents an array of twos-complement 8-bit unsigned  integers.
            </summary>
    </member>
    <member name="F:Aspose.Html.Uint8Array.BYTES_PER_ELEMENT">
      <summary>
            The property represents the size in bytes of each element in an typed array.
            </summary>
    </member>
    <member name="M:Aspose.Html.Uint8Array.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint8Array" /> class.
            </summary>
      <param name="length">The length (number of elements).</param>
    </member>
    <member name="M:Aspose.Html.Uint8Array.#ctor(System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint8Array" /> class.
            </summary>
      <param name="data">The array data.</param>
    </member>
    <member name="M:Aspose.Html.Uint8Array.#ctor(Aspose.Html.ArrayBuffer)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint8Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
    </member>
    <member name="M:Aspose.Html.Uint8Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint8Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
    </member>
    <member name="M:Aspose.Html.Uint8Array.#ctor(Aspose.Html.ArrayBuffer,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint8Array" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
      <param name="length">The length.</param>
    </member>
    <member name="P:Aspose.Html.Uint8Array.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:System.Byte" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:System.Byte" />.
            </value>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Html.Uint8ClampedArray">
      <summary>
            Represents an array of 8-bit unsigned integers clamped to 0-255; if you specified a value that is out of the range of [0,255], 0 or 255 will be set instead; 
            </summary>
    </member>
    <member name="F:Aspose.Html.Uint8ClampedArray.BYTES_PER_ELEMENT">
      <summary>
            The property represents the size in bytes of each element in an typed array.
            </summary>
    </member>
    <member name="M:Aspose.Html.Uint8ClampedArray.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint8ClampedArray" /> class.
            </summary>
      <param name="length">The length (number of elements).</param>
    </member>
    <member name="M:Aspose.Html.Uint8ClampedArray.#ctor(System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint8ClampedArray" /> class.
            </summary>
      <param name="data">The array data.</param>
    </member>
    <member name="M:Aspose.Html.Uint8ClampedArray.#ctor(Aspose.Html.ArrayBuffer)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint8ClampedArray" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
    </member>
    <member name="M:Aspose.Html.Uint8ClampedArray.#ctor(Aspose.Html.ArrayBuffer,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint8ClampedArray" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
    </member>
    <member name="M:Aspose.Html.Uint8ClampedArray.#ctor(Aspose.Html.ArrayBuffer,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Uint8ClampedArray" /> class.
            </summary>
      <param name="buffer">The data buffer.</param>
      <param name="byteOffset">The byte offset.</param>
      <param name="length">The length.</param>
    </member>
    <member name="P:Aspose.Html.Uint8ClampedArray.Item(System.Int32)">
      <summary>
            Gets or sets the <see cref="T:System.Byte" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:System.Byte" />.
            </value>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Html.Url">
      <summary>
            Provides an object representation of a universal identifier (URL).
            </summary>
    </member>
    <member name="M:Aspose.Html.Url.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Url" /> with the specified URL.
            </summary>
      <param name="url">The URL to process.</param>
      <exception cref="T:Aspose.Html.Error">
            TypeError: raised if <c>url</c> cannot be parsed as valid URL.
            </exception>
    </member>
    <member name="M:Aspose.Html.Url.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Url" /> with the specified URL
            and base URL.
            </summary>
      <param name="url">The URL to process.</param>
      <param name="baseUrl">The base URL.</param>
      <exception cref="T:Aspose.Html.Error">
            TypeError: raised if <c>url</c> or <c>baseUrl</c> cannot be parsed as valid URL.
            </exception>
    </member>
    <member name="M:Aspose.Html.Url.ToJson">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Html.Url.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Html.Url.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Url.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="P:Aspose.Html.Url.Origin">
      <summary>
            Gets a string representation for the specified URL origin.
            </summary>
      <value>
            The origin.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Username">
      <summary>
            Gets or sets a string representation for the specified URL username.
            </summary>
      <value>
            The username.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Password">
      <summary>
            Gets or sets a string representation for the specified URL password.
            </summary>
      <value>
            The password.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Protocol">
      <summary>
            Gets or sets a string representation for the specified URL schema.
            </summary>
      <value>
            The protocol.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Host">
      <summary>
            Gets or sets a string representation for the specified URL host.
            </summary>
      <value>
            The host.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Hostname">
      <summary>
            Gets or sets a string representation for the specified URL hostname.
            </summary>
      <value>
            The name of the host.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Port">
      <summary>
            Gets or sets a string representation for the specified URL port.
            </summary>
      <value>
            The port.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Pathname">
      <summary>
            Gets or sets a string representation for the specified URL path.
            </summary>
      <value>
            The name of the path.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Search">
      <summary>
            Gets or sets a string representation for the specified URL search segment.
            </summary>
      <value>
            The search.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Hash">
      <summary>
            Gets or sets a string representation for the specified URL hash segment.
            </summary>
      <value>
            The hash.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.SearchParams">
      <summary>
            Gets an associated <see cref="T:Aspose.Html.IUrlSearchParams" /> object.
            </summary>
      <value>
        <see cref="T:Aspose.Html.IUrlSearchParams" /> object.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Href">
      <summary>
            Gets or sets a serialized representation for the specified URL instance.
            </summary>
      <value>
            The href.
            </value>
      <exception cref="T:Aspose.Html.Error">
            TypeError: raised if <c>value</c> cannot be parsed as valid URL.
            </exception>
    </member>
    <member name="T:Aspose.Html.Window.IWindow">
      <summary>
            The window object represents a window containing a DOM document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Window.IWindow.Alert(System.String)">
      <summary>
            Displays a modal alert with the given message, and waits for the user to dismiss it
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Aspose.Html.Window.IWindow.Confirm(System.String)">
      <summary>
            Displays a modal OK/Cancel prompt with the given message, waits for the user to dismiss it, and returns true if the user clicks OK and false if the user clicks Cancel.
            </summary>
      <param name="message">The message.</param>
      <returns>Returns true if the user clicks OK and false if the user clicks Cancel</returns>
    </member>
    <member name="M:Aspose.Html.Window.IWindow.Prompt(System.String,System.String)">
      <summary>
            Displays a modal text field prompt with the given message, waits for the user to dismiss it, and returns the value that the user entered. If the user cancels the prompt, then returns null instead. If the second argument is present, then the given value is used as a default.
            </summary>
      <param name="message">The message.</param>
      <param name="default">The default.</param>
      <returns>Returns the value that the user entered</returns>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Window">
      <summary>
            Returns the Window object's browsing context's WindowProxy object.
            </summary>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Self">
      <summary>
            Returns the Window object's browsing context's WindowProxy object.
            </summary>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Document">
      <summary>
            The document attribute must return the Window object's newest Document object.
            </summary>
      <value>
            The document.
            </value>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Name">
      <summary>
            The name attribute of the Window object must, on getting, return the current name of the browsing context, and, on setting, set the name of the browsing context to the new value.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Location">
      <summary>
            The location attribute of the Window interface must return the Location object for that Window object's Document.
            </summary>
      <value>
            The location.
            </value>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Top">
      <summary>
            The top IDL attribute on the Window object of a Document in a browsing context b must return the WindowProxy object of its top-level browsing context (which would be its own WindowProxy object if it was a top-level browsing context itself), if it has one, or its own WindowProxy object otherwise (e.g. if it was a detached nested browsing context).
            </summary>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Opener">
      <summary>
            The opener IDL attribute on the Window object, on getting, must return the WindowProxy object of the browsing context from which the current browsing context was created (its opener browsing context), if there is one, if it is still available, and if the current browsing context has not disowned its opener; otherwise, it must return null. On setting, if the new value is null then the current browsing context must disown its opener; if the new value is anything else then the user agent must call the [[DefineOwnProperty]] internal method of the Window object, passing the property name "opener" as the property key, and the Property Descriptor { [[Value]]: value, [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]: true } as the property descriptor, where value is the new value.
            </summary>
      <value>
            The opener.
            </value>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Parent">
      <summary>
            The parent IDL attribute on the Window object of a Document in a browsing context b must return the WindowProxy object of the parent browsing context, if there is one (i.e. if b is a child browsing context), or the WindowProxy object of the browsing context b itself, otherwise (i.e. if it is a top-level browsing context or a detached nested browsing context).
            </summary>
      <value>
            The parent.
            </value>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.FrameElement">
      <summary>
            The frameElement object of a Document.
            </summary>
      <value>
            The frame element.
            </value>
    </member>
    <member name="T:Aspose.Html.Window.IWindowEventHandlers">
      <summary>
            Represents interface that must be inherited by window object
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnAfterPrint">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnBeforePrint">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnBeforeUnload">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnHashChange">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnMessage">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnOffline">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnOnline">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnPageHide">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnPageShow">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnPopState">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnStorage">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnUnload">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="T:Aspose.Html.Window.IWindowTimers">
      <summary>
            Allows authors to schedule timer-based callbacks.
            </summary>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.SetTimeout(System.Object,System.Int32,System.Object[])">
      <summary>
            Schedules a timeout to run handler after timeout milliseconds. Any arguments are passed straight through to the handler.
            </summary>
      <param name="handler">The handler.</param>
      <param name="timeout">The timeout.</param>
      <param name="args">The arguments.</param>
      <returns>The handle</returns>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.ClearTimeout(System.Int32)">
      <summary>
            Cancels the timeout set with setTimeout() identified by handle.
            </summary>
      <param name="handle">The handle.</param>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.SetInterval(System.Object,System.Int32,System.Object[])">
      <summary>
            Schedules a timeout to run handler every timeout milliseconds. Any arguments are passed straight through to the handler.
            </summary>
      <param name="handler">The handler.</param>
      <param name="timeout">The timeout.</param>
      <param name="args">The arguments.</param>
      <returns>The handle</returns>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.ClearInterval(System.Int32)">
      <summary>
            Cancels the timeout set with setInterval() identified by handle
            </summary>
      <param name="handle">The handle.</param>
    </member>
    <member name="T:Aspose.Html.Window.Location">
      <summary>
            Location objects provide a representation of the address of the active document of their Document's browsing context, and allow the current entry of the browsing context's session history to be changed, by adding or replacing entries in the history object.
            </summary>
    </member>
    <member name="M:Aspose.Html.Window.Location.Assign(System.String)">
      <summary>
            Navigates to the given page.
            </summary>
      <param name="url">The URL to navigate.</param>
    </member>
    <member name="M:Aspose.Html.Window.Location.Reload">
      <summary>
            Reloads the current page.
            </summary>
    </member>
    <member name="M:Aspose.Html.Window.Location.Replace(System.String)">
      <summary>
            Removes the current page from the session history and navigates to the given page.
            </summary>
      <param name="url">The URL to navigate.</param>
    </member>
    <member name="T:Aspose.Html.Window.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Window</b> namespace is related for
            window object which represents a window
            containing a DOM document. It includes classes and interfaces
            related to active document address and browsing history.
            </summary>
    </member>
    <member name="T:Aspose.Html.Services.IDeviceInformationService">
      <summary>
            An interface that is described an environment in which <see cref="T:Aspose.Html.Dom.Document" /> is presented to the user.
            </summary>
      <seealso cref="T:Aspose.Html.Services.IService" />
    </member>
    <member name="P:Aspose.Html.Services.IDeviceInformationService.ScreenSize">
      <summary>
            Gets or sets the size of the screen.
            </summary>
      <value>
            The size of the screen.
            </value>
    </member>
    <member name="P:Aspose.Html.Services.IDeviceInformationService.WindowSize">
      <summary>
            Gets or sets the size of the window.
            </summary>
      <value>
            The size of the window.
            </value>
    </member>
    <member name="P:Aspose.Html.Services.IDeviceInformationService.HorizontalResolution">
      <summary>
            Gets or sets the horizontal resolution.
            </summary>
      <value>
            The horizontal resolution.
            </value>
    </member>
    <member name="P:Aspose.Html.Services.IDeviceInformationService.VerticalResolution">
      <summary>
            Gets or sets the vertical resolution.
            </summary>
      <value>
            The vertical resolution.
            </value>
    </member>
    <member name="T:Aspose.Html.Services.INetworkService">
      <summary>
            Provides an interface for the network operations.
            </summary>
      <seealso cref="T:Aspose.Html.Services.IService" />
    </member>
    <member name="P:Aspose.Html.Services.INetworkService.UrlResolver">
      <summary>
            Gets or sets the URL resolver.
            </summary>
      <value>
            The URL resolver.
            </value>
    </member>
    <member name="P:Aspose.Html.Services.INetworkService.MessageHandlers">
      <summary>
            Gets an list of <see cref="T:Aspose.Html.Net.MessageHandler" /> instances to be invoked as an <see cref="T:Aspose.Html.Net.RequestMessage" /> executes.
            </summary>
      <value>
            The message handlers.
            </value>
    </member>
    <member name="T:Aspose.Html.Services.IRuntimeService">
      <summary>
            This service is used to configure runtime related properties.
            </summary>
    </member>
    <member name="P:Aspose.Html.Services.IRuntimeService.JavaScriptTimeout">
      <summary>
            Gets or sets <see cref="T:System.TimeSpan" /> which limits JavaScript execution time. If script is executed longer than provided <see cref="T:System.TimeSpan" />, it will be cancelled. You can specify infinite timeout by setting <see cref="T:System.TimeSpan" /> equal to -1 millisecond. Default value is 1 minute.
            </summary>
    </member>
    <member name="T:Aspose.Html.Services.IServiceContainer">
      <summary>
            Provides a container for services.
            </summary>
      <seealso cref="T:Aspose.Html.Services.IServiceProvider" />
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="M:Aspose.Html.Services.IServiceContainer.AddService``1(``0)">
      <summary>
            Adds the specified service to the service container.
            </summary>
      <typeparam name="TService">The type of the service.</typeparam>
      <param name="service">The service instance.</param>
    </member>
    <member name="T:Aspose.Html.Services.IServiceProvider">
      <summary>
            Provides an immutable container for services.
            </summary>
    </member>
    <member name="M:Aspose.Html.Services.IServiceProvider.GetService``1">
      <summary>
            Gets a service object of the specified type.
            </summary>
      <typeparam name="TService">The type of the service.</typeparam>
      <returns>The service object </returns>
    </member>
    <member name="T:Aspose.Html.Services.IUserAgentService">
      <summary>
             An interface that is described a user agent environment.
            </summary>
      <seealso cref="T:Aspose.Html.Services.IService" />
    </member>
    <member name="P:Aspose.Html.Services.IUserAgentService.Language">
      <summary>
            The <see cref="P:Aspose.Html.Services.IUserAgentService.Language" /> specifies the primary language for the element's contents and for any of the element's attributes that contain text. 
            Its value must be a valid BCP 47 (<seealso cref="!:http://www.ietf.org/rfc/bcp/bcp47.txt" />) language tag, or the empty string. Setting the attribute to the empty string indicates that the primary language is unknown.
            </summary>
      <value>
            The user agent language.
            </value>
    </member>
    <member name="P:Aspose.Html.Services.IUserAgentService.UserStyleSheet">
      <summary>
            Allows to specify style information for a particular document
            </summary>
    </member>
    <member name="P:Aspose.Html.Services.IUserAgentService.CharSet">
      <summary>
            Gets or sets the primary character-set for a document.
            </summary>
      <value>
            The character set.
            </value>
    </member>
    <member name="P:Aspose.Html.Services.IUserAgentService.CSSEngineMode">
      <summary>
            Gets or sets mode in which CSS engine works.
            </summary>
      <value>
            The engine mode.
            </value>
    </member>
    <member name="P:Aspose.Html.Services.IUserAgentService.FontsSettings">
      <summary>
            Gets a <see cref="T:Aspose.Html.FontsSettings" /> object which is used for configuration of fonts handling.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.FontsSettings" /> settings.
            </value>
    </member>
    <member name="T:Aspose.Html.Services.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Services</b> namespace contains
            interfaces as protocols for service implementations.
            </summary>
    </member>
    <member name="T:Aspose.Html.Saving.ResourceHandling">
      <summary>
            This enum represents resource handling options.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.ResourceHandling.Save">
      <summary>
            Resource will be saved as file.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.ResourceHandling.Embed">
      <summary>
            Resource will be emdedded in to owner.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.ResourceHandling.Discard">
      <summary>
            Resource will be discarded.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.ResourceHandling.Ignore">
      <summary>
            Resource will not be saved.
            </summary>
    </member>
    <member name="T:Aspose.Html.Saving.ResourceHandlingOptions">
      <summary>
            Represents resource handling options.
            </summary>
    </member>
    <member name="P:Aspose.Html.Saving.ResourceHandlingOptions.JavaScript">
      <summary>
            Gets or sets enum which represents the way scripts are handled. Currently <see cref="F:Aspose.Html.Saving.ResourceHandling.Save" />, <see cref="F:Aspose.Html.Saving.ResourceHandling.Ignore" />, <see cref="F:Aspose.Html.Saving.ResourceHandling.Discard" /> and <see cref="F:Aspose.Html.Saving.ResourceHandling.Embed" /> values are supported. Default value is <see cref="F:Aspose.Html.Saving.ResourceHandling.Save" />.
            </summary>
    </member>
    <member name="P:Aspose.Html.Saving.ResourceHandlingOptions.Default">
      <summary>
            Gets or sets enum which represents default way of resources handling. Currently <see cref="F:Aspose.Html.Saving.ResourceHandling.Save" />, <see cref="F:Aspose.Html.Saving.ResourceHandling.Ignore" /> and <see cref="F:Aspose.Html.Saving.ResourceHandling.Embed" /> values are supported. Default value is <see cref="F:Aspose.Html.Saving.ResourceHandling.Save" />.
            </summary>
    </member>
    <member name="P:Aspose.Html.Saving.ResourceHandlingOptions.ResourceUrlRestriction">
      <summary>
            Gets or sets restriction applied to URLs of handled resources such as css, js, images etc. Default value is <see cref="F:Aspose.Html.Saving.UrlRestriction.SameHost" />.
            </summary>
    </member>
    <member name="P:Aspose.Html.Saving.ResourceHandlingOptions.PageUrlRestriction">
      <summary>
            Gets or sets restriction applied to URLs of handled pages. Default value is <see cref="F:Aspose.Html.Saving.UrlRestriction.RootAndSubFolders" />.
            </summary>
    </member>
    <member name="P:Aspose.Html.Saving.ResourceHandlingOptions.MaxHandlingDepth">
      <summary>
            Gets or sets maximum depth of pages which will be handled. Depth of 1 means that only pages directly referenced from the saved document will be handled. Setting this property to -1 will lead to handling of all pages. Default value is 0.
            </summary>
    </member>
    <member name="T:Aspose.Html.Saving.SaveOptions">
      <summary>
            This is an abstract base class for classes that allow the user to specify additional options when saving a document into a particular format.
            </summary>
    </member>
    <member name="M:Aspose.Html.Saving.SaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Saving.SaveOptions" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Html.Saving.SaveOptions.ResourceHandlingOptions">
      <summary>
            Gets a <see cref="T:Aspose.Html.Saving.ResourceHandlingOptions" /> object which is used for configuration of resources handling.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Saving.ResourceHandlingOptions" /> object.
            </value>
    </member>
    <member name="T:Aspose.Html.Saving.UrlRestriction">
      <summary>
            This enum represents restriction applied to URLs of processed resources.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.UrlRestriction.RootAndSubFolders">
      <summary>
            Only resources located in the root and sub folders are processed.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.UrlRestriction.SameHost">
      <summary>
            Only resources located in the same host are processed.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.UrlRestriction.None">
      <summary>
            All resources are processed.
            </summary>
    </member>
    <member name="T:Aspose.Html.Net.ByteArrayContent">
      <summary>
            Represents content based on a byte array.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.ByteArrayContent.#ctor(System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.ByteArrayContent" /> class.
            </summary>
      <param name="content">The content.</param>
    </member>
    <member name="M:Aspose.Html.Net.ByteArrayContent.SerializeToStream(System.IO.Stream)">
      <summary>
            Serializes to stream.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="T:Aspose.Html.Net.Content">
      <summary>
            Represents a base class for an HTTP entity body and content headers.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.Content.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.Content" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.Content.SerializeToStream(System.IO.Stream)">
      <summary>
            Serialize the content to a specified stream.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="M:Aspose.Html.Net.Content.ReadAsStream">
      <summary>
            Serialize the HTTP content and return a stream that represents the content.
            </summary>
      <returns>Serialized stream that represents the content</returns>
    </member>
    <member name="M:Aspose.Html.Net.Content.ReadAsByteArray">
      <summary>
            Serialize the HTTP content and return a byte array that represents the content.
            </summary>
      <returns>Serialized byte array that represents the content</returns>
    </member>
    <member name="M:Aspose.Html.Net.Content.ReadAsString">
      <summary>
            Serialize the HTTP content and return a string that represents the content.
            </summary>
      <returns>Serialized string that represents the content</returns>
    </member>
    <member name="M:Aspose.Html.Net.Content.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:Aspose.Html.Net.Content.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="P:Aspose.Html.Net.Content.Headers">
      <summary>
            Gets the HTTP content headers.
            </summary>
      <value>
            The headers.
            </value>
    </member>
    <member name="T:Aspose.Html.Net.ContentHeaders">
      <summary>
            Contains the headers associated with a content.
            </summary>
      <seealso cref="T:System.Net.WebHeaderCollection" />
    </member>
    <member name="M:Aspose.Html.Net.ContentHeaders.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.ContentHeaders" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Html.Net.ContentHeaders.ContentType">
      <summary>
            Gets the Content-Type header value.
            </summary>
      <value>
            The type of the content.
            </value>
    </member>
    <member name="T:Aspose.Html.Net.FormUrlEncodedContent">
      <summary>
            A container for name/value tuples encoded using application/x-www-form-urlencoded MIME type.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.FormUrlEncodedContent" /> class.
            </summary>
      <param name="nameValueCollection">The name value collection.</param>
    </member>
    <member name="T:Aspose.Html.Net.HttpMethod">
      <summary>
            Represents utility class for retrieving and comparing standard HTTP methods.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.HttpMethod.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.HttpMethod" /> class with a specific HTTP method.
            </summary>
      <param name="method">The method.</param>
    </member>
    <member name="M:Aspose.Html.Net.HttpMethod.op_Equality(Aspose.Html.Net.HttpMethod,Aspose.Html.Net.HttpMethod)">
      <summary>
            Implements the equality operator.
            </summary>
      <param name="left">The left operand.</param>
      <param name="right">The left operand.</param>
      <returns>
            The result of the operation.
            </returns>
    </member>
    <member name="M:Aspose.Html.Net.HttpMethod.op_Inequality(Aspose.Html.Net.HttpMethod,Aspose.Html.Net.HttpMethod)">
      <summary>
            Implements the equality operator.
            </summary>
      <param name="left">The left operand.</param>
      <param name="right">The left operand.</param>
      <returns>
            The result of the operation.
            </returns>
    </member>
    <member name="M:Aspose.Html.Net.HttpMethod.op_Explicit(System.String)~Aspose.Html.Net.HttpMethod">
      <summary>
            Performs an explicit conversion from <see cref="T:System.String" /> to <see cref="T:Aspose.Html.Net.HttpMethod" />.
            </summary>
      <param name="name">The http-method name.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:Aspose.Html.Net.HttpMethod.Equals(Aspose.Html.Net.HttpMethod)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Html.Net.HttpMethod.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Net.HttpMethod.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:Aspose.Html.Net.HttpMethod.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Net.HttpMethod.Get">
      <summary>
            Represents an HTTP GET protocol method.
            </summary>
      <value>
            The HTTP GET method.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.HttpMethod.Put">
      <summary>
            Represents an HTTP PUT protocol method.
            </summary>
      <value>
            The HTTP PUT protocol method.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.HttpMethod.Post">
      <summary>
            Represents an HTTP POST protocol method.
            </summary>
      <value>
            The HTTP POST protocol method.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.HttpMethod.Delete">
      <summary>
            Represents an HTTP DELETE protocol method.
            </summary>
      <value>
            The HTTP DELETE protocol method.
            </value>
    </member>
    <member name="T:Aspose.Html.Net.INetwork">
      <summary>
            Provides an interface for network services.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.INetwork.Send(Aspose.Html.Net.RequestMessage)">
      <summary>
            Sends a <see cref="T:Aspose.Html.Net.RequestMessage" /> message.
            </summary>
      <param name="message">The message to send.</param>
      <returns>A <see cref="T:Aspose.Html.Net.ResponseMessage" /> message</returns>
    </member>
    <member name="T:Aspose.Html.Net.INetworkOperationContext">
      <summary>
            Provides contextual information for the network services.
            </summary>
    </member>
    <member name="P:Aspose.Html.Net.INetworkOperationContext.Request">
      <summary>
            Gets or sets the request message.
            </summary>
      <value>
            The request message.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.INetworkOperationContext.Response">
      <summary>
            Gets or sets the response message.
            </summary>
      <value>
            The response message.
            </value>
    </member>
    <member name="T:Aspose.Html.Net.MessageFilter">
      <summary>
            Represents abstract base class for different classes of filters used to query messages
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.MessageFilter.Match(Aspose.Html.Net.INetworkOperationContext)">
      <summary>
            When overridden in a derived class, tests whether a Context satisfies the filter criteria.
            </summary>
      <param name="context">The context.</param>
      <returns>
        <value>true</value> if the Context object satisfies the filter criteria; otherwise, <value>false</value>.</returns>
    </member>
    <member name="T:Aspose.Html.Net.MessageHandler">
      <summary>
            Represents a base type for message handlers.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.MessageHandler.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.MessageHandler" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.MessageHandler.Next(Aspose.Html.Net.INetworkOperationContext)">
      <summary>
            Invokes the next <see cref="T:Aspose.Html.Net.MessageHandler" /> in chain of handlers, if any.
            </summary>
      <param name="context">The context.</param>
    </member>
    <member name="M:Aspose.Html.Net.MessageHandler.Invoke(Aspose.Html.Net.INetworkOperationContext)">
      <summary>
            When overridden in a derived class is used to implement the message handling.
            </summary>
      <param name="context">The context.</param>
    </member>
    <member name="P:Aspose.Html.Net.MessageHandler.Filters">
      <summary>
            Gets the filters list that are corresponding to the specified handler type.
            </summary>
      <value>
            The filters.
            </value>
    </member>
    <member name="T:Aspose.Html.Net.MessageHandlerCollection">
      <summary>
            Represents collection of the <see cref="T:Aspose.Html.Net.MessageHandler" />.
            </summary>
      <seealso cref="T:Aspose.Html.Net.MessageHandler" />
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlerCollection.SetItem(System.Int32,Aspose.Html.Net.MessageHandler)">
      <summary>
            Replaces the element at the specified index.
            </summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="item">The new value for the element at the specified index. The value can be null for reference types.</param>
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlerCollection.InsertItem(System.Int32,Aspose.Html.Net.MessageHandler)">
      <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index.
            </summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The object to insert. The value can be null for reference types.</param>
    </member>
    <member name="T:Aspose.Html.Net.MultipartContent">
      <summary>
            Represents a multipart/* content.
            </summary>
      <seealso cref="T:Aspose.Html.Net.Content" />
    </member>
    <member name="M:Aspose.Html.Net.MultipartContent.#ctor">
      <summary>
             Create a new instance of the <see cref="T:Aspose.Html.Net.MultipartContent" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.MultipartContent.#ctor(System.String)">
      <summary>
            Create a new instance of the <see cref="T:Aspose.Html.Net.MultipartContent" /> class  with subtype.
            </summary>
      <param name="subtype">The subtype</param>
    </member>
    <member name="M:Aspose.Html.Net.MultipartContent.#ctor(System.String,System.String)">
      <summary>
            Create a new instance of the <see cref="T:Aspose.Html.Net.MultipartContent" /> class  with subtype and boundary.
            </summary>
      <param name="subtype">The subtype</param>
      <param name="boundary">The boundary</param>
      <exception cref="T:System.ArgumentException">The argument cannot be null or empty string.</exception>
    </member>
    <member name="M:Aspose.Html.Net.MultipartContent.Add(Aspose.Html.Net.Content)">
      <summary>
             Add a new content to the <see cref="T:Aspose.Html.Net.MultipartContent" /></summary>
      <param name="content">Content to be added to the <see cref="T:Aspose.Html.Net.MultipartContent" /></param>
    </member>
    <member name="M:Aspose.Html.Net.MultipartContent.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:Aspose.Html.Net.MultipartContent.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:Aspose.Html.Net.MultipartContent.SerializeToStream(System.IO.Stream)">
      <summary>
            Serializes to stream.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="T:Aspose.Html.Net.MultipartFormDataContent">
      <summary>
            Represent content for  multipart/form-data encoding algorithm
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.MultipartFormDataContent.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.MultipartFormDataContent" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.MultipartFormDataContent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.MultipartFormDataContent" /> class.
            </summary>
      <param name="boundary">The boundary.</param>
    </member>
    <member name="M:Aspose.Html.Net.MultipartFormDataContent.Add(Aspose.Html.Net.Content)">
      <summary>
            Add the content to the <see cref="T:Aspose.Html.Net.MultipartFormDataContent" /> class
            </summary>
      <param name="content">The content.</param>
    </member>
    <member name="M:Aspose.Html.Net.MultipartFormDataContent.Add(Aspose.Html.Net.Content,System.String)">
      <summary>
            Add the content to the <see cref="T:Aspose.Html.Net.MultipartFormDataContent" /> class with field name parameter
            </summary>
      <param name="content">The content.</param>
      <param name="name">The field name.</param>
    </member>
    <member name="M:Aspose.Html.Net.MultipartFormDataContent.Add(Aspose.Html.Net.Content,System.String,System.String)">
      <summary>
            Add the content to the <see cref="T:Aspose.Html.Net.MultipartFormDataContent" /> class with field and file name parameter
            </summary>
      <param name="content">The content.</param>
      <param name="name">The field name.</param>
      <param name="fileName">The file name.</param>
    </member>
    <member name="T:Aspose.Html.Net.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Net</b> namespace is presented by
            classes and interfaces which are
            responsible for helping easy network processing.
            </summary>
    </member>
    <member name="T:Aspose.Html.Net.NamespaceGroupDoc">
      <summary>
            This namespace group is for network processing and
            consists of root namespace <b>Aspose.Html.Net</b> and
            namespaces which are responsible for header content description, message filtering
            and message handling.
            </summary>
    </member>
    <member name="T:Aspose.Html.Net.RequestHeaders">
      <summary>
            Contains protocol headers associated with a request.
            </summary>
      <seealso cref="T:System.Net.WebHeaderCollection" />
    </member>
    <member name="T:Aspose.Html.Net.RequestMessage">
      <summary>
            Represents a request message.
            </summary>
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="M:Aspose.Html.Net.RequestMessage.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.RequestMessage" /> class.
            </summary>
      <param name="address">The request address.</param>
    </member>
    <member name="M:Aspose.Html.Net.RequestMessage.#ctor(Aspose.Html.Url)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.RequestMessage" /> class.
            </summary>
      <param name="uri">The request URL.</param>
    </member>
    <member name="M:Aspose.Html.Net.RequestMessage.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:Aspose.Html.Net.RequestMessage.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="P:Aspose.Html.Net.RequestMessage.Method">
      <summary>
            Gets or sets the <see cref="T:Aspose.Html.Net.HttpMethod" />.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Net.HttpMethod" />.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.RequestMessage.RequestUri">
      <summary>
            Gets or sets the request URI.
            </summary>
      <value>
            The request URI.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.RequestMessage.Headers">
      <summary>
            Gets the <see cref="T:Aspose.Html.Net.RequestHeaders" />.
            </summary>
      <value>
            The headers.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.RequestMessage.Content">
      <summary>
            Gets or sets the request content.
            </summary>
      <value>
            The body.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.RequestMessage.Timeout">
      <summary>
             The number of milliseconds to wait before the request times out. The default value is 100,000 milliseconds (100 seconds).
            </summary>
    </member>
    <member name="P:Aspose.Html.Net.RequestMessage.Credentials">
      <summary>
            Gets or sets authentication information for the request.
            </summary>
      <value>
            An System.Net.ICredentials that contains the authentication credentials associated with the request. The default is null.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.RequestMessage.CookieContainer">
      <summary>
            	Gets or sets the cookie container used to store server cookies by the handler.
            </summary>
      <value>
            A System.Net.CookieContainer that contains the cookies associated with this request.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.RequestMessage.PreAuthenticate">
      <summary>
            Gets or sets a value that indicates whether to send an Authorization header with the request.
            </summary>
      <value>
        <c>true</c> to send an HTTP Authorization header with requests after authentication has taken place; otherwise, <c>false</c>. The default is <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Html.Net.ResponseHeaders">
      <summary>
            Contains protocol headers associated with a response.
            </summary>
      <seealso cref="T:System.Net.WebHeaderCollection" />
    </member>
    <member name="M:Aspose.Html.Net.ResponseHeaders.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.RequestHeaders" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Html.Net.ResponseHeaders.ContentType">
      <summary>
            Gets the Content-Type header value.
            </summary>
      <value>
            The type of the content.
            </value>
    </member>
    <member name="T:Aspose.Html.Net.ResponseMessage">
      <summary>
            Represents a response message.
            </summary>
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="M:Aspose.Html.Net.ResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.ResponseMessage" /> class.
            </summary>
      <param name="status">The status.</param>
    </member>
    <member name="M:Aspose.Html.Net.ResponseMessage.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:Aspose.Html.Net.ResponseMessage.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="P:Aspose.Html.Net.ResponseMessage.Headers">
      <summary>
            Gets the headers.
            </summary>
      <value>
            The headers.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.ResponseMessage.Content">
      <summary>
            Gets or sets the response content.
            </summary>
      <value>
            The body.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.ResponseMessage.Cookies">
      <summary>
            Gets or sets the cookie collection.
            </summary>
    </member>
    <member name="P:Aspose.Html.Net.ResponseMessage.Request">
      <summary>
            Gets or sets the associated request.
            </summary>
      <value>
            The request.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.ResponseMessage.StatusCode">
      <summary>
            Gets or sets the status code.
            </summary>
      <value>
            The status code.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.ResponseMessage.IsSuccess">
      <summary>
            Gets a value indicating whether this message is success.
            </summary>
      <value>
        <c>true</c> if this instance is success; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Html.Net.StreamContent">
      <summary>
            Represents content based on a stream.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.StreamContent.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.StreamContent" /> class.
            </summary>
      <param name="content">The content.</param>
    </member>
    <member name="M:Aspose.Html.Net.StreamContent.SerializeToStream(System.IO.Stream)">
      <summary>
            Serializes to stream.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="M:Aspose.Html.Net.StreamContent.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="T:Aspose.Html.Net.StringContent">
      <summary>
            Represents content based on a string.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.StringContent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.StringContent" /> class.
            </summary>
      <param name="content">The content.</param>
    </member>
    <member name="M:Aspose.Html.Net.StringContent.#ctor(System.String,System.Text.Encoding)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.StringContent" /> class.
            </summary>
      <param name="content">The content.</param>
      <param name="encoding">The encoding.</param>
    </member>
    <member name="M:Aspose.Html.Net.StringContent.#ctor(System.String,System.Text.Encoding,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.StringContent" /> class.
            </summary>
      <param name="content">The content.</param>
      <param name="encoding">The encoding.</param>
      <param name="mediaType">Type of the media.</param>
    </member>
    <member name="T:Aspose.Html.Net.UrlResolver">
      <summary>
            Represents utility class for resolving absolute URL by a Uniform Resource Identifier (URI).
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.UrlResolver.Resolve(System.String,System.String)">
      <summary>
            Resolves the absolute URI from the base and relative URIs.
            </summary>
      <param name="baseUri">The base URI.</param>
      <param name="relativeUri">The relative URI.</param>
      <returns>The absolute URI</returns>
    </member>
    <member name="T:Aspose.Html.Net.MessageHandlers.FileProtocolMessageHandler">
      <summary>
            Represents the <c>file:</c> protocol message handler.
            </summary>
      <seealso cref="T:Aspose.Html.Net.MessageHandler" />
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlers.FileProtocolMessageHandler.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.MessageHandlers.FileProtocolMessageHandler" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlers.FileProtocolMessageHandler.Invoke(Aspose.Html.Net.INetworkOperationContext)">
      <summary>
            When overridden in a derived class is used to implement the message handling.
            </summary>
      <param name="context">The context.</param>
    </member>
    <member name="T:Aspose.Html.Net.MessageHandlers.FtpProtocolMessageHandler">
      <summary>
            Represents the <c>ftp:</c> protocol message handler.
            </summary>
      <seealso cref="T:Aspose.Html.Net.MessageHandler" />
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlers.FtpProtocolMessageHandler.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.MessageHandlers.FtpProtocolMessageHandler" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlers.FtpProtocolMessageHandler.Invoke(Aspose.Html.Net.INetworkOperationContext)">
      <summary>
            When overridden in a derived class is used to implement the message handling.
            </summary>
      <param name="context">The context.</param>
    </member>
    <member name="T:Aspose.Html.Net.MessageHandlers.HttpProtocolMessageHandler">
      <summary>
            Represents the <c>http:</c> protocol message handler.
            </summary>
      <seealso cref="T:Aspose.Html.Net.MessageHandler" />
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlers.HttpProtocolMessageHandler.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.MessageHandlers.HttpProtocolMessageHandler" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlers.HttpProtocolMessageHandler.Invoke(Aspose.Html.Net.INetworkOperationContext)">
      <summary>
            When overridden in a derived class is used to implement the message handling.
            </summary>
      <param name="context">The context.</param>
    </member>
    <member name="T:Aspose.Html.Net.MessageHandlers.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Net.MessageHandlers</b> namespace is
            presented by classes - message handlers of different protocols.
            </summary>
    </member>
    <member name="T:Aspose.Html.Net.MessageFilters.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Net.MessageFilters</b> namespace provides
            classes which implement message filter abstraction.
            </summary>
    </member>
    <member name="T:Aspose.Html.Net.MessageFilters.ProtocolMessageFilter">
      <summary>
            Represents implementation of message filter by the resource protocol.
            </summary>
      <seealso cref="T:Aspose.Html.Net.MessageFilter" />
    </member>
    <member name="M:Aspose.Html.Net.MessageFilters.ProtocolMessageFilter.#ctor(System.String[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.MessageFilters.ProtocolMessageFilter" /> class.
            </summary>
      <param name="protocols">The protocols.</param>
    </member>
    <member name="M:Aspose.Html.Net.MessageFilters.ProtocolMessageFilter.Match(Aspose.Html.Net.INetworkOperationContext)">
      <summary>
            When overridden in a derived class, tests whether a Context satisfies the filter criteria.
            </summary>
      <param name="context">The context.</param>
      <returns>
        <value>true</value> if the Context object satisfies the filter criteria; otherwise, <value>false</value>.
            </returns>
    </member>
    <member name="T:Aspose.Html.Net.Headers.ContentDispositionHeaderValue">
      <summary>
            Represent Content-Disposition header value.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.Headers.ContentDispositionHeaderValue.#ctor(System.String)">
      <summary>
            Create a new instance of this disposition type.
            </summary>
      <param name="dispositionType">Disposition type</param>
    </member>
    <member name="M:Aspose.Html.Net.Headers.ContentDispositionHeaderValue.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>Returns a <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="M:Aspose.Html.Net.Headers.ContentDispositionHeaderValue.Equals(System.Object)">
      <summary>
             Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="P:Aspose.Html.Net.Headers.ContentDispositionHeaderValue.DispositionType">
      <summary>
            Get or set disposition type
            </summary>
    </member>
    <member name="P:Aspose.Html.Net.Headers.ContentDispositionHeaderValue.Parameters">
      <summary>
            Get collection of paremeters
            </summary>
      <value>
            The parameters.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.Headers.ContentDispositionHeaderValue.Name">
      <summary>
            The name for a content body part.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.Headers.ContentDispositionHeaderValue.FileName">
      <summary>
            The name of the stored file.
            </summary>
      <value>
            The name of the file.
            </value>
    </member>
    <member name="T:Aspose.Html.Net.Headers.ContentTypeHeaderValue">
      <summary>
            Represents a Content-Type header value.
            </summary>
    </member>
    <member name="P:Aspose.Html.Net.Headers.ContentTypeHeaderValue.CharSet">
      <summary>
            Gets or sets the character-set for content.
            </summary>
      <value>
            The character set.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.Headers.ContentTypeHeaderValue.MediaType">
      <summary>
            Gets or sets the media-type for content.
            </summary>
      <value>
            The type of the media.
            </value>
    </member>
    <member name="T:Aspose.Html.Net.Headers.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Net.Headers</b> provides few data classes for
            describing header content at networking.
            </summary>
    </member>
    <member name="T:Aspose.Html.Net.Headers.NameValueHeaderValue">
      <summary>
            Represents a name/value pair that describe a header value.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.Headers.NameValueHeaderValue.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Net.Headers.NameValueHeaderValue.Name">
      <summary>
            Gets the parameter name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.Headers.NameValueHeaderValue.Value">
      <summary>
            Gets or sets the parameter value.
            </summary>
      <value>
            The value.
            </value>
    </member>
    <member name="T:Aspose.Html.IO.FileCreateStreamProvider">
      <summary>
            Represents <see cref="T:System.IO.FileStream" /> implementation for providing streams to the rendering devices.
            </summary>
      <seealso cref="T:Aspose.Html.IO.ICreateStreamProvider" />
    </member>
    <member name="M:Aspose.Html.IO.FileCreateStreamProvider.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.IO.FileCreateStreamProvider" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.IO.FileCreateStreamProvider.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.IO.FileCreateStreamProvider" /> class.
            </summary>
      <param name="name">The file name.</param>
    </member>
    <member name="M:Aspose.Html.IO.FileCreateStreamProvider.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.IO.FileCreateStreamProvider" /> class.
            </summary>
      <param name="directory">The directory.</param>
      <param name="name">The file name.</param>
    </member>
    <member name="M:Aspose.Html.IO.FileCreateStreamProvider.GetStream(System.String,System.String)">
      <summary>
            Provides a stream for rendering.
            </summary>
      <param name="name">The name of the stream.</param>
      <param name="extension">The file name extension to use if a file stream is being created.</param>
      <returns>
            A Stream object that is used for writing data during the rendering operations.
            </returns>
    </member>
    <member name="M:Aspose.Html.IO.FileCreateStreamProvider.GetStream(System.String,System.String,System.Int32)">
      <summary>
            Provides a stream for rendering.
            </summary>
      <param name="name">The name of the stream.</param>
      <param name="extension">The file name extension to use if a file stream is being created.</param>
      <param name="page">The page number of the document.</param>
      <returns>
            A Stream object that is used for writing data during the rendering operations.
            </returns>
    </member>
    <member name="M:Aspose.Html.IO.FileCreateStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary>
            Releases the stream.
            </summary>
      <param name="stream">The stream being released.</param>
    </member>
    <member name="M:Aspose.Html.IO.FileCreateStreamProvider.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="P:Aspose.Html.IO.FileCreateStreamProvider.Directory">
      <summary>
            Gets or sets the directory.
            </summary>
      <value>
            The directory.
            </value>
    </member>
    <member name="P:Aspose.Html.IO.FileCreateStreamProvider.Name">
      <summary>
            Gets or sets the name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="T:Aspose.Html.IO.IBlob">
      <summary>
            A Blob object refers to a byte sequence, and has a size attribute which is the total number of bytes in the byte sequence, and a type attribute, which is an ASCII-encoded string in lower case representing the media type of the byte sequence.
            </summary>
    </member>
    <member name="M:Aspose.Html.IO.IBlob.Slice(System.UInt64,System.UInt64,System.String)">
      <summary>
            Returns a new Blob object with bytes ranging from the optional start parameter up to but not including the optional end parameter, 
            and with a type attribute that is the value of the optional contentType parameter.
            </summary>
      <param name="start">The parameter is a value for the start point of a slice</param>
      <param name="end">The parameter is a value for the start point of a slice</param>
      <param name="contentType">The parameter is a media type of the Blob</param>
      <returns>Returns a new Blob object with bytes ranging from the optional start parameter up to but not including the optional end parameter, and with a type attribute that is the value of the optional contentType parameter.</returns>
    </member>
    <member name="P:Aspose.Html.IO.IBlob.Size">
      <summary>
            Returns the size of the byte sequence in number of bytes.
            On getting, conforming user agents must return the total number of bytes that can be read by a FileReader 
            or FileReaderSync object, or 0 if the Blob has no bytes to be read. 
            </summary>
    </member>
    <member name="P:Aspose.Html.IO.IBlob.Type">
      <summary>
            The ASCII-encoded string in lower case representing the media type of the Blob.
            On getting, user agents must return the type of a Blob as an ASCII-encoded string in lower case, 
            such that when it is converted to a byte sequence, it is a parsable MIME type, 
            or the empty string – 0 bytes – if the type cannot be determined. 
            </summary>
    </member>
    <member name="T:Aspose.Html.IO.ICreateStreamProvider">
      <summary>
            Represents an interface that can be implemented by classes providing streams to the rendering devices.
            </summary>
    </member>
    <member name="M:Aspose.Html.IO.ICreateStreamProvider.GetStream(System.String,System.String)">
      <summary>
            Provides a stream for rendering.
            </summary>
      <param name="name">The name of the stream.</param>
      <param name="extension">The file name extension to use if a file stream is being created.</param>
      <returns>
            A Stream object that is used for writing data during the rendering operations.
            </returns>
    </member>
    <member name="M:Aspose.Html.IO.ICreateStreamProvider.GetStream(System.String,System.String,System.Int32)">
      <summary>
            Provides a stream for rendering.
            </summary>
      <param name="name">The name of the stream.</param>
      <param name="extension">The file name extension to use if a file stream is being created.</param>
      <param name="page">The page number of the document.</param>
      <returns>
            A Stream object that is used for writing data during the rendering operations.
            </returns>
    </member>
    <member name="M:Aspose.Html.IO.ICreateStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary>
            Releases the stream.
            </summary>
      <param name="stream">The stream being released.</param>
    </member>
    <member name="T:Aspose.Html.IO.IFile">
      <summary>
            A File object is a Blob object with a name attribute, which is a string; it can be created within the web application via a constructor, or is a reference to a byte sequence from a file from the underlying (OS) file system.
            </summary>
    </member>
    <member name="P:Aspose.Html.IO.IFile.Name">
      <summary>
            The name of the file.
            On getting, this must return the name of the file as a string.
            </summary>
    </member>
    <member name="P:Aspose.Html.IO.IFile.LastModified">
      <summary>
            The last modified date of the file. On getting, if user agents can make this information available, 
            this must return a long long set to the time the file was last modified as the number of milliseconds since the Unix Epoch.
            </summary>
    </member>
    <member name="T:Aspose.Html.IO.IFileList">
      <summary>
            Represent the interface for list of files.
            </summary>
    </member>
    <member name="P:Aspose.Html.IO.IFileList.Item(System.Int32)">
      <summary>
            Returns the indexth file in the list.
            </summary>
      <param name="index">The index of file.</param>
      <returns>The file.</returns>
    </member>
    <member name="P:Aspose.Html.IO.IFileList.Length">
      <summary>
            Return length for list of files.
            </summary>
    </member>
    <member name="T:Aspose.Html.IO.IOutputStorage">
      <summary>
            Provides the creation and management of output streams <see cref="T:Aspose.Html.IO.OutputStream" />.
            </summary>
    </member>
    <member name="M:Aspose.Html.IO.IOutputStorage.CreateStream(Aspose.Html.IO.OutputStreamContext)">
      <summary>
            Creates the output stream <see cref="T:Aspose.Html.IO.OutputStream" />.
            </summary>
      <param name="context">Specifies the output stream context <see cref="T:Aspose.Html.IO.OutputStreamContext" />.</param>
      <returns>The output stream.</returns>
    </member>
    <member name="M:Aspose.Html.IO.IOutputStorage.ReleaseStream(Aspose.Html.IO.OutputStream)">
      <summary>
            Releases the output stream.
            </summary>
      <param name="stream">The output stream.</param>
    </member>
    <member name="T:Aspose.Html.IO.NamespaceDoc">
      <summary>
            In addition to standard IO (input-output) tools
            the <b>Aspose.Html.IO</b> namespace contains helper classes and interfaces.
            </summary>
    </member>
    <member name="T:Aspose.Html.IO.OutputStream">
      <summary>
            A surrogate stream wraps the real output stream and controls access to it.
            <see cref="T:Aspose.Html.IO.OutputStream" /> contains URI data that describes location of the output stream.
            </summary>
    </member>
    <member name="M:Aspose.Html.IO.OutputStream.#ctor(System.IO.Stream,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.IO.OutputStream" /> class.
            </summary>
      <param name="stream">The output stream to be wrapped.</param>
      <param name="uri">The URI of stream location.</param>
    </member>
    <member name="M:Aspose.Html.IO.OutputStream.Flush">
      <summary>
            Clears all buffers for the wrapped output stream and causes any buffered data to be written to the underlying device.
            </summary>
    </member>
    <member name="M:Aspose.Html.IO.OutputStream.Close">
      <summary>
            Closes the wrapped output stream and current stream.
            </summary>
    </member>
    <member name="M:Aspose.Html.IO.OutputStream.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads a sequence of bytes from the wrapped output stream
            and advances the position within the stream by the number of bytes read.
            </summary>
      <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified
            byte array with the values between offset and (offset + count - 1) replaced by
            the bytes read from the the wrapped output stream.</param>
      <param name="offset"> The zero-based byte offset in buffer at which to begin storing the data read
            from the wrapped output stream.</param>
      <param name="count">The maximum number of bytes to be read from the wrapped output stream.</param>
      <returns>The total number of bytes read into the buffer. This can be less than the number
            of bytes requested if that many bytes are not currently available, or zero (0)
            if the end of the stream has been reached.</returns>
    </member>
    <member name="M:Aspose.Html.IO.OutputStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>
            Sets the position within the wrapped output stream.
            </summary>
      <param name="offset">A byte offset relative to the origin parameter.</param>
      <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain
            the new position.</param>
      <returns>The new position within the current stream.</returns>
    </member>
    <member name="M:Aspose.Html.IO.OutputStream.SetLength(System.Int64)">
      <summary>
            Sets the length of the wrapped output stream.
            </summary>
      <param name="value">The desired length of the wrapped output stream in bytes.</param>
    </member>
    <member name="M:Aspose.Html.IO.OutputStream.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Writes a sequence of bytes to the wrapped output
            stream and advances the current position within this stream by the number of
            bytes written.
            </summary>
      <param name="buffer">An array of bytes. This method copies count bytes from buffer to the wrapped output
            stream.</param>
      <param name="offset">The zero-based byte offset in buffer at which to begin copying bytes to the wrapped output
            stream.</param>
      <param name="count">The number of bytes to be written to the wrapped output stream.</param>
    </member>
    <member name="P:Aspose.Html.IO.OutputStream.Uri">
      <summary>
            Gets the URI of stream location.
            </summary>
    </member>
    <member name="P:Aspose.Html.IO.OutputStream.CanRead">
      <summary>
            Gets a value indicating whether the wrapped output stream supports reading.
            </summary>
    </member>
    <member name="P:Aspose.Html.IO.OutputStream.CanSeek">
      <summary>
            Gets a value indicating whether the wrapped output stream supports seeking.
            </summary>
    </member>
    <member name="P:Aspose.Html.IO.OutputStream.CanWrite">
      <summary>
            Gets a value indicating whether the wrapped output stream supports writing.
            </summary>
    </member>
    <member name="P:Aspose.Html.IO.OutputStream.Length">
      <summary>
            Gets the length in bytes of the wrapped output stream.
            </summary>
    </member>
    <member name="P:Aspose.Html.IO.OutputStream.Position">
      <summary>
            Gets or sets the position within the wrapped output stream.
            </summary>
    </member>
    <member name="T:Aspose.Html.IO.OutputStreamContext">
      <summary>
            A context for initialization of the output stream.
            </summary>
    </member>
    <member name="P:Aspose.Html.IO.OutputStreamContext.Uri">
      <summary>
            Gets the original URI of the saved resource.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.AtPagePriority">
      <summary>
            Specifies possible orders of applying page size declarations.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.AtPagePriority.OptionsPriority">
      <summary>
            Specifies that <see cref="T:Aspose.Html.Rendering.PageSetup" /> values declared in <see cref="T:Aspose.Html.Rendering.RenderingOptions" /> will override values defined in css by <c>@page</c> rules <seealso cref="!:https://www.w3.org/TR/CSS2/page.html#page-selectors" />.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.AtPagePriority.CssPriority">
      <summary>
            Specifies that <c>@page</c> rules <seealso cref="!:https://www.w3.org/TR/CSS2/page.html#page-selectors" /> defined in css will override values defined in <see cref="T:Aspose.Html.Rendering.PageSetup" />.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.CssOptions">
      <summary>
            Represents css rendering options.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.CssOptions.MediaType">
      <summary>
            Gets or sets <see cref="T:Aspose.Html.Rendering.MediaType" /> which will be used for media queries resolution during rendering. Default value is <c>Print</c>.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.GlyphInfo">
      <summary>
            Contains glyph related information.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.GlyphInfo.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Rendering.GlyphInfo.Width">
      <summary>
            Gets the width of the glyph, in points.
            </summary>
      <value>
            Width in points.
            </value>
    </member>
    <member name="P:Aspose.Html.Rendering.GlyphInfo.Offset">
      <summary>
            Gets the offset to the next glyph in points.
            </summary>
      <value>
            Offset in points.
            </value>
    </member>
    <member name="P:Aspose.Html.Rendering.GlyphInfo.Index">
      <summary>
            Gets the index of this glyph in the font.
            </summary>
      <value>
            Index of the glyph.
            </value>
    </member>
    <member name="P:Aspose.Html.Rendering.GlyphInfo.StringRepresentation">
      <summary>
            Gets the string representation of this glyph.
            </summary>
      <value>
              A <see cref="T:System.String" /> that represents this glyph.
            </value>
    </member>
    <member name="T:Aspose.Html.Rendering.GraphicContext">
      <summary>
            Holds current graphics control parameters.
            These parameters define the global framework within which the graphics operators execute.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.GraphicContext.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.GraphicContext" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.GraphicContext.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>
            Modify the current transformation matrix by multiplying the specified matrix.
            </summary>
      <param name="matrix">Transformation matrix.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.GraphicContext.Clone">
      <summary>
            Creates a new instance of a GraphicContext class with the same property values as an existing instance.
            </summary>
      <returns>Instance of a GraphicContext</returns>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.LineCap">
      <summary>
            Sets or gets the code specifying the shape of the endpoints for any open path that is stroked.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.LineDashOffset">
      <summary>
            Sets or gets the phase offset of the current line dash pattern.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.LineDashPattern">
      <summary>
            Sets or gets the description of the dash pattern to be used when paths are stroked.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.LineDashStyle">
      <summary>
            Sets of gets the style of dashed lines of a stroked path.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.LineJoin">
      <summary>
            Sets or gets the code specifying the shape of joints between connected segments of a stroked path.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.LineWidth">
      <summary>
            Sets or gets the thickness of paths to be stroked.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.MiterLimit">
      <summary>
            Sets or gets the maximum length of mitered line joins for stroked paths. 
            This parameter limits the length of "spikes" produced when line segments join at sharp angles.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.FillBrush">
      <summary>
            Sets or gets the brush object that is used to fill the interiors of paths.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.StrokeBrush">
      <summary>
            Sets or gets the brush object that is used for stroked paths.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.Font">
      <summary>
            Sets or gets the true type font object that is used for rendering text.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.FontSize">
      <summary>
            Sets or gets text font size.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.FontStyle">
      <summary>
            Sets or gets text font style.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.CharacterSpacing">
      <summary>
            Sets or gets character spacing.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.TransformationMatrix">
      <summary>
            Sets or gets transformation matrix.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.TextInfo">
      <summary>
            Gets a <see cref="T:Aspose.Html.Rendering.TextInfo" /> object which contains information about rendered text.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Rendering.TextInfo" /> object.
            </value>
    </member>
    <member name="T:Aspose.Html.Rendering.IDevice">
      <summary>
            Defines methods and properties that support custom rendering of the graphic elements like paths, text and images.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.SaveGraphicContext">
      <summary>
            Pushes a copy of the entire graphics context onto the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.RestoreGraphicContext">
      <summary>
            Restores the entire graphics context to its former value by popping it from the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.BeginDocument(Aspose.Html.Dom.Document)">
      <summary>
            Begins rendering of the document.
            </summary>
      <param name="document">The document.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.EndDocument">
      <summary>
            Ends rendering of the document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.BeginPage(System.Drawing.SizeF)">
      <summary>
            Begins rendering of the new page.
            </summary>
      <param name="size">Size of the page.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.EndPage">
      <summary>
            Ends rendering of the current page.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.BeginElement(Aspose.Html.Dom.Element,System.Drawing.RectangleF)">
      <summary>
            Begins rendering of the element.
            </summary>
      <param name="element">The <see cref="T:Aspose.Html.Dom.Element" />.</param>
      <param name="rect">Bounding box of the node.</param>
      <returns>Returns [true] if element should be processed.</returns>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.EndElement(Aspose.Html.Dom.Element)">
      <summary>
            Ends rendering of the element.
            </summary>
      <param name="element">The <see cref="T:Aspose.Html.Dom.Element" />.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.ClosePath">
      <summary>
            Closes the current subpath by appending a straight line segment from the current point to the starting point of the subpath. 
            If the current subpath is already closed, "ClosePath" does nothing.
            This operator terminates the current subpath. Appending another segment to the current path begins a new subpath, 
            even if the new segment begins at the endpoint reached by the "ClosePath" method.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.MoveTo(System.Drawing.PointF)">
      <summary>
            Begins a new subpath by moving the current point to coordinates of the parameter pt, omitting any connecting line segment. 
            If the previous path construction method in the current path was also "MoveTo", the new "MoveTo" overrides it; 
            no vestige of the previous "MoveTo" operation remains in the path.
            </summary>
      <param name="pt">Point of where to move the path to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.LineTo(System.Drawing.PointF)">
      <summary>
            Appends a straight line segment from the current point to the point (pt). The new current point is pt.
            </summary>
      <param name="pt">Point of where to create the line to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.AddRect(System.Drawing.RectangleF)">
      <summary>
            Appends a rectangle to the current path as a complete subpath.
            </summary>
      <param name="rect">A rectangle to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.CubicBezierTo(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Appends a cubic Bézier curve to the current path. The curve extends from the current point to the point pt3,
            using pt1 and pt2 as the Bézier control points. The new current point is pt3.
            </summary>
      <param name="pt1">Coordinates of first point</param>
      <param name="pt2">Coordinates of second point</param>
      <param name="pt3">Coordinates of third point</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.Stroke">
      <summary> 
            Strokes a line along the current path. The stroked line follows each straight or curved segment in the path, 
            centered on the segment with sides parallel to it. Each of the path’s subpaths is treated separately. 
            This method terminates current path. 
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.Fill(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Fills the entire region enclosed by the current path. 
            If the path consists of several disconnected subpaths, it fills the insides of all subpaths, 
            considered together. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.Clip(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Modifies the current clipping path by intersecting it with the current path, using the FillMode rule to determine the region to fill. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is clipped</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.StrokeAndFill(System.Drawing.Drawing2D.FillMode)">
      <summary>
            Strokes and fill current path.
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.FillText(System.String,System.Drawing.PointF)">
      <summary>
            Fills the specified text string at the specified location.
            </summary>
      <param name="text">String to fill.</param>
      <param name="pt">Point that specifies the coordinates of the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.StrokeText(System.String,System.Drawing.PointF)">
      <summary>
            Strokes the specified text string at the specified location.
            </summary>
      <param name="text">String to stroke.</param>
      <param name="pt">Point that specifies the coordinates where to start the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.DrawImage(System.Byte[],Aspose.Html.Rendering.ImageType,System.Drawing.RectangleF)">
      <summary>
            Draws the specified image.
            </summary>
      <param name="data">An array of bytes representing the image.</param>
      <param name="type">Image type.</param>
      <param name="rect">A rectangel which determines position and size to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.Flush">
      <summary>
            Flushes all data to output stream.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.IDevice.Options">
      <summary>
            Gets rendering options.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.IDevice.GraphicContext">
      <summary>
            Gets the graphic context.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.ImageType">
      <summary>
            Specifies the file format of the image
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Unknown">
      <summary>
            Image format was not recognized.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Bmp">
      <summary>
            Gets the bitmap (BMP) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Emf">
      <summary>
            Gets the enhanced metafile (EMF) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Gif">
      <summary>
            Gets the Graphics Interchange Format (GIF) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Icon">
      <summary>
            Gets the Windows icon image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Jpeg">
      <summary>
            Gets the Joint Photographic Experts Group (JPEG) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Png">
      <summary>
            Gets the W3C Portable Network Graphics (PNG) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Tiff">
      <summary>
            Gets the Tagged Image File Format (TIFF) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Wmf">
      <summary>
            Gets the Windows metafile (WMF) image format.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.MediaType">
      <summary>
            Specifies possible media types used during rendering.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.MediaType.Print">
      <summary>
            The <c>Print</c> media is used during rendering.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.MediaType.Screen">
      <summary>
            The <c>Screen</c> media is used during rendering.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.PageLayoutOptions">
      <summary>
            Specifies flags that together with other PageSetup options determine sizes and layouts of pages.
            These flags can be combined together according to their descriptions.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.PageLayoutOptions.None">
      <summary>
            Default value which indicates that the PageLayoutOptions will not affect the sizes and layouts of pages.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.PageLayoutOptions.FitToContentWidth">
      <summary>
            This flag indicates that the width of the pages is determined from the content size itself, not from the specified page width.
            The width of content is calculated individually for every page.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.PageLayoutOptions.UseWidestPage">
      <summary>
            When combined with <see cref="F:Aspose.Html.Rendering.PageLayoutOptions.FitToContentWidth" /> indicates that the width of every page will be the same and will be equal to the widest content size among all pages.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.PageLayoutOptions.FitToWidestContentWidth">
      <summary>
            This flag indicates that the width of the page is determined from the content size itself, not from the specified page width.
            The width of every page will be the same and will be equal to the widest content size among all pages.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.PageLayoutOptions.FitToContentHeight">
      <summary>
            This flag indicates that the height of the page is determined from the content size itself, not from the specified page height.
            All the documents content will be located on the single page if this flag is specified.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.PageLayoutOptions.ScaleToPageWidth">
      <summary>
            This flag indicates that the content of the document will be scaled to fit the page where the difference between the available page width and the overlapping content is greatest.
            It collides with <see cref="F:Aspose.Html.Rendering.PageLayoutOptions.FitToContentWidth" /> flag and if both flags are specified only <see cref="F:Aspose.Html.Rendering.PageLayoutOptions.ScaleToPageWidth" /> will take affect.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.PageLayoutOptions.ScaleToPageHeight">
      <summary>
            This flag indicates that the content of the document will be scaled to fit the height of the first page.
            It collides with <see cref="F:Aspose.Html.Rendering.PageLayoutOptions.FitToContentHeight" /> flag and if both flags are specified only <see cref="F:Aspose.Html.Rendering.PageLayoutOptions.ScaleToPageHeight" /> will take affect.
            All document content will be placed on the single page only.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.PageSetup">
      <summary>
            Represents a page setup object is used for configuration output page-set.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.PageSetup.SetLeftRightPage(Aspose.Html.Drawing.Page,Aspose.Html.Drawing.Page)">
      <summary>
            Sets the Left/Right page configuration.
            </summary>
      <param name="leftPage">The left page.</param>
      <param name="rightPage">The right page.</param>
    </member>
    <member name="P:Aspose.Html.Rendering.PageSetup.AtPagePriority">
      <summary>
            Gets or sets <see cref="T:Aspose.Html.Rendering.AtPagePriority" /> which will determine order of applying page size declarations. By default options will override css <c>@page</c> rules <seealso cref="!:https://www.w3.org/TR/CSS2/page.html#page-selectors" />.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.PageSetup.PageLayoutOptions">
      <summary>
            Gets or sets the <see cref="T:Aspose.Html.Rendering.PageLayoutOptions" />. Default value is <see cref="F:Aspose.Html.Rendering.PageLayoutOptions.None" />, any other value will override the <see cref="P:Aspose.Html.Rendering.PageSetup.AdjustToWidestPage" /> behaviour. Works only with HTML documents.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.PageSetup.AdjustToWidestPage">
      <summary>
            Gets or sets flag that determines case when page size will be adjusted to widest page in document.
            This options is time-consuming so time of document processing can be increased in two times. Adjustment will
            take place only if widest page in document is wider than page size determined in <see cref="T:Aspose.Html.Rendering.PageSetup" />. Adjusted
            page size will be used for all pages in document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.PageSetup.LeftPage">
      <summary>
            Gets the Odd Page configuration.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.PageSetup.RightPage">
      <summary>
            Gets the Even Page configuration.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.PageSetup.AnyPage">
      <summary>
            Gets or sets all pages configuration in the the page-sequence.
            </summary>
      <value>
            Any page.
            </value>
    </member>
    <member name="P:Aspose.Html.Rendering.PageSetup.FirstPage">
      <summary>
            Gets or sets the first page configuration.
            </summary>
      <value>
            The first page.
            </value>
    </member>
    <member name="T:Aspose.Html.Rendering.RenderingOptions">
      <summary>
            Represents rendering options.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.RenderingOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.RenderingOptions" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.RenderingOptions.Css">
      <summary>
            Gets a <see cref="T:Aspose.Html.Rendering.CssOptions" /> object which is used for configuration of css properties processing.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Rendering.CssOptions" /> object.
            </value>
    </member>
    <member name="P:Aspose.Html.Rendering.RenderingOptions.PageSetup">
      <summary>
            Gets a page setup object is used for configuration output page-set.
            </summary>
      <value>
            The page setup.
            </value>
    </member>
    <member name="P:Aspose.Html.Rendering.RenderingOptions.HorizontalResolution">
      <summary>
            Sets or gets horizontal resolution for internal (which are used during filters processing) images, in pixels per inch. By default this property is 300 dpi.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.RenderingOptions.BackgroundColor">
      <summary>
            Gets or sets <see cref="T:System.Drawing.Color" /> which will fill background of every page. Default value is <see cref="P:System.Drawing.Color.Transparent" />.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.RenderingOptions.VerticalResolution">
      <summary>
            Sets or gets vertical resolution for internal (which are used during filters processing) images, in pixels per inch. By default this property is 300 dpi.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.TextInfo">
      <summary>
            Contains information about rendered text.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.TextInfo.GlyphInfos">
      <summary>
            Gets information about rendered glyphs.
            </summary>
      <value>
            A <see cref="T:System.Collections.Generic.IList`1" /> that contains information about rendered glyphs.
            </value>
    </member>
    <member name="T:Aspose.Html.Rendering.Fonts.FontMatcher">
      <summary>
            This class allows you to control some parts of the font matching algorithm.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Fonts.FontMatcher.MatchFontFallback(Aspose.Html.Rendering.Fonts.FontMatchingProperties,System.UInt32)">
      <summary>
            This method is called if there is no appropriate font found in the fonts lookup folders.
            It should return true type font based on the <paramref name="fontMatchingProperties" /> which can render <paramref name="charCode" />, or <c>null</c> if such font is not available.
            </summary>
      <param name="fontMatchingProperties">Properties of the matched font.</param>
      <param name="charCode">Code of the character which will be rendered using the matched font.</param>
      <returns>A byte array containing the fonts data or <c>null</c>.</returns>
    </member>
    <member name="T:Aspose.Html.Rendering.Fonts.FontMatchingProperties">
      <summary>
            This class contains properties which describe the font being matched.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Fonts.FontMatchingProperties.FontFamilies">
      <summary>
            Gets the collection of font families.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Fonts.FontMatchingProperties.FontStyle">
      <summary>
            Gets the font style value. This property can have such values: normal, italic, oblique.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Fonts.FontMatchingProperties.FontWeight">
      <summary>
            Gets the font weight value.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Fonts.FontMatchingProperties.FontStretch">
      <summary>
            Gets the font stretch value.
            </summary>
    </member>
    <member name="T:Aspose.Html.Drawing.Angle">
      <summary>
            The angle data type
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.OnConvert(System.Double,Aspose.Html.Drawing.UnitType,Aspose.Html.Drawing.UnitType)">
      <summary>
            Called when unit is converted to the specified unit type.
            </summary>
      <param name="value">The value.</param>
      <param name="fromType">From unit type.</param>
      <param name="toType">To unit type.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_Addition(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator +.
            </summary>
      <param name="a">Parameter a.</param>
      <param name="b">Parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolution
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_Subtraction(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator -.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolutions
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_LessThan(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator &lt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_GreaterThan(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator &gt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_LessThanOrEqual(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator &lt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_GreaterThanOrEqual(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator &gt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_Equality(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_Inequality(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Html.Drawing.BrushType">
      <summary>
            Specifies the type of brush.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.BrushType.Solid">
      <summary>
            Type is ISolidBrush 
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.BrushType.Texture">
      <summary>
            Type is ITextureBrush 
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.BrushType.LinearGradient">
      <summary>
            Type is ILinearGradientBrush 
            </summary>
    </member>
    <member name="T:Aspose.Html.Drawing.Dimension">
      <summary>
            Provides the base class for dimensions. 
            The general term 'dimension' refers to a number with a unit attached to it, and are denoted by <see cref="T:Aspose.Html.Drawing.UnitType" />.
            </summary>
      <seealso cref="T:Aspose.Html.Drawing.Unit" />
    </member>
    <member name="M:Aspose.Html.Drawing.Dimension.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Drawing.Frequency">
      <summary>
            The 'frequency' unit.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.OnConvert(System.Double,Aspose.Html.Drawing.UnitType,Aspose.Html.Drawing.UnitType)">
      <summary>
            Called when unit is converted to the specified unit type.
            </summary>
      <param name="value">The value.</param>
      <param name="fromType">From unit type.</param>
      <param name="toType">To unit type.</param>
      <returns>
            Returns value that is converted to specified type.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_Addition(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator +.
            </summary>
      <param name="a">Parameter a.</param>
      <param name="b">Parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolution
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_Subtraction(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator -.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolutions
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_LessThan(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator &lt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_GreaterThan(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator &gt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_LessThanOrEqual(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator &lt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_GreaterThanOrEqual(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator &gt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_Equality(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_Inequality(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Html.Drawing.IBrush">
      <summary>
             Declares method for getting of brush type.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.IBrush.Type">
      <summary>
            Get type of brush;
            </summary>
      <returns>Type of brush</returns>
    </member>
    <member name="T:Aspose.Html.Drawing.IGradientBrush">
      <summary>
            Declare methods for getting common properties of gradient brushes.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.IGradientBrush.InterpolationColors">
      <summary>
            Get the interpolation colors that defines a multicolor linear gradient.
            </summary>
      <returns>Interpolation colors.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.IGradientBrush.BlendPositions">
      <summary>
            Get the blend positions that define a custom falloff for the gradient.
            </summary>
      <returns>Blend positions.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.IGradientBrush.BlendFactors">
      <summary>
            Get the blend factors that define a custom falloff for the gradient.
            </summary>
      <returns>Blend factors.</returns>
    </member>
    <member name="T:Aspose.Html.Drawing.IInterpolationColor">
      <summary>
            Desclares methods for getting interpolation color.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.IInterpolationColor.Color">
      <summary>
            Get the color that represents the colors to use at corresponding positions along a gradient.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.IInterpolationColor.Position">
      <summary>
            Gets the color position.
            </summary>
      <value>
            The position.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.ILinearGradientBrush">
      <summary>
             Defines brush interface with a linear gradient.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.ILinearGradientBrush.Rect">
      <summary>
            Get a rectangular region that defines the starting and ending points of the gradient.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ILinearGradientBrush.StartColor">
      <summary>
            Get the starting color of the linear gradient.
            </summary>
      <returns>Start color</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ILinearGradientBrush.EndColor">
      <summary>
            Get the ending color of the linear gradient.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ILinearGradientBrush.StartPoint">
      <summary>
            Get the starting point of the linear gradient.
            </summary>
      <returns>Start point.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ILinearGradientBrush.EndPoint">
      <summary>
            Get the starting point of the linear gradient.
            </summary>
      <returns>End point.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ILinearGradientBrush.Angle">
      <summary>
            Gets the angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.
            </summary>
      <value>
            The angle.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.ISolidBrush">
      <summary>
            Defines brush interface of a single color
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.ISolidBrush.Color">
      <summary>
            Get color of the brush.
            </summary>
      <returns>Color of brush</returns>
    </member>
    <member name="T:Aspose.Html.Drawing.ITextureBrush">
      <summary>
            Defines brush interface that uses an image to fill the interior of a shape.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.ITextureBrush.Image">
      <summary>
            Gets or sets the image used by the brush.
            </summary>
      <returns>Image data.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITextureBrush.Opacity">
      <summary>
            Get opacity value in a color transform matrix.
            </summary>
      <returns>Opacity.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITextureBrush.ImageArea">
      <summary>
            Specifies the portion of the image used by the brush.
            If it equals RectangleF.Empty then the whole image will be used.
            Coordinates are in pixels.
            </summary>
      <returns>Image area</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITextureBrush.ColorMap">
      <summary>
            The number of elements must be even. Every even element is old color. Every odd element is new color.
            </summary>
      <value>
            The color map.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.ITransformableBrush">
      <summary>
            Desclares methods for getting transformation matrix and wrap mode.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.ITransformableBrush.TransformationMatrix">
      <summary>
             Get the transform. The transform defines a local geometric transform for this brush.
            </summary>
      <returns>Transform matrix</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITransformableBrush.WrapMode">
      <summary>
            Gets or sets the wrap mode. Wrap mode specifies how a texture or gradient is tiled
            when it is smaller than the area being filled.
            </summary>
      <returns>Wrap mode</returns>
    </member>
    <member name="T:Aspose.Html.Drawing.ITrueTypeFont">
      <summary>
            Declares methods for working with TrueType font.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.ITrueTypeFont.GetData">
      <summary>
            Open the stream with font data. The caller is responsible for disposing the stream.
            </summary>
      <returns>Stream with the font data</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.ITrueTypeFont.GetDescent(System.Single)">
      <summary>
            Returns the descent, in points.
            </summary>
      <param name="fontSize">Size of the font.</param>
      <returns>The descent in points.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.ITrueTypeFont.GetAscent(System.Single)">
      <summary>
            Returns the ascent, in points.
            </summary>
      <param name="fontSize">Size of the font.</param>
      <returns>The ascent in points.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITrueTypeFont.FamilyName">
      <summary>
            Get the name of the font family.
            </summary>
      <returns>Family name of font</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITrueTypeFont.SubFamilyName">
      <summary>
            The Font Subfamily name distinguishes the font in a group with the same Font Family name. 
            This is assumed to address style (italic, oblique) and weight (light, bold, black, etc.). 
            A font with no particular differences in weight or style (e.g. medium weight, not italic and fsSelection bit 6 set) should have the string "Regular" stored in this position. 
            </summary>
      <returns>Subfamily name of font</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITrueTypeFont.FullFontName">
      <summary>
            This should be a combination of "FamilyName" and "SubFamilyName". Exception: if the font is "Regular" as indicated 
            in "SubFamilyName", then use only the family name contained in "FamilyName". 
            An exception to the above definition of Full font name is for Microsoft platform strings 
            for CFF OpenType fonts: in this case, the Full font name string must be identical to the PostScript 
            FontName in the CFF Name INDEX.
            </summary>
      <returns>Full name of font</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITrueTypeFont.DataSize">
      <summary>
            Returns the size of the font data in bytes
            </summary>
      <returns>Size of the font data</returns>
    </member>
    <member name="T:Aspose.Html.Drawing.Length">
      <summary>
            Represents a length measurement unit.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.OnConvert(System.Double,Aspose.Html.Drawing.UnitType,Aspose.Html.Drawing.UnitType)">
      <summary>
            Called when unit is converted to the specified unit type.
            </summary>
      <param name="value">The value.</param>
      <param name="fromType">From unit type.</param>
      <param name="toType">To unit type.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_Addition(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator +.
            </summary>
      <param name="a">Parameter a.</param>
      <param name="b">Parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolution
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_Subtraction(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator -.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolutions
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_LessThan(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator &lt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_GreaterThan(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator &gt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_LessThanOrEqual(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator &lt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_GreaterThanOrEqual(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator &gt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_Equality(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_Inequality(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Html.Drawing.LengthOrAuto">
      <summary>
            Represents a container for storage length or 'auto' units..
            </summary>
      <seealso cref="T:Aspose.Html.Drawing.Unit" />
    </member>
    <member name="M:Aspose.Html.Drawing.LengthOrAuto.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.LengthOrAuto" /> class and sets state to 'auto'.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.LengthOrAuto.#ctor(Aspose.Html.Drawing.Length)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.LengthOrAuto" /> class and sets state to 'lenght'.
            </summary>
      <param name="length">The length.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.LengthOrAuto.SetAuto">
      <summary>
            Resets container to state 'auto'.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.LengthOrAuto.op_Implicit(Aspose.Html.Drawing.Length)~Aspose.Html.Drawing.LengthOrAuto">
      <summary>
            Performs an implicit conversion from <see cref="P:Aspose.Html.Drawing.LengthOrAuto.Length" /> to <see cref="T:Aspose.Html.Drawing.LengthOrAuto" />.
            </summary>
      <param name="length">The value.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.LengthOrAuto.Equals(Aspose.Html.Drawing.Unit)">
      <summary>
            Determines whether the specified <see cref="T:Aspose.Html.Drawing.Unit" />, is equal to this instance.
            </summary>
      <param name="other">The <see cref="T:Aspose.Html.Drawing.Unit" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:Aspose.Html.Drawing.Unit" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.LengthOrAuto.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Drawing.LengthOrAuto.UnitType">
      <summary>
            Gets the unit type of the <see cref="T:Aspose.Html.Drawing.Unit" />.
            </summary>
      <value>
            The type of the unit.
            </value>
    </member>
    <member name="P:Aspose.Html.Drawing.LengthOrAuto.Length">
      <summary>
            Gets or sets the length.
            </summary>
      <value>
            The length.
            </value>
    </member>
    <member name="P:Aspose.Html.Drawing.LengthOrAuto.IsAuto">
      <summary>
            Gets a value indicating whether this instance is in 'auto'.
            </summary>
      <value>
        <c>true</c> if this instance is automatic; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.Margin">
      <summary>
            Represents page margin.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Margin.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Margin" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Margin.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Margin" /> class.
            </summary>
      <param name="anyMargin">Any margin size.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Margin.#ctor(Aspose.Html.Drawing.Length)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Margin" /> class.
            </summary>
      <param name="anyMargin">Any margin size.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Margin.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Margin" /> class.
            </summary>
      <param name="left">The left size.</param>
      <param name="top">The top size.</param>
      <param name="right">The right size.</param>
      <param name="bottom">The bottom size.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Margin.#ctor(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Margin" /> class.
            </summary>
      <param name="left">The left size.</param>
      <param name="top">The top size.</param>
      <param name="right">The right size.</param>
      <param name="bottom">The bottom size.</param>
    </member>
    <member name="P:Aspose.Html.Drawing.Margin.Top">
      <summary>
            Gets or sets the top.
            </summary>
      <value>
            The top.
            </value>
    </member>
    <member name="P:Aspose.Html.Drawing.Margin.Right">
      <summary>
            Gets or sets the right.
            </summary>
      <value>
            The right.
            </value>
    </member>
    <member name="P:Aspose.Html.Drawing.Margin.Bottom">
      <summary>
            Gets or sets the bottom.
            </summary>
      <value>
            The bottom.
            </value>
    </member>
    <member name="P:Aspose.Html.Drawing.Margin.Left">
      <summary>
            Gets or sets the left.
            </summary>
      <value>
            The left.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Drawing</b> namespace contains objects and
            interfaces to specify measurement and units as well as
            drawing attribute objects like brushes, colors and fonts.
            </summary>
    </member>
    <member name="T:Aspose.Html.Drawing.Numeric">
      <summary>
            Provides the base class for numeric types.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Numeric.GetValue">
      <summary>
            Gets the unit value.
            </summary>
      <returns>
            The object value.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Numeric.CompareTo(Aspose.Html.Drawing.Numeric)">
      <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
      <param name="other">The other object to compare.</param>
      <returns>A value that indicates the relative order of the objects being compared.</returns>
      <exception cref="T:System.ArgumentNullException">other</exception>
      <exception cref="T:System.ArgumentException">
      </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Numeric.Equals(Aspose.Html.Drawing.Unit)">
      <summary>
            Determines whether the specified <see cref="T:Aspose.Html.Drawing.Unit" />, is equal to this instance.
            </summary>
      <param name="other">The <see cref="T:Aspose.Html.Drawing.Unit" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:Aspose.Html.Drawing.Unit" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Numeric.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Numeric.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Numeric.GetValue(Aspose.Html.Drawing.UnitType)">
      <summary>
            Gets the value converted to the specified <see cref="T:Aspose.Html.Drawing.UnitType" />.
            </summary>
      <param name="unitType">Type of the unit.</param>
      <returns>
            Returns value that is converted to specified type.
            </returns>
      <exception cref="T:System.ArgumentNullException">unitType</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Numeric.OnConvert(System.Double,Aspose.Html.Drawing.UnitType,Aspose.Html.Drawing.UnitType)">
      <summary>
            Called when unit is converted to the specified unit type.
            </summary>
      <param name="value">The value.</param>
      <param name="fromType">From unit type.</param>
      <param name="toType">To unit type.</param>
      <returns>
            Returns value that is converted to specified type.
            </returns>
    </member>
    <member name="T:Aspose.Html.Drawing.Page">
      <summary>
            Represents a page object is used for configuration output page.
            The lacuna value for page size is A4(210x297mm)
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Page.#ctor(Aspose.Html.Drawing.Size,Aspose.Html.Drawing.Margin)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Page" /> class.
            </summary>
      <param name="size">The page size.</param>
      <param name="margin">The margin.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Page.#ctor(Aspose.Html.Drawing.Size)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Page" /> class.
            </summary>
      <param name="size">The page size.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Page.#ctor(Aspose.Html.Drawing.Margin)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Page" /> class.
            </summary>
      <param name="margin">The margin.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Page.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Page" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.Page.Size">
      <summary>
            Gets or sets the page size.
            </summary>
      <value>
            The size.
            </value>
    </member>
    <member name="P:Aspose.Html.Drawing.Page.Margin">
      <summary>
            Gets or sets the page margin.
            </summary>
      <value>
            The margin.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.Resolution">
      <summary>
            Represents a resolution unit.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.OnConvert(System.Double,Aspose.Html.Drawing.UnitType,Aspose.Html.Drawing.UnitType)">
      <summary>
            Called when unit is converted to the specified unit type.
            </summary>
      <param name="value">The value.</param>
      <param name="fromType">From unit type.</param>
      <param name="toType">To unit type.</param>
      <returns>
            Returns value that is converted to specified type.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_Implicit(System.Double)~Aspose.Html.Drawing.Resolution">
      <summary>
            Performs an implicit conversion from <see cref="T:System.Double" /> to <see cref="T:Aspose.Html.Drawing.Resolution" />.
            </summary>
      <param name="value">The value treated as dpi.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_Implicit(System.Single)~Aspose.Html.Drawing.Resolution">
      <summary>
            Performs an implicit conversion from <see cref="T:System.Single" /> to <see cref="T:Aspose.Html.Drawing.Resolution" />.
            </summary>
      <param name="value">The value treated as dpi.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_Addition(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator +.
            </summary>
      <param name="a">Parameter a.</param>
      <param name="b">Parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolution
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_Subtraction(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator -.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolutions
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_LessThan(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator &lt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_GreaterThan(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator &gt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_LessThanOrEqual(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator &lt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_GreaterThanOrEqual(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator &gt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_Equality(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_Inequality(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Html.Drawing.Size">
      <summary>
            Stores a values which specify a Height and Width.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Size.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Size" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Size.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Size" /> class and specify a Height and Width in pixels.
            </summary>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Size.#ctor(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Size" /> class.
            </summary>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
    </member>
    <member name="P:Aspose.Html.Drawing.Size.Height">
      <summary>
            Gets or sets the vertical component of this <see cref="T:Aspose.Html.Drawing.Size" />.
            </summary>
      <value>
            The vertical component of this <see cref="T:Aspose.Html.Drawing.Size" />.
            </value>
    </member>
    <member name="P:Aspose.Html.Drawing.Size.Width">
      <summary>
            Gets or sets the horizontal component of this <see cref="T:Aspose.Html.Drawing.Size" />.
            </summary>
      <value>
            The horizontal component of this <see cref="T:Aspose.Html.Drawing.Size" />.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.Time">
      <summary>
            Represents a time unit.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.OnConvert(System.Double,Aspose.Html.Drawing.UnitType,Aspose.Html.Drawing.UnitType)">
      <summary>
            Called when unit is converted to the specified unit type.
            </summary>
      <param name="value">The value.</param>
      <param name="fromType">From unit type.</param>
      <param name="toType">To unit type.</param>
      <returns>
            Returns value that is converted to specified type.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_Addition(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator +.
            </summary>
      <param name="a">Parameter a.</param>
      <param name="b">Parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolution
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_Subtraction(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator -.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolutions
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_LessThan(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator &lt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_GreaterThan(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator &gt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_LessThanOrEqual(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator &lt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_GreaterThanOrEqual(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator &gt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_Equality(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_Inequality(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Html.Drawing.Unit">
      <summary>
            Provides the base class for units of measurement.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.#ctor(Aspose.Html.Drawing.UnitType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Unit" /> class.
            </summary>
      <param name="type">The unit type.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.Equals(Aspose.Html.Drawing.Unit)">
      <summary>
            Determines whether the specified <see cref="T:Aspose.Html.Drawing.Unit" />, is equal to this instance.
            </summary>
      <param name="other">The <see cref="T:Aspose.Html.Drawing.Unit" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:Aspose.Html.Drawing.Unit" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromCentimeters(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object that is represented in centimeters.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromMillimeters(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object that is represented in millimeters.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromQuarterMillimeters(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object that is represented in quarter-millimeters.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromInches(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object that is represented in inches.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromPicas(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object that is represented in picas.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromPoints(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object that is represented in points.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromPixels(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object that is represented in pixels.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromDegrees(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object that is represented in degrees.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromGradians(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object that is represented in gradians.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromRadians(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object that is represented in radians.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromTurns(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object that is represented in turns.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromSeconds(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Time" /> object that is represented in seconds.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Time" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromMilliseconds(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Time" /> object that is represented in milliseconds.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Time" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromHertz(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Frequency" /> object that is represented in hertz.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Frequency" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromKiloHertz(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Frequency" /> object that is represented in kiloHertz.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Frequency" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromDotsPerInch(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Resolution" /> object that is represented in dots per inch.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Resolution" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromDotsPerCentimeters(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Resolution" /> object that is represented in dots per centimeters.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Resolution" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromDotsPerPixel(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Resolution" /> object that is represented in dots per pixels.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Resolution" /> object.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.Unit.UnitType">
      <summary>
            Gets the unit type of the <see cref="T:Aspose.Html.Drawing.Unit" />.
            </summary>
      <value>
            The type of the unit.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.UnitType">
      <summary>
            Specifies the unit of measurement.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Em">
      <summary>
            Measurement is relative to the height of the parent element's font.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Ex">
      <summary>
            Measurement is relative to the height of the lowercase letter x of the parent element's font.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Ch">
      <summary>
            Measurement is relative to width of the "0" (zero).
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Rem">
      <summary>
            Measurement is relative to font-size of the root element.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Vw">
      <summary>
            Measurement is relative to 1% of the width of the viewport*
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Vh">
      <summary>
            Measurement is relative to 1% of the height of the viewport* Try it
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Vmin">
      <summary>
            Measurement is relative to 1% of viewport's* smaller dimension Try it
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Vmax">
      <summary>
            Measurement is relative to 1% of viewport's* larger dimension Try it
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Cm">
      <summary>
            Measurement is in centimeters
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Mm">
      <summary>
            Measurement is in millimeters
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Q">
      <summary>
            Measurement is in quarter-millimeters
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.In">
      <summary>
            Measurement is in inches
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Pc">
      <summary>
            Measurement is in picas
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Pt">
      <summary>
            Measurement is in points
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Px">
      <summary>
            Measurement is in pixels
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Deg">
      <summary>
            Measurement is in degrees.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Grad">
      <summary>
            Measurement is in gradians.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Rad">
      <summary>
            Measurement is in radians.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Turn">
      <summary>
            Measurement is in turns.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.S">
      <summary>
            Measurement is in seconds.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Ms">
      <summary>
            Measurement is in milliseconds.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Hz">
      <summary>
            Measurement is in hertz.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.KHz">
      <summary>
            Measurement is in kiloHertz.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Dpi">
      <summary>
            Measurement is in dots per inch.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Dpcm">
      <summary>
            Measurement is in dots per centimeters.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Dppx">
      <summary>
            Measurement is in Dots per pixels unit.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Auto">
      <summary>
            Measurement is not defined.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Percentage">
      <summary>
            Measurement is in percentage.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Integer">
      <summary>
            Measurement is an integer number.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Real">
      <summary>
            Measurement is a real number.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.Equals(Aspose.Html.Drawing.UnitType)">
      <summary>
            Determines whether the specified <see cref="T:Aspose.Html.Drawing.UnitType" />, is equal to this instance.
            </summary>
      <param name="other">The <see cref="T:Aspose.Html.Drawing.UnitType" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:Aspose.Html.Drawing.UnitType" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.op_Equality(Aspose.Html.Drawing.UnitType,Aspose.Html.Drawing.UnitType)">
      <summary>
            Determines whether the two specified <see cref="T:Aspose.Html.Drawing.UnitType" /> values are equal.
            </summary>
      <param name="first">The first <see cref="T:Aspose.Html.Drawing.UnitType" /> value to compare.</param>
      <param name="second">The second <see cref="T:Aspose.Html.Drawing.UnitType" /> value to compare.</param>
      <returns>
        <c>true</c> if the both <see cref="T:Aspose.Html.Drawing.UnitType" /> are equal; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.op_Inequality(Aspose.Html.Drawing.UnitType,Aspose.Html.Drawing.UnitType)">
      <summary>
            Determines whether the two specified <see cref="T:Aspose.Html.Drawing.UnitType" /> values are not equal.
            </summary>
      <param name="first">The first <see cref="T:Aspose.Html.Drawing.UnitType" /> value to compare.</param>
      <param name="second">The second <see cref="T:Aspose.Html.Drawing.UnitType" /> value to compare.</param>
      <returns>
        <c>true</c> if the both <see cref="T:Aspose.Html.Drawing.UnitType" /> are not equal; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.op_Implicit(System.String)~Aspose.Html.Drawing.UnitType">
      <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:Aspose.Html.Drawing.UnitType" />.
            </summary>
      <param name="value">The value.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.op_Explicit(Aspose.Html.Drawing.UnitType)~System.String">
      <summary>
            Performs an explicit conversion from <see cref="T:Aspose.Html.Drawing.UnitType" /> to <see cref="T:System.String" />.
            </summary>
      <param name="value">The value.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="T:Aspose.Html.Collections.DOMTokenList">
      <summary>
            The DOMTokenList class represents a set of space-separated tokens. It is indexed beginning with 0 as with JavaScript Array objects. DOMTokenList is always case-sensitive.
            </summary>
    </member>
    <member name="M:Aspose.Html.Collections.DOMTokenList.Contains(System.String)">
      <summary>
            Returns true if the list contains the given token, otherwise false.
            </summary>
      <param name="token">The token to locate in the list.</param>
      <returns>A Boolean, which is true if the calling list contains token, otherwise false.</returns>
    </member>
    <member name="M:Aspose.Html.Collections.DOMTokenList.Add(System.String[])">
      <summary>
            Adds the specified token(s) to the list.
            </summary>
      <param name="tokens">Representing the token (or tokens) to add to the tokenList.</param>
    </member>
    <member name="M:Aspose.Html.Collections.DOMTokenList.Remove(System.String[])">
      <summary>
            Removes the specified token(s) from the list.
            </summary>
      <param name="tokens">Represents the token(s) you want to remove from the list.</param>
    </member>
    <member name="M:Aspose.Html.Collections.DOMTokenList.Toggle(System.String)">
      <summary>
            Removes the token from the list if it exists, or adds the token to the list if it doesn't.
            </summary>
      <param name="token">The token you want to toggle.</param>
      <returns>A Boolean indicating whether token is in the list after the call.</returns>
    </member>
    <member name="M:Aspose.Html.Collections.DOMTokenList.Toggle(System.String,System.Nullable{System.Boolean})">
      <summary>
            Removes the token from the list if it exists, or adds the token to the list if it doesn't.
            </summary>
      <param name="token">The token you want to toggle.</param>
      <param name="force">A Boolean that, if included, turns the toggle into a one way-only operation. If set to false, then token will only be removed, but not added. If set to true, then token will only be added, but not removed.</param>
      <returns>A Boolean indicating whether token is in the list after the call.</returns>
    </member>
    <member name="M:Aspose.Html.Collections.DOMTokenList.Replace(System.String,System.String)">
      <summary>
            Replaces an existing token with a new token. Does nothing if the first token doesn't exist.
            </summary>
      <param name="token">The token you want to replace.</param>
      <param name="newToken">The token you want to replace the old token with.</param>
      <returns>Boolean <c>true</c> if the token was found and replaced, <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Aspose.Html.Collections.DOMTokenList.Supports(System.String)">
      <summary>
            Returns true if a given token is in the associated attribute's supported tokens.
            </summary>
      <param name="token">The token to query for.</param>
      <returns>A Boolean indicating whether the token was found.</returns>
    </member>
    <member name="M:Aspose.Html.Collections.DOMTokenList.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:Aspose.Html.Collections.DOMTokenList.Length">
      <summary>
            Returns an ulong which represents the number of tokens stored in this list.
            </summary>
    </member>
    <member name="P:Aspose.Html.Collections.DOMTokenList.Value">
      <summary>
            Gets or sets the value of a corresponding attribute.
            </summary>
      <value>
            The value of a corresponding attribute.
            </value>
    </member>
    <member name="P:Aspose.Html.Collections.DOMTokenList.Item(System.UInt64)">
      <summary>
            Returns the item in the list by its index, or null if index is greater than or equal to the list's length.
            </summary>
      <param name="index">The index.</param>
      <returns>A string which represents a token in the list.</returns>
    </member>
    <member name="T:Aspose.Html.Collections.HTMLCollection">
      <summary>
            The <see cref="T:Aspose.Html.Collections.HTMLCollection" /> represents a generic collection of <see cref="T:Aspose.Html.Dom.Element" />.
            </summary>
      <seealso cref="T:System.Collections.Generic.IEnumerable`1" />
      <seealso cref="T:System.Collections.Generic.IEnumerable`1" />
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="M:Aspose.Html.Collections.HTMLCollection.NamedItem(System.String)">
      <summary>
            Returns the item in the collection matched specified name.
            </summary>
      <param name="name">The element name.</param>
      <returns>
            The matched element
            </returns>
    </member>
    <member name="M:Aspose.Html.Collections.HTMLCollection.GetEnumerator">
      <summary>
            Gets the enumerator.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:Aspose.Html.Collections.HTMLCollection.GetPlatformType">
      <summary>
            This method is used to retrieve ECMAScript object <see cref="T:System.Type" />.
            </summary>
      <returns>
            The ECMAScript object <see cref="T:System.Type" />.
            </returns>
    </member>
    <member name="P:Aspose.Html.Collections.HTMLCollection.Item(System.Int32)">
      <summary>
            Returns the index-th item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Element" />.
            </value>
      <param name="index">The index.</param>
      <returns>
            Returns element.
            </returns>
    </member>
    <member name="P:Aspose.Html.Collections.HTMLCollection.Length">
      <summary>
            The number of nodes in the list.
            </summary>
    </member>
    <member name="T:Aspose.Html.Collections.NamedNodeMap">
      <summary>
            Represents collections of attributes that can be accessed by name.
            </summary>
      <seealso cref="T:System.Collections.Generic.IEnumerable`1" />
    </member>
    <member name="M:Aspose.Html.Collections.NamedNodeMap.GetNamedItem(System.String)">
      <summary>
            Retrieves a node specified by name.
            </summary>
      <param name="name">The node name.</param>
      <returns>Returns node.</returns>
    </member>
    <member name="M:Aspose.Html.Collections.NamedNodeMap.GetNamedItemNS(System.String,System.String)">
      <summary>
            Retrieves a node specified by local name and namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <returns>Returns node.</returns>
    </member>
    <member name="M:Aspose.Html.Collections.NamedNodeMap.SetNamedItem(Aspose.Html.Dom.Attr)">
      <summary>
            Adds a node using its nodeName attribute. If a node with that name is already present in this map, it is replaced by the new one. Replacing a node by itself has no effect.
            </summary>
      <param name="attr">The attribute.</param>
      <returns>
            Returns node.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
      </exception>
    </member>
    <member name="M:Aspose.Html.Collections.NamedNodeMap.SetNamedItemNS(Aspose.Html.Dom.Attr)">
      <summary>
            Adds a node using its namespaceURI and localName. If a node with that namespace URI and that local name is already present in this map, it is replaced by the new one. Replacing a node by itself has no effect.
            </summary>
      <param name="attr">The attribute.</param>
      <returns>
            Returns node.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
      </exception>
    </member>
    <member name="M:Aspose.Html.Collections.NamedNodeMap.RemoveNamedItem(System.String)">
      <summary>
            Removes a node specified by name.
            </summary>
      <param name="name">The element name.</param>
      <returns>Removed node.</returns>
    </member>
    <member name="M:Aspose.Html.Collections.NamedNodeMap.RemoveNamedItemNS(System.String,System.String)">
      <summary>
            Removes a node specified by local name and namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <returns>Returns node.</returns>
    </member>
    <member name="M:Aspose.Html.Collections.NamedNodeMap.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:Aspose.Html.Collections.NamedNodeMap.Length">
      <summary>
            The number of nodes in this map.
            </summary>
    </member>
    <member name="P:Aspose.Html.Collections.NamedNodeMap.Item(System.Int32)">
      <summary>
            Returns the index-th item in the map. If index is greater than or equal to the number of nodes in this map, this returns null.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Attr" />.
            </value>
      <param name="index">The index.</param>
      <returns>
            Returns node.
            </returns>
    </member>
    <member name="P:Aspose.Html.Collections.NamedNodeMap.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Html.Dom.Attr" /> with the specified name.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Attr" />.
            </value>
      <param name="name">The attribute name.</param>
      <returns>
            Returns node.
            </returns>
    </member>
    <member name="T:Aspose.Html.Collections.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Collections</b> namespace consists of classes to represent,
            store and manipulate nodes and elements.
            </summary>
    </member>
    <member name="T:Aspose.Html.Collections.NodeList">
      <summary>
            The NodeList provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented.
            </summary>
    </member>
    <member name="M:Aspose.Html.Collections.NodeList.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:Aspose.Html.Collections.NodeList.GetPlatformType">
      <summary>
            This method is used to retrieve ECMAScript object <see cref="T:System.Type" />.
            </summary>
      <returns>
            The ECMAScript object <see cref="T:System.Type" />.
            </returns>
    </member>
    <member name="P:Aspose.Html.Collections.NodeList.Item(System.Int32)">
      <summary>
            Method returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.
            </summary>
      <param name="index">The index.</param>
      <returns>
            Returns node.
            </returns>
    </member>
    <member name="P:Aspose.Html.Collections.NodeList.Length">
      <summary>
            The number of nodes in the list.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Attr">
      <summary>
            The Attr interface represents an attribute in an Element object. Typically the allowable values for the attribute are defined in a schema associated with the document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.Name">
      <summary>
            Returns the name of this attribute.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.Specified">
      <summary>
            True if this attribute was explicitly given a value in the instance document, false otherwise.
            </summary>
      <value>
        <c>true</c> if specified; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.Value">
      <summary>
            On retrieval, the value of the attribute is returned as a string.
            </summary>
      <value>
            The value.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.OwnerElement">
      <summary>
            The Element node this attribute is attached to or null if this attribute is not in use.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.SchemaTypeInfo">
      <summary>
            The type information associated with this attribute. 
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.IsId">
      <summary>
            Returns whether this attribute is known to be of type ID (i.e. to contain an identifier for its owner element) or not.
            </summary>
      <value>
        <c>true</c> if this instance is id; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.NodeValue">
      <summary>
            The value of this node, depending on its type.
            </summary>
      <value>
            The node value.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.TextContent">
      <summary>
            This attribute returns the text content of this node and its descendants. When it is defined to be null, setting it has no effect. On setting, any possible children this node may have are removed and, if it the new string is not empty or null, replaced by a single Text node containing the string this attribute is set to. 
            </summary>
      <value>
            The content of the text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.LocalName">
      <summary>
            Returns the local part of the qualified name of this node.
            For nodes of any type other than ELEMENT_NODE and ATTRIBUTE_NODE and nodes created with a DOM Level 1 method, such as Document.createElement(), this is always null.
            </summary>
      <value>
            The name of the local.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.NamespaceURI">
      <summary>
            The namespace URI of this node, or null if it is unspecified.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.Prefix">
      <summary>
            The namespace prefix of this node, or null if it is unspecified. When it is defined to be null, setting it has no effect
            </summary>
      <value>
            The prefix.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.CDATASection">
      <summary>
            CDATA sections are used to escape blocks of text containing characters that would otherwise be regarded as markup.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.CDATASection.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.CDATASection.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.CharacterData">
      <summary>
            The CharacterData extends Node with a set of attributes and methods for accessing character data in the DOM.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.CharacterData.#ctor(System.String,Aspose.Html.Dom.Document)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.CharacterData" /> class.
            </summary>
      <param name="data">The character data.</param>
      <param name="doc">The document.</param>
    </member>
    <member name="M:Aspose.Html.Dom.CharacterData.SubstringData(System.Int32,System.Int32)">
      <summary>
            Extracts a range of data from the node.
            </summary>
      <param name="offset">The offset.</param>
      <param name="count">The count.</param>
      <returns>The text data</returns>
    </member>
    <member name="M:Aspose.Html.Dom.CharacterData.AppendData(System.String)">
      <summary>
            Append the string to the end of the character data of the node.
            </summary>
      <param name="data">The content data.</param>
    </member>
    <member name="M:Aspose.Html.Dom.CharacterData.InsertData(System.Int32,System.String)">
      <summary>
            Insert a string at the specified 16-bit unit offset.
            </summary>
      <param name="offset">The offset.</param>
      <param name="data">The content data.</param>
    </member>
    <member name="M:Aspose.Html.Dom.CharacterData.DeleteData(System.Int32,System.Int32)">
      <summary>
            Remove a range of 16-bit units from the node. 
            </summary>
      <param name="offset">The offset.</param>
      <param name="count">The count.</param>
    </member>
    <member name="M:Aspose.Html.Dom.CharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
      <summary>
            Replace the characters starting at the specified 16-bit unit offset with the specified string.
            </summary>
      <param name="offset">The offset.</param>
      <param name="count">The count.</param>
      <param name="data">The content data.</param>
    </member>
    <member name="M:Aspose.Html.Dom.CharacterData.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.CharacterData.Data">
      <summary>
            The character data of the node that implements this interface.
            </summary>
      <value>
            The data.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.CharacterData.Length">
      <summary>
            The number of 16-bit units that are available through data and the substringData method below. This may have the value zero, i.e., CharacterData nodes may be empty.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Comment">
      <summary>
            Inherits from CharacterData and represents the content of a comment, i.e., all the characters between the starting '<!--' and ending '-->'.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Comment.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Comment.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Comment.NodeValue">
      <summary>
            The value of this node, depending on its type.
            </summary>
      <value>
            The node value.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Comment.TextContent">
      <summary>
            This attribute returns the text content of this node and its descendants. When it is defined to be null, setting it has no effect. On setting, any possible children this node may have are removed and, if it the new string is not empty or null, replaced by a single Text node containing the string this attribute is set to. 
            </summary>
      <value>
            The content of the text.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Document">
      <summary>
            The Document represents the entire HTML, XML or SVG document. Conceptually, it is the root of the document tree, and provides the primary access to the document's data.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Document.#ctor(Aspose.Html.Dom.IDocumentInit)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Document" /> class.
            </summary>
      <param name="documentInit">The document initialization info.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Document.Navigate(System.String)">
      <summary>
            Loads the document at the specified Uniform Resource Locator (URL) into the current instance, replacing the previous content.
            </summary>
      <param name="address">The document address. It will be combined with the current directory path to form an absolute URL.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Document.Navigate(Aspose.Html.Url)">
      <summary>
            Loads the document at the specified Uniform Resource Locator (URL) into the current instance, replacing the previous content.
            </summary>
      <param name="url">The document URL.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Document.Navigate(System.String,System.String)">
      <summary>
            Loads the document from specified content and using baseUri to resolve relative resources, replacing the previous content.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI to resolve relative resources. It will be combined with the current directory path to form an absolute URL.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.Navigate(System.String,Aspose.Html.Url)">
      <summary>
            Loads the document from specified content and using baseUri to resolve relative resources, replacing the previous content.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI to resolve relative resources.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.Navigate(System.IO.Stream,System.String)">
      <summary>
            Loads the document from specified content and using baseUri to resolve relative resources, replacing the previous content.
            Document loading starts from the current position in the stream.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI to resolve relative resources. It will be combined with the current directory path to form an absolute URL.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.Navigate(System.IO.Stream,Aspose.Html.Url)">
      <summary>
            Loads the document from specified content and using baseUri to resolve relative resources, replacing the previous content.
            Document loading starts from the current position in the stream.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI to resolve relative resources.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.Navigate(Aspose.Html.Net.RequestMessage)">
      <summary>
            Loads the document based on specified request object, replacing the previous content.
            </summary>
      <param name="request">The request object that is used to load document content.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateElement(System.String)">
      <summary>
            Creates an element of the type specified. Note that the instance returned implements the Element interface, so attributes can be specified directly on the returned object.
            </summary>
      <param name="localName">Name of the tag.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Element" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateElementNS(System.String,System.String)">
      <summary>
            Creates an element of the given qualified name and namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="qualifiedName">Name of the qualified.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Element" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateDocumentFragment">
      <summary>
            Creates an empty DocumentFragment object.
            </summary>
      <returns>
            The <see cref="T:Aspose.Html.Dom.DocumentFragment" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateTextNode(System.String)">
      <summary>
            Creates a Text node given the specified string.
            </summary>
      <param name="data">The text data.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Text" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateComment(System.String)">
      <summary>
            Creates a Comment node given the specified string.
            </summary>
      <param name="data">The comment data.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Comment" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateCDATASection(System.String)">
      <summary>
            Creates a CDATASection node whose value is the specified string.
            </summary>
      <param name="data">The CDATA data.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.CDATASection" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateProcessingInstruction(System.String,System.String)">
      <summary>
            Creates a ProcessingInstruction node given the specified name and data strings.
            </summary>
      <param name="target">The target.</param>
      <param name="data">The instruction data.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.ProcessingInstruction" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateAttribute(System.String)">
      <summary>
            Creates an Attr of the given name.
            </summary>
      <param name="localName">The attribute name.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Attr" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateAttributeNS(System.String,System.String)">
      <summary>
            Creates an attribute of the given qualified name and namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="qualifiedName">Name of the qualified.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Attr" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateEntityReference(System.String)">
      <summary>
            Creates an EntityReference object. In addition, if the referenced entity is known, the child list of the EntityReference node is made the same as that of the corresponding Entity node.
            </summary>
      <param name="name">The entity name.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.EntityReference" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateDocumentType(System.String,System.String,System.String,System.String)">
      <summary>
            Creates a DocumentType node.
            </summary>
      <param name="name">The document type name.</param>
      <param name="publicId">The public id.</param>
      <param name="systemId">The system id.</param>
      <param name="internalSubset">The internal subset.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.DocumentType" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.GetElementsByTagName(System.String)">
      <summary>
            Returns a NodeList of all the Elements in document order with a given tag name and are contained in the document.
            </summary>
      <param name="tagname">The tagname.</param>
      <returns>
            Returns nodes.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.GetElementsByTagNameNS(System.String,System.String)">
      <summary>
            Returns a NodeList of all the Elements with a given local name and namespace URI in document order.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <returns>
            Returns nodes
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.GetElementById(System.String)">
      <summary>
            Returns the Element that has an ID attribute with the given value. If no such element exists, this returns null. If more than one element has an ID attribute with that value, what is returned is undefined.
            </summary>
      <param name="elementId">The element id.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Element" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.GetElementsByClassName(System.String)">
      <summary>
            Returns a live NodeList object containing all the elements in the document that have all the classes specified in argument.
            http://www.w3.org/TR/dom/
            </summary>
      <param name="classNames">The string string that contains an unordered set of unique space-separated tokens representing classes (class names)</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Element" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateNodeIterator(Aspose.Html.Dom.Node)">
      <summary>
            Create a new NodeIterator over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will be iterated together with its children.
            The iterator is initially positioned just before this node. The
            whatToShow flags and the filter, if any, are not
            considered when setting this position. The root must not be
            null.</param>
      <returns>
            The newly created NodeIterator.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the specified root is
            null.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateNodeIterator(Aspose.Html.Dom.Node,System.Int64)">
      <summary>
            Create a new NodeIterator over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will be iterated together with its children.
            The iterator is initially positioned just before this node. The
            whatToShow flags and the filter, if any, are not
            considered when setting this position. The root must not be
            null.</param>
      <param name="whatToShow">flag specifies which node types may appear in
            the logical view of the tree presented by the iterator. See the
            description of NodeFilter for the set of possible
            SHOW_ values.These flags can be combined using
            OR.</param>
      <returns>
            The newly created NodeIterator.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the specified root is
            null.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateNodeIterator(Aspose.Html.Dom.Node,System.Int64,Aspose.Html.Dom.Traversal.INodeFilter)">
      <summary>
            Create a new NodeIterator over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will be iterated together with its children.
            The iterator is initially positioned just before this node. The
            whatToShow flags and the filter, if any, are not
            considered when setting this position. The root must not be
            null.</param>
      <param name="whatToShow">flag specifies which node types may appear in
            the logical view of the tree presented by the iterator. See the
            description of NodeFilter for the set of possible
            SHOW_ values.These flags can be combined using
            OR.</param>
      <param name="filter">NodeFilter to be used with this
            TreeWalker, or null to indicate no filter.</param>
      <returns>
            The newly created NodeIterator.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the specified root is
            null.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateTreeWalker(Aspose.Html.Dom.Node)">
      <summary>
            Create a new TreeWalker over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will serve as the root for the
            TreeWalker. The whatToShow flags and the
            NodeFilter are not considered when setting this value;
            any node type will be accepted as the root. The
            currentNode of the TreeWalker is
            initialized to this node, whether or not it is visible. The
            root functions as a stopping point for traversal
            methods that look upward in the document structure, such as
            parentNode and nextNode. The root must
            not be null.</param>
      <returns>
            The newly created TreeWalker.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the specified root is
            null.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateTreeWalker(Aspose.Html.Dom.Node,System.Int64)">
      <summary>
            Create a new TreeWalker over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will serve as the root for the
            TreeWalker. The whatToShow flags and the
            NodeFilter are not considered when setting this value;
            any node type will be accepted as the root. The
            currentNode of the TreeWalker is
            initialized to this node, whether or not it is visible. The
            root functions as a stopping point for traversal
            methods that look upward in the document structure, such as
            parentNode and nextNode. The root must
            not be null.</param>
      <param name="whatToShow">flag specifies which node types may appear in
            the logical view of the tree presented by the tree-walker. See the
            description of NodeFilter for the set of possible
            SHOW_ values.These flags can be combined using OR.</param>
      <returns>
            The newly created TreeWalker.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the specified root is
            null.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateTreeWalker(Aspose.Html.Dom.Node,System.Int64,Aspose.Html.Dom.Traversal.INodeFilter)">
      <summary>
            Create a new TreeWalker over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will serve as the root for the
            TreeWalker. The whatToShow flags and the
            NodeFilter are not considered when setting this value;
            any node type will be accepted as the root. The
            currentNode of the TreeWalker is
            initialized to this node, whether or not it is visible. The
            root functions as a stopping point for traversal
            methods that look upward in the document structure, such as
            parentNode and nextNode. The root must
            not be null.</param>
      <param name="whatToShow">flag specifies which node types may appear in
            the logical view of the tree presented by the tree-walker. See the
            description of NodeFilter for the set of possible
            SHOW_ values.These flags can be combined using OR.</param>
      <param name="filter">NodeFilter to be used with this
            TreeWalker, or null to indicate no filter.</param>
      <returns>
            The newly created TreeWalker.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the specified root is
            null.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.QuerySelectorAll(System.String)">
      <summary>
            Returns a NodeList of all the Elements in document, which match selector
            </summary>
      <param name="selector">The query selector</param>
      <returns>
        <see cref="T:Aspose.Html.Collections.HTMLCollection" />
      </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.QuerySelector(System.String)">
      <summary>
            Returns the first Element in document, which match selector
            </summary>
      <param name="selector">The selector.</param>
      <returns>The matched node.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.ImportNode(Aspose.Html.Dom.Node,System.Boolean)">
      <summary>
            Imports a node from another document to this document, without altering or removing the source node from the original document; this method creates a new copy of the source node.
            </summary>
      <param name="importedNode">The imported node.</param>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Node" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateEvent(System.String)">
      <summary>
            Creates an <see cref="T:Aspose.Html.Dom.Events.Event" /> of a type supported by the implementation.
            </summary>
      <param name="eventType">The eventType parameter specifies the type of <see cref="T:Aspose.Html.Dom.Events.Event" /> interface to be created.
            <remarks>
            If the <see cref="T:Aspose.Html.Dom.Events.Event" /> interface specified is supported by the implementation this method will
            return a new <see cref="T:Aspose.Html.Dom.Events.Event" /> of the interface type requested.
            If the <see cref="T:Aspose.Html.Dom.Events.Event" /> is to be dispatched via the <see cref="M:Aspose.Html.Dom.Events.IEventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> method the appropriate <see cref="M:Aspose.Html.Dom.Events.Event.InitEvent(System.String,System.Boolean,System.Boolean)" />
            method must be called after creation in order to initialize the <see cref="T:Aspose.Html.Dom.Events.Event" />'s values.
            <para>
            The <see cref="M:Aspose.Html.Dom.Events.IDocumentEvent.CreateEvent(System.String)" /> method is used in creating <see cref="T:Aspose.Html.Dom.Events.Event" />s when it is either inconvenient or unnecessary
            for the user to create an <see cref="T:Aspose.Html.Dom.Events.Event" /> themselves.
            In cases where the implementation provided <see cref="T:Aspose.Html.Dom.Events.Event" /> is insufficient, users may supply
            their own <see cref="T:Aspose.Html.Dom.Events.Event" /> implementations for use with the <see cref="M:Aspose.Html.Dom.Events.IEventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> method.
            </para></remarks></param>
      <returns>
            The newly created <see cref="T:Aspose.Html.Dom.Events.Event" /></returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the implementation does not support the type of <see cref="T:Aspose.Html.Dom.Events.Event" /> interface requested</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.Write(System.String[])">
      <summary>
            Write a string of text to a document stream opened by
            open(). Note that the function will produce a document
            which is not necessarily driven by a DTD and therefore might be
            produce an invalid result in the context of the document.
            </summary>
      <param name="texts">The string to be parsed into some structure in the
            document structure model.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Document.WriteLn(System.String[])">
      <summary>
            Write a string of text followed by a newline character to a document
            stream opened by open(). Note that the function will
            produce a document which is not necessarily driven by a DTD and
            therefore might be produce an invalid result in the context of the
            document
            </summary>
      <param name="texts">The string to be parsed into some structure in the
            document structure model.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateExpression(System.String,Aspose.Html.Dom.XPath.IXPathNSResolver)">
      <summary>
            Creates a parsed XPath expression with resolved namespaces. This is useful 
            when an expression will be reused in an application since it makes it possible 
            to compile the expression string into a more efficient internal form and 
            preresolve all namespace prefixes which occur within the expression.
            </summary>
      <param name="expression">The XPath expression string to be parsed.</param>
      <param name="resolver">The <c>resolver</c> permits translation of all prefixes, 
            including the <c>xml</c> namespace prefix, within the XPath expression into 
            appropriate namespace URIs. If this is specified as <c>null</c>, any namespace 
            prefix within the expression will result in <see cref="T:Aspose.Html.Dom.DOMException" /> being 
            thrown with the code <c>NAMESPACE_ERR</c>.</param>
      <returns>
            The compiled form of the XPath expression.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">INVALID_EXPRESSION_ERR: Raised if the expression is not 
            legal according to the rules of the <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" />.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">NAMESPACE_ERR: Raised if the expression contains namespace 
            prefixes which cannot be resolved by the specified <see cref="T:Aspose.Html.Dom.XPath.IXPathNSResolver" />.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateNSResolver(Aspose.Html.Dom.Node)">
      <summary>
            Adapts any DOM node to resolve namespaces so that an XPath expression can be easily evaluated
            relative to the context of the node where it appeared within the document. This adapter works
            like the DOM Level 3 method <c>lookupNamespaceURI</c> on nodes in resolving the namespaceURI
            from a given prefix using the current information available in the node's hierarchy at the time
            lookupNamespaceURI is called, also correctly resolving the implicit xml prefix.
            </summary>
      <param name="nodeResolver">The node to be used as a context for namespace resolution.</param>
      <returns>
        <see cref="T:Aspose.Html.Dom.XPath.IXPathNSResolver" /> which resolves namespaces with respect to the definitions in scope for a specified node.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.Evaluate(System.String,Aspose.Html.Dom.Node,Aspose.Html.Dom.XPath.IXPathNSResolver,Aspose.Html.Dom.XPath.XPathResultType,System.Object)">
      <summary>
            Evaluates an XPath expression string and returns a result of the specified type if possible.
            </summary>
      <param name="expression">The XPath expression string to be parsed and evaluated.</param>
      <param name="contextNode">The context is context node for the evaluation of this XPath expression.</param>
      <param name="resolver">The resolver permits translation of all prefixes, including the xml
            namespace prefix, within the XPath expression into appropriate namespace URIs.</param>
      <param name="type">If a specific type is specified, then the result will be returned as the corresponding type.</param>
      <param name="result">The result specifies a specific result object which may be reused and returned by this method.</param>
      <returns>
            The result of the evaluation of the XPath expression.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.RenderTo(Aspose.Html.Rendering.IDevice)">
      <summary>
            This method is used to render the contents of the current document to a specified graphical device.
            </summary>
      <param name="device">The user device.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Document.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Document.OwnerDocument">
      <summary>
            Gets the owner document.
            </summary>
      <value>
            The owner document.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.Context">
      <summary>
            Gets the current browsing context.
            </summary>
      <value>
            The context.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.Implementation">
      <summary>
            The DOMImplementation object that handles this document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.Location">
      <summary>
            The location of the document.
            </summary>
      <value>
            The location.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.DocumentURI">
      <summary>
            The location of the document or null if undefined or if the Document was created using DOMImplementation.createDocument.
            </summary>
      <value>
            The document URI.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.Origin">
      <summary>
            Gets the document origin.
            </summary>
      <value>
            The origin.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.BaseURI">
      <summary>
            The absolute base URI of this node or null if the implementation wasn't able to obtain an absolute URI.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.CharacterSet">
      <summary>
            Gets the document's encoding.
            </summary>
      <value>
            The document's encoding.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.Charset">
      <summary>
            Gets the document's encoding.
            </summary>
      <value>
            The document's encoding.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.InputEncoding">
      <summary>
            Gets the document's encoding.
            </summary>
      <value>
            The document's encoding.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.ContentType">
      <summary>
            Gets the document content type.
            </summary>
      <value>
            The type of the content.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.ReadyState">
      <summary>
            Returns the document readiness. The "loading" while the Document is loading, "interactive" once it is finished parsing but still loading sub-resources, and "complete" once it has loaded.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.Doctype">
      <summary>
            The Document Type Declaration associated with this document.
            </summary>
      <value>
            The Document Type.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.DocumentElement">
      <summary>
            This is a convenience attribute that allows direct access to the child node that is the document element of the document.
            </summary>
      <value>
            The document element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.FirstElementChild">
      <summary>
            Returns the first child element node of this element. null if this element has no child elements.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.LastElementChild">
      <summary>
            Returns the last child element node of this element. null if this element has no child elements.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.PreviousElementSibling">
      <summary>
            Returns the previous sibling element node of this element. null if this element has no element sibling nodes that come before this one in the document tree.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.NextElementSibling">
      <summary>
            Returns the next sibling element node of this element. null if this element has no element sibling nodes that come after this one in the document tree.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.ChildElementCount">
      <summary>
            Returns the current number of element nodes that are children of this element. 0 if this element has no child nodes that are of nodeType 1.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.Children">
      <summary>
            Returns the child elements.
            </summary>
      <value>
            The children.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.XmlStandalone">
      <summary>
            An attribute specifying, as part of the XML declaration, whether this document is standalone. This is false when unspecified.
            </summary>
      <value>
        <c>true</c> if XML standalone; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.XmlVersion">
      <summary>
            An attribute specifying, as part of the XML declaration, the version number of this document. If there is no declaration and if this document supports the "XML" feature, the value is "1.0". If this document does not support the "XML" feature, the value is always null.
            </summary>
      <value>
            The XML version.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.StrictErrorChecking">
      <summary>
            An attribute specifying whether error checking is enforced or not. When set to false, the implementation is free to not test every possible error case normally defined on DOM operations, and not raise any DOMException on DOM operations or report errors while using Document.normalizeDocument(). In case of error, the behavior is undefined. This attribute is true by default.
            </summary>
      <value>
        <c>true</c> if strict error checking; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.DefaultView">
      <summary>
            The defaultView IDL attribute of the Document interface, on getting, 
            must return this Document's browsing context's WindowProxy object, 
            if this Document has an associated browsing context, or null otherwise.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.StyleSheets">
      <summary>
            A list containing all the style sheets explicitly linked into or embedded in a document. For HTML documents, this includes external style sheets, included via the HTML LINK element, and inline STYLE elements.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnReadyStateChange">
      <summary>
            Gets or sets event handler for OnReadyStateChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnAbort">
      <summary>
            Gets or sets event handler for OnAbort event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnBlur">
      <summary>
            Gets or sets event handler for OnBlur event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnCancel">
      <summary>
            Gets or sets event handler for OnCancel event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnCanplay">
      <summary>
            Gets or sets event handler for OnCanplay event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnCanPlayThrough">
      <summary>
            Gets or sets event handler for OnCanPlayThrough event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnChange">
      <summary>
            Gets or sets event handler for OnChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnClick">
      <summary>
            Gets or sets event handler for OnClick event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnCueChange">
      <summary>
            Gets or sets event handler for OnCueChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnDblClick">
      <summary>
            Gets or sets event handler for OnDblClick event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnDurationChange">
      <summary>
            Gets or sets event handler for OnDurationChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnEmptied">
      <summary>
            Gets or sets event handler for OnEmptied event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnEnded">
      <summary>
            Gets or sets event handler for OnEnded event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnError">
      <summary>
            Gets or sets event handler for OnError event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnFocus">
      <summary>
            Gets or sets event handler for OnFocus event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnInput">
      <summary>
            Gets or sets event handler for OnInput event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnInvalid">
      <summary>
            Gets or sets event handler for OnInvalid event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnKeyDown">
      <summary>
            Gets or sets event handler for OnKeyDown event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnKeyPress">
      <summary>
            Gets or sets event handler for OnKeyPress event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnKeyUp">
      <summary>
            Gets or sets event handler for OnKeyUp event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnLoad">
      <summary>
            Gets or sets event handler for OnLoad event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnLoadedData">
      <summary>
            Gets or sets event handler for OnLoadedData event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnLoadedMetadata">
      <summary>
            Gets or sets event handler for OnLoadedMetadata event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnLoadStart">
      <summary>
            Gets or sets event handler for OnLoadStart event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnMouseDown">
      <summary>
            Gets or sets event handler for OnMouseDown event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnMouseEnter">
      <summary>
            Gets or sets event handler for OnMouseEnter event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnMouseLeave">
      <summary>
            Gets or sets event handler for OnMouseLeave event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnMouseMove">
      <summary>
            Gets or sets event handler for OnMouseMove event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnMouseOut">
      <summary>
            Gets or sets event handler for OnMouseOut event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnMouseOver">
      <summary>
            Gets or sets event handler for OnMouseOver event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnMouseUp">
      <summary>
            Gets or sets event handler for OnMouseUp event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnMouseWheel">
      <summary>
            Gets or sets event handler for OnMouseWheel event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnPause">
      <summary>
            Gets or sets event handler for OnPause event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnPlay">
      <summary>
            Gets or sets event handler for OnPlay event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnPlaying">
      <summary>
            Gets or sets event handler for OnPlaying event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnProgress">
      <summary>
            Gets or sets event handler for OnProgress event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnRateChange">
      <summary>
            Gets or sets event handler for OnRateChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnReset">
      <summary>
            Gets or sets event handler for OnReset event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnResize">
      <summary>
            Gets or sets event handler for OnResize event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnScroll">
      <summary>
            Gets or sets event handler for OnScroll event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnSeeked">
      <summary>
            Gets or sets event handler for OnSeeked event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnSeeking">
      <summary>
            Gets or sets event handler for OnSeeking event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnSelect">
      <summary>
            Gets or sets event handler for OnSelect event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnShow">
      <summary>
            Gets or sets event handler for OnShow event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnStalled">
      <summary>
            Gets or sets event handler for OnStalled event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnSubmit">
      <summary>
            Gets or sets event handler for OnSubmit event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnSuspend">
      <summary>
            Gets or sets event handler for OnSuspend event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnTimeUpdate">
      <summary>
            Gets or sets event handler for OnTimeUpdate event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnToggle">
      <summary>
            Gets or sets event handler for OnToggle event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnVolumeChange">
      <summary>
            Gets or sets event handler for OnVolumeChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.Document.OnWaiting">
      <summary>
            Gets or sets event handler for OnWaiting event.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.DocumentFragment">
      <summary>
            DocumentFragment is a "lightweight" or "minimal" Document object. It is very common to want to be able to extract a portion of a document's tree or to create a new fragment of a document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.DocumentFragment.QuerySelector(System.String)">
      <summary>
            Returns the first Element in document, which match selector
            </summary>
      <param name="selector">The selector.</param>
      <returns>The matched element</returns>
    </member>
    <member name="M:Aspose.Html.Dom.DocumentFragment.QuerySelectorAll(System.String)">
      <summary>
            Returns a NodeList of all the Elements in document, which match selector
            </summary>
      <param name="selector">The selector</param>
      <returns>
        <see cref="T:Aspose.Html.Collections.HTMLCollection" />
      </returns>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentFragment.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentFragment.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentFragment.InnerHTML">
      <summary>
            Returns a fragment of HTML or XML that represents the element's contents.
            Can be set, to replace the contents of the element with nodes parsed from the given string.
            </summary>
      <value>
            The inner HTML.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentFragment.OuterHTML">
      <summary>
            Returns a fragment of HTML or XML that represents the element and its contents.
            Can be set, to replace the element with nodes parsed from the given string.
            </summary>
      <value>
            The outer HTML.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentFragment.TextContent">
      <summary>
            This attribute returns the text content of this node and its descendants. When it is defined to be null, setting it has no effect. On setting, any possible children this node may have are removed and, if it the new string is not empty or null, replaced by a single Text node containing the string this attribute is set to. 
            </summary>
      <value>
            The content of the text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentFragment.Children">
      <summary>
            Returns the child elements of current element.
            </summary>
      <value>
            The children collection
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentFragment.FirstElementChild">
      <summary>
            Returns the first child element node of this element. null if this element has no child elements.
            </summary>
      <value>
            The first element child.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentFragment.LastElementChild">
      <summary>
            Returns the last child element node of this element. null if this element has no child elements.
            </summary>
      <value>
            The last element child.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentFragment.PreviousElementSibling">
      <summary>
            Returns the previous sibling element node of this element. null if this element has no element sibling nodes that come before this one in the document tree.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentFragment.NextElementSibling">
      <summary>
            Returns the next sibling element node of this element. null if this element has no element sibling nodes that come after this one in the document tree.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentFragment.ChildElementCount">
      <summary>
            Returns the current number of element nodes that are children of this element. 0 if this element has no child nodes that are of nodeType 1.
            </summary>
      <value>
            The child element count.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.DocumentType">
      <summary>
            The DocumentType provides an interface to the list of entities that are defined for the document
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.DocumentType.#ctor(System.String,System.String,System.String,System.String,Aspose.Html.Dom.Document)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.DocumentType" /> class.
            </summary>
      <param name="name">The entity name.</param>
      <param name="publicId">The public id.</param>
      <param name="systemId">The system id.</param>
      <param name="internalSubset">The internal subset.</param>
      <param name="doc">The document.</param>
    </member>
    <member name="M:Aspose.Html.Dom.DocumentType.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentType.Name">
      <summary>
            The name of DTD; i.e., the name immediately following the DOCTYPE keyword.
            </summary>
      <value>
            The node name.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentType.PublicId">
      <summary>
            The public identifier of the external subset.
            </summary>
      <value>
            The public identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentType.SystemId">
      <summary>
            The system identifier of the external subset. This may be an absolute URI or not.
            </summary>
      <value>
            The system identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentType.InternalSubset">
      <summary>
            The internal subset as a string, or null if there is none.
            </summary>
      <value>
            The internal subset.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentType.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentType.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.DOMException">
      <summary>
            The DOMException interface represents an abnormal event (called an exception) which occurs as a result of calling a method or accessing a property of a web API. This is basically how error conditions are described in web APIs.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INDEX_SIZE_ERR">
      <summary>
            If index or size is negative, or greater than the allowed value.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.DOMSTRING_SIZE_ERR">
      <summary>
            If the specified range of text does not fit into a DOMString.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.HIERARCHY_REQUEST_ERR">
      <summary>
            If any Node is inserted somewhere it doesn't belong.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.WRONG_DOCUMENT_ERR">
      <summary>
            If a Node is used in a different document than the one that created it (that doesn't support it).
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INVALID_CHARACTER_ERR">
      <summary>
            If an invalid or illegal character is specified, such as in an XML name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.NO_DATA_ALLOWED_ERR">
      <summary>
            If data is specified for a Node which does not support data.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR">
      <summary>
            If an attempt is made to modify an object where modifications are not allowed.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.NOT_FOUND_ERR">
      <summary>
            If an attempt is made to reference a Node in a context where it does not exist.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.NOT_SUPPORTED_ERR">
      <summary>
            If the implementation does not support the requested type of object or operation.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INUSE_ATTRIBUTE_ERR">
      <summary>
            If an attempt is made to add an attribute that is already in use elsewhere.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INVALID_STATE_ERR">
      <summary>
            If an attempt is made to use an object that is not, or is no longer, usable.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.SYNTAX_ERR">
      <summary>
            If an invalid or illegal string is specified.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INVALID_MODIFICATION_ERR">
      <summary>
            If an attempt is made to modify the type of the underlying object.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.NAMESPACE_ERR">
      <summary>
            If an attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INVALID_ACCESS_ERR">
      <summary>
            If a parameter or an operation is not supported by the underlying object.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.VALIDATION_ERR">
      <summary>
            If a call to a method such as insertBefore or removeChild would make the Node invalid with respect to "partial validity", this exception would be raised and the operation would not be done. This code is used in [DOM Level 3 Validation]. Refer to this specification for further information.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.TYPE_MISMATCH_ERR">
      <summary>
            If the type of an object is incompatible with the expected type of the parameter associated to the object.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.SECURITY_ERR">
      <summary>
            The operation is insecure.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.NETWORK_ERR">
      <summary>
            A network error occurred.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.ABORT_ERR">
      <summary>
            The operation was aborted.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.URL_MISMATCH_ERR">
      <summary>
            The given URL does not match another URL.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.QUOTA_EXCEEDED_ERR">
      <summary>
            The quota has been exceeded.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.TIMEOUT_ERR">
      <summary>
            The operation timed out.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INVALID_NODE_TYPE_ERR">
      <summary>
            The supplied node is incorrect or has an incorrect ancestor for this operation.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.DATA_CLONE_ERR">
      <summary>
            The object can not be cloned.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INVALID_EXPRESSION_ERR">
      <summary>
            The expression has a syntax error or otherwise is not a legal expression according to the rules of the specific
            XPathEvaluator or contains specialized extension functions or variables not supported by this implementation.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.TYPE_ERR">
      <summary>
            The expression cannot be converted to return the specified type.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.DOMException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.DOMException" /> class.
            </summary>
      <param name="message">The error message.</param>
    </member>
    <member name="M:Aspose.Html.Dom.DOMException.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.DOMException" /> class.
            </summary>
      <param name="name">The error name.</param>
      <param name="message">The error message.</param>
    </member>
    <member name="P:Aspose.Html.Dom.DOMException.Code">
      <summary>
            Returns a value that contains one of the error code constants, or 0 if none match. This field is used for historical reasons.
            </summary>
      <value>
            Returns the error code.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DOMException.Name">
      <summary>
            Returns a string that contains one of the strings associated with an error name.
            </summary>
      <value>
            The error name.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DOMException.Message">
      <summary>
            Returns a string representing a message or description associated with the given error name.
            </summary>
      <value>
            The error message.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.DOMObject">
      <summary>
            The DOMObject type is used to represent an base object for the entire Document Object Model.
            For Java and ECMAScript, DOMObject is bound to the Object type.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.DOMObject.GetPlatformType">
      <summary>
            This method is used to retrieve ECMAScript object <see cref="T:System.Type" />.
            </summary>
      <returns>
            The ECMAScript object <see cref="T:System.Type" />.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Element">
      <summary>
            The Element interface represents an element in an HTML or XML document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Element.#ctor(Aspose.Html.Dom.IElementInit)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Element" /> class. Don't call this constructor directly, use <see cref="M:Aspose.Html.Dom.Document.CreateElement(System.String)" /> or <see cref="M:Aspose.Html.Dom.Document.CreateElementNS(System.String,System.String)" />.
            </summary>
      <param name="elementInit">The element initialization info.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.HasAttributes">
      <summary>
            Returns whether this node (if it is an element) has any attributes
            </summary>
      <returns>
              boolean <c>true</c> if this node has any attributes, <c>false</c> otherwise.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.GetAttribute(System.String)">
      <summary>
            Retrieves an attribute value by name.
            </summary>
      <param name="name">The name of the attribute to retrieve.</param>
      <returns>
            Returns attribute value
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.GetAttributeNS(System.String,System.String)">
      <summary>
            Retrieves an attribute value by local name and namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <returns>
            Returns attribute
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.SetAttribute(System.String,System.String)">
      <summary>
            Adds a new attribute. If an attribute with that name is already present in the element, its value is changed to be that of the value parameter
            </summary>
      <param name="name">The attribute name.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.SetAttributeNS(System.String,System.String,System.String)">
      <summary>
            Adds a new attribute. If an attribute with the same local name and namespace URI is already present on the element, its prefix is changed to be the prefix part of the qualifiedName, and its value is changed to be the value parameter.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="qualifiedName">Name of the qualified.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.RemoveAttribute(System.String)">
      <summary>
            Removes an attribute by name.
            </summary>
      <param name="name">The attribute name.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.RemoveAttributeNS(System.String,System.String)">
      <summary>
            Removes an attribute by local name and namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.HasAttribute(System.String)">
      <summary>
            Returns true when an attribute with a given name is specified on this element or has a default value, false otherwise.
            </summary>
      <param name="name">The attribute name.</param>
      <returns>
        <c>true</c> if the specified name has attribute; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.HasAttributeNS(System.String,System.String)">
      <summary>
            Returns true when an attribute with a given local name and namespace URI is specified on this element or has a default value, false otherwise.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <returns>
        <c>true</c> if [has attribute NS] [the specified namespace URI]; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.GetAttributeNode(System.String)">
      <summary>
            Retrieves an attribute node by name.
            </summary>
      <param name="name">The attribute name.</param>
      <returns>
            Returns attribute value
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.SetAttributeNode(Aspose.Html.Dom.Attr)">
      <summary>
            Adds a new attribute node. If an attribute with that name (nodeName) is already present in the element, it is replaced by the new one.
            </summary>
      <param name="newAttr">The new attr.</param>
      <returns>
            Returns attribute
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.RemoveAttributeNode(Aspose.Html.Dom.Attr)">
      <summary>
            Removes the specified attribute node.
            </summary>
      <param name="oldAttr">The old attr.</param>
      <returns>
            Returns attribute
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.GetAttributeNodeNS(System.String,System.String)">
      <summary>
            Retrieves an Attr node by local name and namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <returns>
            Returns attribute
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.SetAttributeNodeNS(Aspose.Html.Dom.Attr)">
      <summary>
            Adds a new attribute. If an attribute with that local name and that namespace URI is already present in the element, it is replaced by the new one.
            </summary>
      <param name="newAttr">The new attr.</param>
      <returns>
            Returns attribute
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.GetElementsByTagName(System.String)">
      <summary>
            Returns a NodeList of all descendant Elements with a given tag name, in document order.
            </summary>
      <param name="name">The tag name.</param>
      <returns>
            Returns attribute
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.GetElementsByTagNameNS(System.String,System.String)">
      <summary>
            Returns a NodeList of all the descendant Elements with a given local name and namespace URI in document order.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <returns>
            Returns elements
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.Remove">
      <summary>
            Removes this instance.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Element.QuerySelectorAll(System.String)">
      <summary>
            Returns a NodeList of all the Elements in document, which match selector
            </summary>
      <param name="selector">The selector</param>
      <returns>
        <see cref="T:Aspose.Html.Collections.HTMLCollection" />
      </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.QuerySelector(System.String)">
      <summary>
            Returns the first Element in document, which match selector
            </summary>
      <param name="selector">The selector.</param>
      <returns>The matched element</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.SetIdAttribute(System.String,System.Boolean)">
      <summary>
            If the parameter isId is true, this method declares the specified attribute to be a user-determined ID attribute.
            </summary>
      <param name="name">The attribute name.</param>
      <param name="isId">if set to <c>true</c> [is id].</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.SetIdAttributeNS(System.String,System.String,System.Boolean)">
      <summary>
            If the parameter isId is true, this method declares the specified attribute to be a user-determined ID attribute.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <param name="isId">if set to <c>true</c> [is id].</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.SetIdAttributeNode(Aspose.Html.Dom.Attr,System.Boolean)">
      <summary>
            If the parameter isId is true, this method declares the specified attribute to be a user-determined ID attribute.
            </summary>
      <param name="idAttr">The id attr.</param>
      <param name="isId">if set to <c>true</c> [is id].</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.AttachShadow(Aspose.Html.Dom.ShadowRootMode)">
      <summary>
            Creates shadow root and attaches it to current element.
            </summary>
      <param name="mode">Mode in which shadow root will be created.</param>
      <returns>Created <see cref="T:Aspose.Html.Dom.ShadowRoot" />.</returns>
      <exception cref="T:Aspose.Html.Error">NotSupportedError: Element does not support shadow tree.</exception>
      <exception cref="T:Aspose.Html.Error">InvalidStateError: Element already has shadow tree.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Element.GetElementsByClassName(System.String)">
      <summary>
            Returns a live NodeList object containing all the elements in the document that have all the classes specified in argument.
            http://www.w3.org/TR/dom/
            </summary>
      <param name="classNames">The string string that contains an unordered set of unique space-separated tokens representing classes (class names)</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Element" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Element.ClassList">
      <summary>
            Returns a live DOMTokenList which contains tokens received from parsing the "class" attribute.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Element.Attributes">
      <summary>
            A NamedNodeMap containing the attributes of this node (if it is an Element) or null otherwise.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Element.LocalName">
      <summary>
            Returns the local part of the qualified name of this node.
            For nodes of any type other than ELEMENT_NODE and ATTRIBUTE_NODE and nodes created with a DOM Level 1 method, such as Document.createElement(), this is always null.
            </summary>
      <value>
            The name of the local.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.NamespaceURI">
      <summary>
            The namespace URI of this node, or null if it is unspecified.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Element.Prefix">
      <summary>
            The namespace prefix of this node, or null if it is unspecified. When it is defined to be null, setting it has no effect
            </summary>
      <value>
            The namespace prefix of this node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The code representing the type of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.TagName">
      <summary>
            The name of the element.
            </summary>
      <value>
            The name of the element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.Id">
      <summary>
            The element's identifier. See the id attribute definition in HTML 4.01.
            </summary>
      <value>
            The identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.ClassName">
      <summary>
            The class attribute of the element. This attribute has been renamed due
            to conflicts with the "class" keyword exposed by many languages. See
            the class attribute definition in HTML 4.01.
            </summary>
      <value>
            The class attribute.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.TextContent">
      <summary>
            This attribute returns the text content of this node and its descendants. When it is defined to be null, setting it has no effect. On setting, any possible children this node may have are removed and, if it the new string is not empty or null, replaced by a single Text node containing the string this attribute is set to. 
            </summary>
      <value>
            The content of the text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.FirstElementChild">
      <summary>
            Returns the first child element node of this element. null if this element has no child elements.
            </summary>
      <value>
            The first element child.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.LastElementChild">
      <summary>
            Returns the last child element node of this element. null if this element has no child elements.
            </summary>
      <value>
            The last element child.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.PreviousElementSibling">
      <summary>
            Returns the previous sibling element node of this element. null if this element has no element sibling nodes that come before this one in the document tree.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Element.NextElementSibling">
      <summary>
            Returns the next sibling element node of this element. null if this element has no element sibling nodes that come after this one in the document tree.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Element.ChildElementCount">
      <summary>
            Returns the current number of element nodes that are children of this element. 0 if this element has no child nodes that are of nodeType 1.
            </summary>
      <value>
            The child element count.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.Children">
      <summary>
            Returns the child elements of current element.
            </summary>
      <value>
            The children collection
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.SchemaTypeInfo">
      <summary>
            The type information associated with this element.
            </summary>
      <value>
            The schema type information.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.InnerHTML">
      <summary>
            Returns a fragment of HTML or XML that represents the element's contents.
            Can be set, to replace the contents of the element with nodes parsed from the given string.
            </summary>
      <value>
            The inner HTML.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.OuterHTML">
      <summary>
            Returns a fragment of HTML or XML that represents the element and its contents.
            Can be set, to replace the element with nodes parsed from the given string.
            </summary>
      <value>
            The outer HTML.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.ShadowRoot">
      <summary>
            Returns shadowRoot stored on this element or null if it's closed.
            </summary>
      <value>
            The shadowRoot.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Entity">
      <summary>
            Represents a known entity, either parsed or unparsed, in an XML document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.PublicId">
      <summary>
            The public identifier associated with the entity if specified, and null otherwise.
            </summary>
      <value>
            The public identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.SystemId">
      <summary>
            The system identifier associated with the entity if specified, and null otherwise. This may be an absolute URI or not.
            </summary>
      <value>
            The system identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.NotationName">
      <summary>
            For unparsed entities, the name of the notation for the entity. For parsed entities, this is null.
            </summary>
      <value>
            The name of the notation.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.InputEncoding">
      <summary>
            An attribute specifying the encoding used for this entity at the time of parsing, when it is an external parsed entity. This is null if it an entity from the internal subset or if it is not known.
            </summary>
      <value>
            The input encoding.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.XmlEncoding">
      <summary>
            An attribute specifying, as part of the text declaration, the encoding of this entity, when it is an external parsed entity. This is null otherwise.
            </summary>
      <value>
            The XML encoding.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.XmlVersion">
      <summary>
            An attribute specifying, as part of the text declaration, the version number of this entity, when it is an external parsed entity. This is null otherwise.
            </summary>
      <value>
            The XML version.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.EntityReference">
      <summary>
            EntityReference nodes may be used to represent an entity reference in the tree.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.EntityReference.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.EntityReference.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.EventTarget">
      <summary>
            The <see cref="T:Aspose.Html.Dom.EventTarget" /> interface is implemented by all Nodes in an implementation which supports the DOM Event Model.
            Therefore, this interface can be obtained by using binding-specific casting methods on an instance of the Node interface.
            The interface allows registration and removal of Event Listeners on an <see cref="T:Aspose.Html.Dom.EventTarget" /> and dispatch of events to that <see cref="T:Aspose.Html.Dom.Events.IEventTarget" />.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.EventTarget" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.AddEventListener(System.String,Aspose.Html.Dom.Events.DOMEventHandler,System.Boolean)">
      <summary>
            This method allows the registration of event listeners on the event target.
            </summary>
      <param name="type">The event type for which the user is registering</param>
      <param name="handler">Takes an <see cref="T:Aspose.Html.Dom.Events.DOMEventHandler" /> to be called when the event occurs.</param>
      <param name="useCapture">If true, useCapture indicates that the user wishes to initiate capture.
            After initiating capture, all events of the specified type will be dispatched to the registered
            <see cref="T:Aspose.Html.Dom.Events.IEventListener" />
            before being dispatched to any Event Targets beneath them in the tree.
            Events which are bubbling upward through the tree will not trigger an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> designated to use capture.</param>
      <remarks>
        <para>
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is added to an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered
            by the current actions but may be triggered during a later stage of event flow, such as the bubbling phase.
            </para>
        <para>
            If multiple identical Event Listeners are registered on the same <see cref="T:Aspose.Html.Dom.EventTarget" /> with the same parameters the duplicate instances are discarded.
            They do not cause the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be called twice and since they are discarded they do not need to be removed with the
            <see cref="M:Aspose.Html.Dom.EventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.DOMEventHandler,System.Boolean)" />
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.AddEventListener(System.String,Aspose.Html.Dom.Events.IEventListener)">
      <summary>
            This method allows the registration of event listeners on the event target.
            </summary>
      <param name="type">The event type for which the user is registering</param>
      <param name="listener">Takes an interface implemented by the user which contains the methods to be called when the event occurs.</param>
      <remarks>
        <para>
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is added to an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered
            by the current actions but may be triggered during a later stage of event flow, such as the bubbling phase.
            </para>
        <para>
            If multiple identical Event Listeners are registered on the same <see cref="T:Aspose.Html.Dom.EventTarget" /> with the same parameters the duplicate instances are discarded.
            They do not cause the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be called twice and since they are discarded they do not need to be removed with the
            <see cref="M:Aspose.Html.Dom.EventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.DOMEventHandler,System.Boolean)" />
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.AddEventListener(System.String,Aspose.Html.Dom.Events.IEventListener,System.Boolean)">
      <summary>
            This method allows the registration of event listeners on the event target.
            </summary>
      <param name="type">The event type for which the user is registering</param>
      <param name="listener">Takes an interface implemented by the user which contains the methods to be called when the event occurs.</param>
      <param name="useCapture">If true, useCapture indicates that the user wishes to initiate capture.
            After initiating capture, all events of the specified type will be dispatched to the registered
            <see cref="T:Aspose.Html.Dom.Events.IEventListener" />
            before being dispatched to any Event Targets beneath them in the tree.
            Events which are bubbling upward through the tree will not trigger an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> designated to use capture.</param>
      <remarks>
        <para>
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is added to an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered
            by the current actions but may be triggered during a later stage of event flow, such as the bubbling phase.
            </para>
        <para>
            If multiple identical Event Listeners are registered on the same <see cref="T:Aspose.Html.Dom.EventTarget" /> with the same parameters the duplicate instances are discarded.
            They do not cause the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be called twice and since they are discarded they do not need to be removed with the
            <see cref="M:Aspose.Html.Dom.EventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.DOMEventHandler,System.Boolean)" />
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.DOMEventHandler,System.Boolean)">
      <summary>
            This method allows the removal of event listeners from the event target.
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is removed from an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered by the current actions.
            Event Listeners can never be invoked after being removed.
            </summary>
      <param name="type">Specifies the event type of the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> being removed.</param>
      <param name="handler">The <see cref="T:Aspose.Html.Dom.Events.DOMEventHandler" /> parameter indicates the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be removed.</param>
      <param name="useCapture">Specifies whether the EventListener being removed was registered as a capturing listener or not.
            If a listener was registered twice, one with capture and one without, each must be removed separately.
            Removal of a capturing listener does not affect a non-capturing version of the same listener, and vice versa.</param>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.IEventListener)">
      <summary>
            This method allows the removal of event listeners from the event target.
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is removed from an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered by the current actions.
            Event Listeners can never be invoked after being removed.
            </summary>
      <param name="type">Specifies the event type of the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> being removed.</param>
      <param name="listener">The <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> parameter indicates the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be removed.</param>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.IEventListener,System.Boolean)">
      <summary>
            This method allows the removal of event listeners from the event target.
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is removed from an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered by the current actions.
            Event Listeners can never be invoked after being removed.
            </summary>
      <param name="type">Specifies the event type of the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> being removed.</param>
      <param name="listener">The <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> parameter indicates the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be removed.</param>
      <param name="useCapture">Specifies whether the EventListener being removed was registered as a capturing listener or not.
            If a listener was registered twice, one with capture and one without, each must be removed separately.
            Removal of a capturing listener does not affect a non-capturing version of the same listener, and vice versa.</param>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)">
      <summary>
            This method allows the dispatch of events into the implementations event model.
            </summary>
      <param name="event">Specifies the event type, behavior, and contextual information to be used in processing the event.</param>
      <returns>
            The return value of <see cref="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> indicates whether any of the listeners which handled the event called <see cref="M:Aspose.Html.Dom.Events.Event.PreventDefault" />.
            If <see cref="M:Aspose.Html.Dom.Events.Event.PreventDefault" /> was called the value is false, else the value is true.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
      </exception>
      <remarks>
            Events dispatched in this manner will have the same capturing and bubbling behavior as events dispatched directly by the implementation.
            The target of the event is the <see cref="T:Aspose.Html.Dom.EventTarget" /> on which <see cref="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> is called.
            </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="T:Aspose.Html.Dom.IBrowsingContext">
      <summary>
            A browsing context is an environment in which <see cref="T:Aspose.Html.Dom.Document" /> objects are presented to the user.
            </summary>
      <seealso cref="T:Aspose.Html.Services.IServiceProvider" />
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="P:Aspose.Html.Dom.IBrowsingContext.Security">
      <summary>
            Gets the sandboxing flag.
            </summary>
      <value>
            The security.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IBrowsingContext.Parent">
      <summary>
            Gets the parent context, if any.
            </summary>
      <value>
            The parent.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IBrowsingContext.ActiveDocument">
      <summary>
            Gets the current document.
            </summary>
      <value>
            The active document.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IBrowsingContext.Window">
      <summary>
            Gets the WindowProxy object.
            </summary>
      <value>
            The window.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IBrowsingContext.Network">
      <summary>
            Gets the network services.
            </summary>
      <value>
            The network services.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IBrowsingContext.DOMImplementation">
      <summary>
            Gets the DOM implementation.
            </summary>
      <value>
            The DOM implementation.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.IChildNode">
      <summary>
            Defines <see cref="T:Aspose.Html.Dom.IChildNode" /> interface that should be implemented by <see cref="T:Aspose.Html.Dom.Node" /> that can have a parent.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.IChildNode.Remove">
      <summary>
            Removes the current node from parent.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.IDocumentInit">
      <summary>
            This interface provides <see cref="T:Aspose.Html.Dom.Document" /> initialization info.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.IDOMImplementation">
      <summary>
            The DOMImplementation interface provides a number of methods for performing operations that are independent of any particular instance of the document object model.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.IDOMImplementation.HasFeature">
      <summary>
            Test if the DOM implementation implements a specific feature and version, as specified in DOM Features.
            </summary>
      <returns>
        <c>true</c> if the specified feature has feature; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.IDOMImplementation.CreateDocumentType(System.String,System.String,System.String)">
      <summary>
            Creates an empty DocumentType node. Entity declarations and notations are not made available. Entity reference expansions and default attribute additions do not occur.
            </summary>
      <param name="qualifiedName">Name of the qualified.</param>
      <param name="publicId">The public id.</param>
      <param name="systemId">The system id.</param>
      <returns>The <see cref="T:Aspose.Html.Dom.DocumentType" />.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.IDOMImplementation.CreateDocument(System.String,System.String,Aspose.Html.Dom.DocumentType)">
      <summary>
            Creates a DOM Document object of the specified type with its document element.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="qualifiedName">Name of the qualified.</param>
      <param name="doctype">The doctype.</param>
      <returns>Returns document.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.IDOMImplementation.CreateHTMLDocument(System.String)">
      <summary>
            Returns a document, with a basic tree already constructed including a title element, unless the title argument is omitted.
            </summary>
      <param name="title">The title.</param>
      <returns>Returns document.</returns>
    </member>
    <member name="T:Aspose.Html.Dom.IElementInit">
      <summary>
            This interface provides <see cref="T:Aspose.Html.Dom.Element" /> initialization info.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.IElementInit.Document">
      <summary>
            This property represents the owner document.
            </summary>
      <value>
            The owner document.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.IGlobalEventHandlers">
      <summary>
            Represents interface that must be inherited by all element that is supported system event handling
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnAbort">
      <summary>
            Gets or sets event handler for OnAbort event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnBlur">
      <summary>
            Gets or sets event handler for OnBlur event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnCancel">
      <summary>
            Gets or sets event handler for OnCancel event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnCanplay">
      <summary>
            Gets or sets event handler for OnCanplay event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnCanPlayThrough">
      <summary>
            Gets or sets event handler for OnCanPlayThrough event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnChange">
      <summary>
            Gets or sets event handler for OnChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnClick">
      <summary>
            Gets or sets event handler for OnClick event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnCueChange">
      <summary>
            Gets or sets event handler for OnCueChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnDblClick">
      <summary>
            Gets or sets event handler for OnDblClick event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnDurationChange">
      <summary>
            Gets or sets event handler for OnDurationChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnEmptied">
      <summary>
            Gets or sets event handler for OnEmptied event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnEnded">
      <summary>
            Gets or sets event handler for OnEnded event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnError">
      <summary>
            Gets or sets event handler for OnError event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnFocus">
      <summary>
            Gets or sets event handler for OnFocus event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnInput">
      <summary>
            Gets or sets event handler for OnInput event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnInvalid">
      <summary>
            Gets or sets event handler for OnInvalid event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnKeyDown">
      <summary>
            Gets or sets event handler for OnKeyDown event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnKeyPress">
      <summary>
            Gets or sets event handler for OnKeyPress event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnKeyUp">
      <summary>
            Gets or sets event handler for OnKeyUp event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnLoad">
      <summary>
            Gets or sets event handler for OnLoad event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnLoadedData">
      <summary>
            Gets or sets event handler for OnLoadedData event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnLoadedMetadata">
      <summary>
            Gets or sets event handler for OnLoadedMetadata event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnLoadStart">
      <summary>
            Gets or sets event handler for OnLoadStart event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseDown">
      <summary>
            Gets or sets event handler for OnMouseDown event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseEnter">
      <summary>
            Gets or sets event handler for OnMouseEnter event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseLeave">
      <summary>
            Gets or sets event handler for OnMouseLeave event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseMove">
      <summary>
            Gets or sets event handler for OnMouseMove event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseOut">
      <summary>
            Gets or sets event handler for OnMouseOut event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseOver">
      <summary>
            Gets or sets event handler for OnMouseOver event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseUp">
      <summary>
            Gets or sets event handler for OnMouseUp event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseWheel">
      <summary>
            Gets or sets event handler for OnMouseWheel event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnPause">
      <summary>
            Gets or sets event handler for OnPause event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnPlay">
      <summary>
            Gets or sets event handler for OnPlay event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnPlaying">
      <summary>
            Gets or sets event handler for OnPlaying event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnProgress">
      <summary>
            Gets or sets event handler for OnProgress event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnRateChange">
      <summary>
            Gets or sets event handler for OnRateChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnReset">
      <summary>
            Gets or sets event handler for OnReset event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnResize">
      <summary>
            Gets or sets event handler for OnResize event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnScroll">
      <summary>
            Gets or sets event handler for OnScroll event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnSeeked">
      <summary>
            Gets or sets event handler for OnSeeked event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnSeeking">
      <summary>
            Gets or sets event handler for OnSeeking event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnSelect">
      <summary>
            Gets or sets event handler for OnSelect event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnShow">
      <summary>
            Gets or sets event handler for OnShow event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnStalled">
      <summary>
            Gets or sets event handler for OnStalled event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnSubmit">
      <summary>
            Gets or sets event handler for OnSubmit event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnSuspend">
      <summary>
            Gets or sets event handler for OnSuspend event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnTimeUpdate">
      <summary>
            Gets or sets event handler for OnTimeUpdate event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnToggle">
      <summary>
            Gets or sets event handler for OnToggle event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnVolumeChange">
      <summary>
            Gets or sets event handler for OnVolumeChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnWaiting">
      <summary>
            Gets or sets event handler for OnWaiting event.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.INonDocumentTypeChildNode">
      <summary>
            Defines <see cref="T:Aspose.Html.Dom.IChildNode" /> that are not <see cref="F:Aspose.Html.Dom.Node.DOCUMENT_TYPE_NODE" />.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.INonDocumentTypeChildNode.PreviousElementSibling">
      <summary>
            Returns the first preceding sibling that is an element, and null otherwise.
            </summary>
      <value>
            The previous element sibling.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.INonDocumentTypeChildNode.NextElementSibling">
      <summary>
            Returns the first following sibling that is an element, and null otherwise.
            </summary>
      <value>
            The next element sibling.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.INonElementParentNode">
      <summary>
            Defines <see cref="T:Aspose.Html.Dom.IParentNode" /> that are not Element type.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.INonElementParentNode.GetElementById(System.String)">
      <summary>
            Returns the first element within node's descendants whose ID is elementId.
            </summary>
      <param name="elementId">The element identifier.</param>
      <returns>
            Returns the first matched element.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.IParentNode">
      <summary>
            Defines the <see cref="T:Aspose.Html.Dom.IParentNode" /> interface that is implemented by any possible parents.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Traversal.IElementTraversal" />
    </member>
    <member name="M:Aspose.Html.Dom.IParentNode.QuerySelector(System.String)">
      <summary>
            Returns the first element that is a descendant of node that matches selectors.
            </summary>
      <param name="selectors">The selectors.</param>
      <returns>Returns the first matched element.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.IParentNode.QuerySelectorAll(System.String)">
      <summary>
            Returns all element descendants of node that match selectors.
            </summary>
      <param name="selectors">The selectors.</param>
      <returns>Returns the static result of running scope-match a selectors string selectors against the context object.</returns>
    </member>
    <member name="P:Aspose.Html.Dom.IParentNode.Children">
      <summary>
            Returns the child elements.
            </summary>
      <value>
            The children.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IParentNode.FirstElementChild">
      <summary>
            Returns the first child that is an element, and null otherwise.
            </summary>
      <value>
            The first element child.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IParentNode.LastElementChild">
      <summary>
            Returns the last child that is an element, and null otherwise.
            </summary>
      <value>
            The last element child.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IParentNode.ChildElementCount">
      <summary>
            The childElementCount attribute must return the number of children of the context object that are elements.
            </summary>
      <value>
            The child element count.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Node">
      <summary>
            The Node interface is the primary datatype for the entire Document object Model. It represents a single node in the document tree.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.ELEMENT_NODE">
      <summary>
            An element node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.ATTRIBUTE_NODE">
      <summary>
            An attribute node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.TEXT_NODE">
      <summary>
            A text node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.CDATA_SECTION_NODE">
      <summary>
            A cdata section node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.ENTITY_REFERENCE_NODE">
      <summary>
            An entity reference node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.ENTITY_NODE">
      <summary>
            An entity node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.PROCESSING_INSTRUCTION_NODE">
      <summary>
            A processing instruction node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.COMMENT_NODE">
      <summary>
            A comment node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.DOCUMENT_NODE">
      <summary>
            A document node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.DOCUMENT_TYPE_NODE">
      <summary>
            A document type node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.DOCUMENT_FRAGMENT_NODE">
      <summary>
            A document fragment node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.NOTATION_NODE">
      <summary>
            A notation node
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Node.#ctor(Aspose.Html.Dom.Document)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Node" /> class.
            </summary>
      <param name="document">The document.</param>
      <exception cref="T:System.ArgumentException">
      </exception>
    </member>
    <member name="M:Aspose.Html.Dom.Node.Finalize">
      <summary>
            Finalizes an instance of the <see cref="T:Aspose.Html.Dom.Node" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Node.HasChildNodes">
      <summary>
            Returns whether this node has any children.
            </summary>
      <returns>
        <c>true</c> if has child nodes otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.HasAttributes">
      <summary>
            Returns whether this node (if it is an element) has any attributes
            </summary>
      <returns>
              boolean <c>true</c> if this node has any attributes, <c>false</c> otherwise.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.Normalize">
      <summary>
            Puts all Text nodes in the full depth of the sub-tree underneath this Node, including attribute nodes, into a "normal" form where only structure (e.g., elements, comments, processing instructions, CDATA sections, and entity references) separates Text nodes, i.e., there are neither adjacent Text nodes nor empty Text nodes. This can be used to ensure that the DOM view of a document is the same as if it were saved and re-loaded, and is useful when operations (such as XPointer [XPointer] lookups) that depend on a particular document tree structure are to be used. If the parameter "normalize-characters" of the DOMConfiguration object attached to the Node.ownerDocument is true, this method will also fully normalize the characters of the Text nodes.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Node.CloneNode">
      <summary>
            Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent (parentNode is null) and no user data.
            </summary>
      <returns>Returns node</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.CloneNode(System.Boolean)">
      <summary>
            Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent (parentNode is null) and no user data.
            </summary>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>Returns node</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.IsEqualNode(Aspose.Html.Dom.Node)">
      <summary>
            Tests whether two nodes are equal.
            This method tests for equality of nodes, not sameness (i.e., whether the two nodes are references to the same object) which can be tested with Node.isSameNode(). All nodes that are the same will also be equal, though the reverse may not be true.
            </summary>
      <param name="otherNode">The other node.</param>
      <returns>
        <c>true</c> if [is equal node] [the specified arg]; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.IsSameNode(Aspose.Html.Dom.Node)">
      <summary>
            Returns whether this node is the same node as the given one. 
            This method provides a way to determine whether two Node references returned by the implementation reference the same object. When two Node references are references to the same object, even if through a proxy, the references may be used completely interchangeably, such that all attributes have the same values and calling the same DOM method on either reference always has exactly the same effect.
            </summary>
      <param name="otherNode">The other node.</param>
      <returns>
        <c>true</c> if [is same node] [the specified other]; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.LookupPrefix(System.String)">
      <summary>
            Look up the prefix associated to the given namespace URI, starting from this node. The default namespace declarations are ignored by this method. 
            See Namespace Prefix Lookup for details on the algorithm used by this method.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <returns>Returns prefix</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.LookupNamespaceURI(System.String)">
      <summary>
            Look up the namespace URI associated to the given prefix, starting from this node.
            </summary>
      <param name="prefix">The prefix.</param>
      <returns>Returns namespace URI</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.IsDefaultNamespace(System.String)">
      <summary>
            This method checks if the specified namespaceURI is the default namespace or not.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <returns>
        <c>true</c> if [is default namespace] [the specified namespace URI]; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.InsertBefore(Aspose.Html.Dom.Node,Aspose.Html.Dom.Node)">
      <summary>
            Inserts the node before the existing child node child. If child is null, insert node at the end of the list of children.
            If child is a DocumentFragment object, all of its children are inserted, in the same order, before child. If the child is already in the tree, it is first removed.
            </summary>
      <param name="node">The new child.</param>
      <param name="child">The ref child.</param>
      <returns>Returns inserted node</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.ReplaceChild(Aspose.Html.Dom.Node,Aspose.Html.Dom.Node)">
      <summary>
            Replaces the child node oldChild with newChild in the list of children, and returns the oldChild node. 
            If newChild is a DocumentFragment object, oldChild is replaced by all of the DocumentFragment children, which are inserted in the same order. If the newChild is already in the tree, it is first removed.
            </summary>
      <param name="node">The new node.</param>
      <param name="child">The old child.</param>
      <returns>Returns node</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.RemoveChild(Aspose.Html.Dom.Node)">
      <summary>
            Removes the child node indicated by oldChild from the list of children, and returns it.
            </summary>
      <param name="child">The old child.</param>
      <returns>Returns node</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.AppendChild(Aspose.Html.Dom.Node)">
      <summary>
            Adds the node newChild to the end of the list of children of this node. If the newChild is already in the tree, it is first removed.
            </summary>
      <param name="node">The node to append.</param>
      <returns>Returns node</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Node.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Node.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Node.LocalName">
      <summary>
            Returns the local part of the qualified name of this node.
            For nodes of any type other than ELEMENT_NODE and ATTRIBUTE_NODE and nodes created with a DOM Level 1 method, such as Document.createElement(), this is always null.
            </summary>
      <value>
            The name of the local.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Node.NamespaceURI">
      <summary>
            The namespace URI of this node, or null if it is unspecified.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.Prefix">
      <summary>
            The namespace prefix of this node, or null if it is unspecified. When it is defined to be null, setting it has no effect
            </summary>
      <value>
            The prefix.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Node.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Node.BaseURI">
      <summary>
            The absolute base URI of this node or null if the implementation wasn't able to obtain an absolute URI. 
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.OwnerDocument">
      <summary>
            The Document object associated with this node. This is also the Document object used to create new nodes. When this node is a Document or a DocumentType which is not used with any Document yet, this is null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.ParentNode">
      <summary>
            The parent of this node. All nodes, except Attr, Document, DocumentFragment, Entity, and Notation may have a parent. However, if a node has just been created and not yet added to the tree, or if it has been removed from the tree, this is null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.ParentElement">
      <summary>
            Gets the parent <see cref="T:Aspose.Html.Dom.Element" /> of this node.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.ChildNodes">
      <summary>
            A NodeList that contains all children of this node. If there are no children, this is a NodeList containing no nodes..
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.FirstChild">
      <summary>
            The first child of this node. If there is no such node, this returns null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.LastChild">
      <summary>
            The last child of this node. If there is no such node, this returns null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.PreviousSibling">
      <summary>
            The node immediately preceding this node. If there is no such node, this returns null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.NextSibling">
      <summary>
            The node immediately following this node. If there is no such node, this returns null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.Attributes">
      <summary>
            A NamedNodeMap containing the attributes of this node (if it is an Element) or null otherwise.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.NodeValue">
      <summary>
            The value of this node, depending on its type.
            </summary>
      <value>
            The node value.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Node.TextContent">
      <summary>
            This attribute returns the text content of this node and its descendants. When it is defined to be null, setting it has no effect. On setting, any possible children this node may have are removed and, if it the new string is not empty or null, replaced by a single Text node containing the string this attribute is set to. 
            </summary>
      <value>
            The content of the text.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Notation">
      <summary>
            Represents a notation declared in the DTD.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Notation.PublicId">
      <summary>
            The public identifier of this notation. If the public identifier was not specified, this is null.
            </summary>
      <value>
            The public identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Notation.SystemId">
      <summary>
            The system identifier of this notation. If the system identifier was not specified, this is null. This may be an absolute URI or not.
            </summary>
      <value>
            The system identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Notation.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Notation.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.ProcessingInstruction">
      <summary>
            The ProcessingInstruction represents a "processing instruction", used in XML as a way to keep processor-specific information in the text of the document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.ProcessingInstruction.Target">
      <summary>
            The target of this processing instruction.
            </summary>
      <value>
            The target.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.ProcessingInstruction.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.ProcessingInstruction.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.ProcessingInstruction.NodeValue">
      <summary>
            The value of this node, depending on its type.
            </summary>
      <value>
            The node value.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.ProcessingInstruction.TextContent">
      <summary>
            This attribute returns the text content of this node and its descendants. When it is defined to be null, setting it has no effect. On setting, any possible children this node may have are removed and, if it the new string is not empty or null, replaced by a single Text node containing the string this attribute is set to. 
            </summary>
      <value>
            The content of the text.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.ShadowRoot">
      <summary>
            ShadowRoot is a root node of shadow tree.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.ShadowRoot.#ctor(Aspose.Html.Dom.Document,Aspose.Html.Dom.ShadowRootMode,Aspose.Html.Dom.Element)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.ShadowRoot" /> class.
            </summary>
      <param name="ownerDocument">The owner document.</param>
      <param name="mode">Mode in which shadow root will operate.</param>
      <param name="host">Element on which this root was created.</param>
    </member>
    <member name="P:Aspose.Html.Dom.ShadowRoot.Mode">
      <summary>
            Mode in which this ShadowRoot operates.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.ShadowRoot.Host">
      <summary>
            Host is an element which contains this ShadowRoot.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.ShadowRootMode">
      <summary>
            Modes in which ShadowRoot can operate.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.ShadowRootMode.Open">
      <summary>
            "open" mode.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.ShadowRootMode.Closed">
      <summary>
            "closed" mode.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Text">
      <summary>
            The Text interface inherits from CharacterData and represents the textual content (termed character data in XML) of an Element or Attr.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Text.SplitText(System.Int32)">
      <summary>
            Breaks this node into two nodes at the specified offset, keeping both in the tree as siblings.
            </summary>
      <param name="offset">The offset.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Text" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Text.ReplaceWholeText(System.String)">
      <summary>
            Replaces the text of the current node and all logically-adjacent text nodes with the specified text. All logically-adjacent text nodes are removed including the current node unless it was the recipient of the replacement text.
            </summary>
      <param name="content">The content.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Text" />.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Text.IsElementContentWhitespace">
      <summary>
            Returns whether this text node contains element content whitespace, often abusively called "ignorable whitespace".
            </summary>
      <value>
        <c>true</c> if this instance is element content whitespace; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Text.WholeText">
      <summary>
            Returns all text of Text nodes logically-adjacent text nodes to this node, concatenated in document order.
            </summary>
      <value>
            The whole text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Text.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Text.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Text.NodeValue">
      <summary>
            The value of this node, depending on its type.
            </summary>
      <value>
            The node value.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Text.TextContent">
      <summary>
            This attribute returns the text content of this node and its descendants. When it is defined to be null, setting it has no effect. On setting, any possible children this node may have are removed and, if it the new string is not empty or null, replaced by a single Text node containing the string this attribute is set to. 
            </summary>
      <value>
            The content of the text.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.TypeInfo">
      <summary>
            The TypeInfo represents a type referenced from Element or Attr nodes, specified in the schemas associated with the document.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.TypeInfo.DERIVATION_RESTRICTION">
      <summary>
            If the document's schema is an XML Schema [XML Schema Part 1], this constant represents the derivation by restriction if complex types are involved, or a restriction if simple types are involved. 
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.TypeInfo.DERIVATION_EXTENSION">
      <summary>
            If the document's schema is an XML Schema [XML Schema Part 1], this constant represents the derivation by extension. 
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.TypeInfo.DERIVATION_UNION">
      <summary>
            If the document's schema is an XML Schema [XML Schema Part 1], this constant represents the union if simple types are involved. 
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.TypeInfo.DERIVATION_LIST">
      <summary>
            If the document's schema is an XML Schema [XML Schema Part 1], this constant represents the list. 
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.TypeInfo.IsDerivedFrom(System.String,System.String,System.UInt64)">
      <summary>
            This method returns if there is a derivation between the reference type definition, i.e. the TypeInfo on which the method is being called, and the other type definition, i.e. the one passed as parameters.
            </summary>
      <param name="typeNamespaceArg">the namespace of the other type definition</param>
      <param name="typeNameArg">the name of the other type definition. </param>
      <param name="derivationMethod">the type of derivation and conditions applied between two types, as described in the list of constants provided in this interface.</param>
      <returns>
              If the document's schema is a DTD or no schema is associated with the document, this method will always return false. If the document's schema is an XML Schema, the method will true if the reference type definition is derived from the other type definition according to the derivation parameter. If the value of the parameter is 0 (no bit is set to 1 for the derivationMethod parameter), the method will return true if the other type definition can be reached by recursing any combination of {base type definition}, {item type definition}, or {member type definitions} from the reference type definition.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.TypeInfo.TypeName">
      <summary>
            The name of a type declared for the associated element or attribute, or null if unknown. 
            </summary>
      <value>
            The name of the type.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.TypeInfo.TypeNamespace">
      <summary>
            Gets the type namespace.The namespace of the type declared for the associated element or attribute or null if the element does not have declaration or if no namespace information is available.
            </summary>
      <value>
            The type namespace.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Dom (Document Object Model)</b> namespace provides API that
            represents and interacts with any HTML, XML or SVG documents.
            The DOM is a document model loaded in the browser and
            representing the document as a node tree, where each node
            represents part of the document (e.g. an element, text string, or comment).
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.NamespaceGroupDoc">
      <summary>
            This group consists of namespaces and namespace groups responsible for
            DOM (Document Object Model) processing and HTML, XML or SVG documents tree nodes manipulations.
            It also includes CSS and SVG related namespaces.  
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.XPath.IXPathEvaluator">
      <summary>
            The evaluation of XPath expressions is provided by <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" />.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.XPath.IXPathEvaluator.CreateExpression(System.String,Aspose.Html.Dom.XPath.IXPathNSResolver)">
      <summary>
            Creates a parsed XPath expression with resolved namespaces. This is useful 
            when an expression will be reused in an application since it makes it possible 
            to compile the expression string into a more efficient internal form and 
            preresolve all namespace prefixes which occur within the expression.
            </summary>
      <param name="expression">The XPath expression string to be parsed.</param>
      <param name="resolver">The <c>resolver</c> permits translation of all prefixes, 
            including the <c>xml</c> namespace prefix, within the XPath expression into 
            appropriate namespace URIs. If this is specified as <c>null</c>, any namespace 
            prefix within the expression will result in <see cref="T:Aspose.Html.Dom.DOMException" /> being 
            thrown with the code <c>NAMESPACE_ERR</c>.</param>
      <returns>The compiled form of the XPath expression.</returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">INVALID_EXPRESSION_ERR: Raised if the expression is not 
            legal according to the rules of the <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" />.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">NAMESPACE_ERR: Raised if the expression contains namespace 
            prefixes which cannot be resolved by the specified <see cref="T:Aspose.Html.Dom.XPath.IXPathNSResolver" />.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.XPath.IXPathEvaluator.CreateNSResolver(Aspose.Html.Dom.Node)">
      <summary>
            Adapts any DOM node to resolve namespaces so that an XPath expression can be easily evaluated
            relative to the context of the node where it appeared within the document. This adapter works
            like the DOM Level 3 method <c>lookupNamespaceURI</c> on nodes in resolving the namespaceURI
            from a given prefix using the current information available in the node's hierarchy at the time
            lookupNamespaceURI is called, also correctly resolving the implicit xml prefix.
            </summary>
      <param name="nodeResolver">The node to be used as a context for namespace resolution.</param>
      <returns>
        <see cref="T:Aspose.Html.Dom.XPath.IXPathNSResolver" /> which resolves namespaces with respect to the definitions
            in scope for a specified node.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.XPath.IXPathEvaluator.Evaluate(System.String,Aspose.Html.Dom.Node,Aspose.Html.Dom.XPath.IXPathNSResolver,Aspose.Html.Dom.XPath.XPathResultType,System.Object)">
      <summary>
            Evaluates an XPath expression string and returns a result of the specified type if possible.
            </summary>
      <param name="expression">The XPath expression string to be parsed and evaluated.</param>
      <param name="contextNode">The <c>context</c> is context node for the evaluation of this 
            XPath expression. If the <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" /> was obtained by casting the 
            <see cref="T:Aspose.Html.Dom.Document" /> then this must be owned by the same document and must be a 
            <see cref="T:Aspose.Html.Dom.Document" />, <see cref="T:Aspose.Html.Dom.Element" />, <see cref="T:Aspose.Html.Dom.Attr" />, <see cref="T:Aspose.Html.Dom.Text" />, 
            <see cref="T:Aspose.Html.Dom.CDATASection" />, <see cref="T:Aspose.Html.Dom.Comment" />, <see cref="T:Aspose.Html.Dom.ProcessingInstruction" />, 
            or <see cref="T:Aspose.Html.Dom.XPath.XPathNamespace" /> node. If the context node is a <see cref="T:Aspose.Html.Dom.Text" /> or a 
            <see cref="T:Aspose.Html.Dom.CDATASection" />, then the context is interpreted as the whole logical text node 
            as seen by XPath, unless the node is empty in which case it may not serve as the XPath context.</param>
      <param name="resolver">The <c>resolver</c> permits translation of all prefixes, including 
            the <c>xml</c> namespace prefix, within the XPath expression into appropriate namespace URIs. 
            If this is specified as <c>null</c>, any namespace prefix within the expression will result 
            in <see cref="T:Aspose.Html.Dom.DOMException" /> being thrown with the code <c>NAMESPACE_ERR</c>.</param>
      <param name="type">If a specific <c>type</c> is specified, then the result will be returned as 
            the corresponding type. For XPath 1.0 results, this must be one of the values of the 
            <see cref="T:Aspose.Html.Dom.XPath.XPathResultType" /> enum.</param>
      <param name="result">The <c>result</c> specifies a specific result object which may be reused 
            and returned by this method. If this is specified as <c>null</c> or the implementation does not 
            reuse the specified result, a new result object will be constructed and returned. For XPath 1.0 
            results, this object will be of type <see cref="T:Aspose.Html.Dom.XPath.IXPathResult" />.</param>
      <returns>The result of the evaluation of the XPath expression. For XPath 1.0 results, this object 
            will be of type <see cref="T:Aspose.Html.Dom.XPath.IXPathResult" />.</returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">INVALID_EXPRESSION_ERR: Raised if the expression is not legal according 
            to the rules of the <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" />.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: Raised if the result cannot be converted to return the 
            specified type.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">NAMESPACE_ERR: Raised if the expression contains namespace prefixes 
            which cannot be resolved by the specified <see cref="T:Aspose.Html.Dom.XPath.IXPathNSResolver" />.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">WRONG_DOCUMENT_ERR: The Node is from a document that is not supported 
            by this <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" />.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: The Node is not a type permitted as an XPath context 
            node or the request type is not permitted by this <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" />.</exception>
    </member>
    <member name="T:Aspose.Html.Dom.XPath.IXPathExpression">
      <summary>
            The <c>XPathExpression</c> interface represents a parsed and resolved XPath expression.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.XPath.IXPathExpression.Evaluate(Aspose.Html.Dom.Node,Aspose.Html.Dom.XPath.XPathResultType,System.Object)">
      <summary>
            Evaluates this XPath expression and returns a result.
            </summary>
      <param name="contextNode">The <c>context</c> is context node for the evaluation of this XPath expression. 
            If the <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" /> was obtained by casting the <see cref="T:Aspose.Html.Dom.Document" /> then this must be 
            owned by the same document and must be a <see cref="T:Aspose.Html.Dom.Document" />, <see cref="T:Aspose.Html.Dom.Element" />, <see cref="T:Aspose.Html.Dom.Attr" />, 
            <see cref="T:Aspose.Html.Dom.Text" />, <see cref="T:Aspose.Html.Dom.CDATASection" />, <see cref="T:Aspose.Html.Dom.Comment" />, <see cref="T:Aspose.Html.Dom.ProcessingInstruction" />, 
            or <see cref="T:Aspose.Html.Dom.XPath.XPathNamespace" /> node. If the context node is a <see cref="T:Aspose.Html.Dom.Text" /> or a <see cref="T:Aspose.Html.Dom.CDATASection" />, 
            then the context is interpreted as the whole logical text node as seen by XPath, unless the node is empty 
            in which case it may not serve as the XPath context.</param>
      <param name="type">If a specific <c>type</c> is specified, then the result will be coerced to return the 
            specified type relying on XPath conversions and fail if the desired coercion is not possible. This must 
            be one of the values of <see cref="T:Aspose.Html.Dom.XPath.XPathResultType" />.</param>
      <param name="result">The <c>result</c> specifies a specific result object which may be reused and returned 
            by this method. If this is specified as <c>null</c> or the implementation does not reuse the specified 
            result, a new result object will be constructed and returned. For XPath 1.0 results, this object will be 
            of type <see cref="T:Aspose.Html.Dom.XPath.IXPathResult" />.</param>
      <returns>The result of the evaluation of the XPath expression. For XPath 1.0 results, this object will be 
            of type <see cref="T:Aspose.Html.Dom.XPath.IXPathResult" />.</returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: Raised if the result cannot be converted to return the specified type.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">WRONG_DOCUMENT_ERR: The Node is from a document that is not supported by 
            the <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" /> that created this <see cref="T:Aspose.Html.Dom.XPath.IXPathExpression" />.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: The Node is not a type permitted as an XPath context node 
            or the request type is not permitted by this <see cref="T:Aspose.Html.Dom.XPath.IXPathExpression" />.</exception>
    </member>
    <member name="T:Aspose.Html.Dom.XPath.IXPathNamespace">
      <summary>
            The XPathNamespace interface is returned by XPathResult interfaces to represent the XPath namespace node type that DOM lacks.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathNamespace.OwnerElement">
      <summary>
            The <see cref="T:Aspose.Html.Dom.Element" /> on which the namespace was in scope when it was requested. 
            This does not change on a returned namespace node even if the document changes such 
            that the namespace goes out of scope on that element and this node is no longer found 
            there by XPath.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.XPath.IXPathNSResolver">
      <summary>
            The <c>XPathNSResolver</c> interface permit <c>prefix</c> strings in 
            the expression to be properly bound to <c>namespaceURI</c> strings. 
            <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" /> can construct an implementation of 
            <see cref="T:Aspose.Html.Dom.XPath.IXPathNSResolver" /> from a node, or the interface may be 
            implemented by any application.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.XPath.IXPathNSResolver.LookupNamespaceURI(System.String)">
      <summary>
            Look up the namespace URI associated to the given namespace prefix. 
            The XPath evaluator must never call this with a <c>null</c> or empty 
            argument, because the result of doing this is undefined.
            </summary>
      <param name="prefix">The prefix to look for.</param>
      <returns>Returns the associated namespace URI or <c>null</c> if none 
            is found.</returns>
    </member>
    <member name="T:Aspose.Html.Dom.XPath.IXPathResult">
      <summary>
            The <c>XPathResult</c> interface represents the result of the evaluation of an 
            XPath 1.0 expression within the context of a particular node. Since evaluation 
            of an XPath expression can result in various result types, this object makes it 
            possible to discover and manipulate the type and value of the result.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.XPath.IXPathResult.IterateNext">
      <summary>
            Iterates and returns the next node from the node set or <c>null</c> if there are no more nodes.
            </summary>
      <returns>Returns the next node.</returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: raised if <c>resultType</c> is not 
            <c>UnorderedNodeIterator</c> type or <c>OrderedNodeIterator</c> type.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">INVALID_STATE_ERR: The document has been mutated 
            since the result was returned.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.XPath.IXPathResult.SnapshotItem(System.Int32)">
      <summary>
            Returns the <c>index</c>th item in the snapshot collection. If <c>index</c> is greater than 
            or equal to the number of nodes in the list, this method returns <c>null</c>. Unlike the 
            iterator result, the snapshot does not become invalid, but may not correspond to the current 
            document if it is mutated.
            </summary>
      <param name="index">Index into the snapshot collection.</param>
      <returns>The node at the <c>index</c>th position in the <c>NodeList</c>, or <c>null</c> if 
            that is not a valid index.</returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: raised if <c>resultType</c> is not 
            <c>UnorderedNodeSnapshot</c> type or <c>OrderedNodeSnapshot</c> type.</exception>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathResult.ResultType">
      <summary>
            A code representing the type of this result, as defined by the 
            http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult
            <see cref="T:Aspose.Html.Dom.XPath.XPathResultType" /> enum.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathResult.NumberValue">
      <summary>
            The value of this number result.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: raised if <c>resultType</c> is not 
            <c>Number</c> type.</exception>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathResult.StringValue">
      <summary>
            The value of this string result.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: raised if <c>resultType</c> is not 
            <c>String</c> type.</exception>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathResult.BooleanValue">
      <summary>
            The value of this boolean result.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: raised if <c>resultType</c> is not 
            <c>Boolean</c> type.</exception>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathResult.SingleNodeValue">
      <summary>
            The value of this single node result, which may be <c>null</c>.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: raised if resultType is not 
            <c>AnyUnorderedNode</c> type or <c>FirstOrderedNode</c> type.</exception>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathResult.InvalidIteratorState">
      <summary>
            Signifies that the iterator has become invalid. True if <c>resultType</c> 
            is <c>UnorderedNodeIterator</c> type or <c>OrderedNodeIterator</c> type and 
            the document has been modified since this result was returned.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathResult.SnapshotLength">
      <summary>
            The number of nodes in the result snapshot. Valid values for snapshotItem 
            indices are <c>0</c> to <c>snapshotLength-1</c> inclusive.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: raised if resultType is not 
            <c>UnorderedNodeSnapshot</c> type or <c>OrderedNodeSnapshot</c> type.</exception>
    </member>
    <member name="T:Aspose.Html.Dom.XPath.NamespaceDoc">
      <summary>
            The namespace contains methods to
            navigate through elements and attributes in an XML document.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.XPath.XPathResultType">
      <summary>
            An unsigned short indicating what type of result this is. If a specific 
            <c>type</c> is specified, then the result will be returned as the corresponding 
            type, using XPath type conversions where required and possible.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.Any">
      <summary>
            This code does not represent a specific type. An evaluation of an XPath expression 
            will never produce this type. If this type is requested, then the evaluation returns 
            whatever type naturally results from evaluation of the expression. If the natural 
            result is a node set when <c>Any</c> type was requested, then <c>UnorderedNodeIterator</c> 
            is always the resulting type. Any other representation of a node set must be 
            explicitly requested.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.Number">
      <summary>
            The result is a number as defined by [XPath 1.0]. Document modification does not 
            invalidate the number, but may mean that reevaluation would not yield the same number.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.String">
      <summary>
            The result is a string as defined by [XPath 1.0]. Document modification does not 
            invalidate the string, but may mean that the string no longer corresponds to the 
            current document.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.Boolean">
      <summary>
            The result is a boolean as defined by [XPath 1.0]. Document modification does not 
            invalidate the boolean, but may mean that reevaluation would not yield the same boolean.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.UnorderedNodeIterator">
      <summary>
            The result is a node set as defined by [XPath 1.0] that will be accessed iteratively, 
            which may not produce nodes in a particular order. Document modification invalidates the 
            iteration. This is the default type returned if the result is a node set and <c>Any</c> 
            type is requested.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.OrderedNodeIterator">
      <summary>
            The result is a node set as defined by [XPath 1.0] that will be accessed iteratively, 
            which will produce document-ordered nodes. Document modification invalidates the iteration.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.UnorderedNodeSnapshot">
      <summary>
            The result is a node set as defined by [XPath 1.0] that will be accessed as a snapshot 
            list of nodes that may not be in a particular order. Document modification does not 
            invalidate the snapshot but may mean that reevaluation would not yield the same snapshot 
            and nodes in the snapshot may have been altered, moved, or removed from the document.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.OrderedNodeSnapshot">
      <summary>
            The result is a node set as defined by [XPath 1.0] that will be accessed as a snapshot 
            list of nodes that will be in original document order. Document modification does not 
            invalidate the snapshot but may mean that reevaluation would not yield the same snapshot 
            and nodes in the snapshot may have been altered, moved, or removed from the document.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.AnyUnorderedNode">
      <summary>
            The result is a node set as defined by [XPath 1.0] and will be accessed as a single node, 
            which may be <c>null</c> if the node set is empty. Document modification does not invalidate 
            the node, but may mean that the result node no longer corresponds to the current document. 
            This is a convenience that permits optimization since the implementation can stop once any 
            node in the resulting set has been found. If there is more than one node in the actual result, 
            the single node returned might not be the first in document order.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.FirstOrderedNode">
      <summary>
            The result is a node set as defined by [XPath 1.0] and will be accessed as a single node, 
            which may be <c>null</c> if the node set is empty. Document modification does not invalidate 
            the node, but may mean that the result node no longer corresponds to the current document. 
            This is a convenience that permits optimization since the implementation can stop once the 
            first node in document order of the resulting set has been found. If there are more than one 
            node in the actual result, the single node returned will be the first in document order.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Views.IAbstractView">
      <summary>
            A base interface that all views shall derive from.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Views.IAbstractView.Document">
      <summary>
            The source DocumentView of which this is an AbstractView.
            </summary>
      <value>
            The document.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Views.IDocumentView">
      <summary>
            The DocumentView interface is implemented by Document objects in DOM implementations supporting DOM Views. It provides an attribute to retrieve the default view of a document.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Views.IAbstractView" />
    </member>
    <member name="P:Aspose.Html.Dom.Views.IDocumentView.DefaultView">
      <summary>
            The default AbstractView for this Document, or null if none available.
            </summary>
      <value>
            The default view.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Views.NamespaceDoc">
      <summary>
        <b>Aspose.Html.Dom.Views</b> namespace describes AbstractView and
            DocumentView interfaces according
            Document Object Model Views specification.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.IDocumentTraversal">
      <summary>
            DocumentTraversal contains methods that create iterators and 
            tree-walkers to traverse a node and its children in document order (depth 
            first, pre-order traversal, which is equivalent to the order in which the 
            start tags occur in the text representation of the document). In DOMs 
            which support the Traversal feature, DocumentTraversal will 
            be implemented by the same objects that implement the Document interface.
            <para>See also the <a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113">Document object Model (DOM) Level 2 Traversal and Range Specification</a>.
            @since DOM Level 2
            </para></summary>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.IDocumentTraversal.CreateNodeIterator(Aspose.Html.Dom.Node)">
      <summary>
            Create a new NodeIterator over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will be iterated together with its children.
            The iterator is initially positioned just before this node. The
            whatToShow flags and the filter, if any, are not
            considered when setting this position. The root must not be
            null.</param>
      <returns>
            The newly created NodeIterator.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the specified root is
            null.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.IDocumentTraversal.CreateNodeIterator(Aspose.Html.Dom.Node,System.Int64)">
      <summary>
            Create a new NodeIterator over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will be iterated together with its children.
            The iterator is initially positioned just before this node. The
            whatToShow flags and the filter, if any, are not
            considered when setting this position. The root must not be
            null.</param>
      <param name="whatToShow">flag specifies which node types may appear in
            the logical view of the tree presented by the iterator. See the
            description of NodeFilter for the set of possible
            SHOW_ values.These flags can be combined using
            OR.</param>
      <returns>
            The newly created NodeIterator.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the specified root is
            null.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.IDocumentTraversal.CreateNodeIterator(Aspose.Html.Dom.Node,System.Int64,Aspose.Html.Dom.Traversal.INodeFilter)">
      <summary>
            Create a new NodeIterator over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will be iterated together with its children.
            The iterator is initially positioned just before this node. The
            whatToShow flags and the filter, if any, are not
            considered when setting this position. The root must not be
            null.</param>
      <param name="whatToShow">flag specifies which node types may appear in
            the logical view of the tree presented by the iterator. See the
            description of NodeFilter for the set of possible
            SHOW_ values.These flags can be combined using
            OR.</param>
      <param name="filter">NodeFilter to be used with this
            TreeWalker, or null to indicate no filter.</param>
      <returns>
            The newly created NodeIterator.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the specified root is
            null.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.IDocumentTraversal.CreateTreeWalker(Aspose.Html.Dom.Node)">
      <summary>
            Create a new TreeWalker over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will serve as the root for the
            TreeWalker. The whatToShow flags and the
            NodeFilter are not considered when setting this value;
            any node type will be accepted as the root. The
            currentNode of the TreeWalker is
            initialized to this node, whether or not it is visible. The
            root functions as a stopping point for traversal
            methods that look upward in the document structure, such as
            parentNode and nextNode. The root must
            not be null.</param>
      <returns>
            The newly created TreeWalker.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.IDocumentTraversal.CreateTreeWalker(Aspose.Html.Dom.Node,System.Int64)">
      <summary>
            Create a new TreeWalker over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will serve as the root for the
            TreeWalker. The whatToShow flags and the
            NodeFilter are not considered when setting this value;
            any node type will be accepted as the root. The
            currentNode of the TreeWalker is
            initialized to this node, whether or not it is visible. The
            root functions as a stopping point for traversal
            methods that look upward in the document structure, such as
            parentNode and nextNode. The root must
            not be null.</param>
      <param name="whatToShow">flag specifies which node types may appear in
            the logical view of the tree presented by the tree-walker. See the
            description of NodeFilter for the set of possible
            SHOW_ values.These flags can be combined using OR.</param>
      <returns>
            The newly created TreeWalker.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.IDocumentTraversal.CreateTreeWalker(Aspose.Html.Dom.Node,System.Int64,Aspose.Html.Dom.Traversal.INodeFilter)">
      <summary>
            Create a new TreeWalker over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will serve as the root for the
            TreeWalker. The whatToShow flags and the
            NodeFilter are not considered when setting this value;
            any node type will be accepted as the root. The
            currentNode of the TreeWalker is
            initialized to this node, whether or not it is visible. The
            root functions as a stopping point for traversal
            methods that look upward in the document structure, such as
            parentNode and nextNode. The root must
            not be null.</param>
      <param name="whatToShow">flag specifies which node types may appear in
            the logical view of the tree presented by the tree-walker. See the
            description of NodeFilter for the set of possible
            SHOW_ values.These flags can be combined using OR.</param>
      <param name="filter">NodeFilter to be used with this
            TreeWalker, or null to indicate no filter.</param>
      <returns>
            The newly created TreeWalker.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.IElementTraversal">
      <summary>
            The ElementTraversal interface is a set of read-only attributes which allow an author to easily navigate between elements in a document. In conforming implementations of Element Traversal, all objects that implement Element must also implement the ElementTraversal interface.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.IElementTraversal.FirstElementChild">
      <summary>
            Returns the first child element node of this element. null if this element has no child elements.
            </summary>
      <value>
            The first element child.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.IElementTraversal.LastElementChild">
      <summary>
            Returns the last child element node of this element. null if this element has no child elements.
            </summary>
      <value>
            The last element child.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.IElementTraversal.PreviousElementSibling">
      <summary>
            Returns the previous sibling element node of this element. null if this element has no element sibling nodes that come before this one in the document tree.
            </summary>
      <value>
            The previous element sibling.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.IElementTraversal.NextElementSibling">
      <summary>
            Returns the next sibling element node of this element. null if this element has no element sibling nodes that come after this one in the document tree.
            </summary>
      <value>
            The next element sibling.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.IElementTraversal.ChildElementCount">
      <summary>
            Returns the current number of element nodes that are children of this element. 0 if this element has no child nodes that are of nodeType 1.
            </summary>
      <value>
            The child element count.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.INodeFilter">
      <summary>
            Filters are objects that know how to "filter out" nodes. If a 
            NodeIterator or TreeWalker is given a 
            NodeFilter, it applies the filter before it returns the next 
            node. If the filter says to accept the node, the traversal logic returns 
            it; otherwise, traversal looks for the next node and pretends that the 
            node that was rejected was not there.
            <para>The DOM does not provide any filters. NodeFilter is just an 
            interface that users can implement to provide their own filters. 
            </para><para>NodeFilters do not need to know how to traverse from node 
            to node, nor do they need to know anything about the data structure that 
            is being traversed. This makes it very easy to write filters, since the 
            only thing they have to know how to do is evaluate a single node. One 
            filter may be used with a number of different kinds of traversals, 
            encouraging code reuse.
            </para><para>See also the <a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113">Document object Model (DOM) Level 2 Traversal and Range Specification</a>.
            @since DOM Level 2
            </para></summary>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.INodeFilter.AcceptNode(Aspose.Html.Dom.Node)">
      <summary>
            Test whether a specified node is visible in the logical view of a 
            TreeWalker or NodeIterator. This function 
            will be called by the implementation of TreeWalker and 
            NodeIterator; it is not normally called directly from 
            user code. (Though you could do so if you wanted to use the same 
            filter to guide your own application logic.) </summary>
      <param name="n"> node to check to see if it passes the filter or not. </param>
      <returns> a constant to determine whether the node is accepted, 
              rejected, or skipped, as defined above. </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.INodeIterator">
      <summary>
            Iterators are used to step through a set of nodes, e.g. the 
            set of nodes in a NodeList, the document subtree governed by 
            a particular Node, the results of a query, or any other set 
            of nodes. The set of nodes to be iterated is determined by the 
            implementation of the NodeIterator. DOM Level 2 specifies a 
            single NodeIterator implementation for document-order 
            traversal of a document subtree. Instances of these iterators are created 
            by calling DocumentTraversal
            .createNodeIterator().
            <para>See also the <a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113">Document object Model (DOM) Level 2 Traversal and Range Specification</a>.
            @since DOM Level 2
            </para></summary>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.INodeIterator.NextNode">
      <summary>
            Returns the next node in the set and advances the position of the
            iterator in the set. After a NodeIterator is created,
            the first call to nextNode() returns the first node in
            the set.
            </summary>
      <returns>
            The next Node in the set being iterated over, or
            null if there are no more members in that set.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">INVALID_STATE_ERR: Raised if this method is called after the
            detach method was invoked.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.INodeIterator.PreviousNode">
      <summary>
            Returns the previous node in the set and moves the position of the
            NodeIterator backwards in the set.
            </summary>
      <returns>
            The previous Node in the set being iterated over,
            or null if there are no more members in that set.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">INVALID_STATE_ERR: Raised if this method is called after the
            detach method was invoked.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.INodeIterator.Detach">
      <summary>
            Detaches the NodeIterator from the set which it iterated
            over, releasing any computational resources and placing the iterator
            in the INVALID state. After detach has been invoked,
            calls to nextNode or previousNode will
            raise the exception INVALID_STATE_ERR.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.INodeIterator.ReferenceNode">
      <summary>
            The current reference node.
            </summary>
      <value>
            The reference node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.INodeIterator.PointerBeforeReferenceNode">
      <summary>
            The value of this flag determines whether the children of entity
            reference nodes are visible to the iterator. If false, they  and
            their descendants will be rejected. Note that this rejection takes
            precedence over whatToShow and the filter. Also note
            that this is currently the only situation where
            NodeIterators may reject a complete subtree rather than
            skipping individual nodes.
            To produce a view of the document that has entity references
            expanded and does not expose the entity reference node itself, use
            the whatToShow flags to hide the entity reference node
            and set expandEntityReferences to true when creating the
            iterator. To produce a view of the document that has entity reference
            nodes but no entity expansion, use the whatToShow flags
            to show the entity reference node and set
            expandEntityReferences to false.
            </summary>
      <value>
        <c>true</c> if [expand entity references]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.ITraversal">
      <summary>
            Iterators are used to step through a set of nodes, e.g. the 
            set of nodes in a NodeList, the document subtree governed by 
            a particular Node, the results of a query, or any other set 
            of nodes. The set of nodes to be iterated is determined by the 
            implementation of the NodeIterator. DOM Level 2 specifies a 
            single NodeIterator implementation for document-order 
            traversal of a document subtree. Instances of these iterators are created 
            by calling DocumentTraversal
            .createNodeIterator().
            <para>See also the <a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113">Document object Model (DOM) Level 2 Traversal and Range Specification</a>.
            @since DOM Level 2
            </para></summary>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.ITraversal.Root">
      <summary>
            The root node of the NodeIterator, as specified when it
            was created.
            </summary>
      <value>
            The root.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.ITraversal.WhatToShow">
      <summary>
            This attribute determines which node types are presented via the
            iterator. The available set of constants is defined in the
            NodeFilter interface.  Nodes not accepted by
            whatToShow will be skipped, but their children may still
            be considered. Note that this skip takes precedence over the filter,
            if any.
            </summary>
      <value>
            The what to show.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.ITraversal.Filter">
      <summary>
            The NodeFilter used to screen nodes.
            </summary>
      <value>
            The filter.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.ITreeWalker">
      <summary>
            TreeWalker objects are used to navigate a document tree or 
            subtree using the view of the document defined by their 
            whatToShow flags and filter (if any). Any function which 
            performs navigation using a TreeWalker will automatically 
            support any view defined by a TreeWalker.
            <para>Omitting nodes from the logical view of a subtree can result in a 
            structure that is substantially different from the same subtree in the 
            complete, unfiltered document. Nodes that are siblings in the 
            TreeWalker view may be children of different, widely 
            separated nodes in the original view. For instance, consider a 
            NodeFilter that skips all nodes except for Text nodes and 
            the root node of a document. In the logical view that results, all text 
            nodes will be siblings and appear as direct children of the root node, no 
            matter how deeply nested the structure of the original document.
            </para><para>See also the <a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113">Document object Model (DOM) Level 2 Traversal and Range Specification</a>.
            @since DOM Level 2
            </para></summary>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.ITreeWalker.ParentNode">
      <summary>
            Moves to and returns the closest visible ancestor node of the current
            node. If the search for parentNode attempts to step
            upward from the TreeWalker's root node, or
            if it fails to find a visible ancestor node, this method retains the
            current position and returns null.
            </summary>
      <returns>
            The new parent node, or null if the current node
            has no parent  in the TreeWalker's logical view.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.ITreeWalker.FirstChild">
      <summary>
            Moves the TreeWalker to the first visible child of the
            current node, and returns the new node. If the current node has no
            visible children, returns null, and retains the current
            node.
            </summary>
      <returns>
            The new node, or null if the current node has no
            visible children  in the TreeWalker's logical view.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.ITreeWalker.LastChild">
      <summary>
            Moves the TreeWalker to the last visible child of the
            current node, and returns the new node. If the current node has no
            visible children, returns null, and retains the current
            node.
            </summary>
      <returns>
            The new node, or null if the current node has no
            children  in the TreeWalker's logical view.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.ITreeWalker.PreviousSibling">
      <summary>
            Moves the TreeWalker to the previous sibling of the
            current node, and returns the new node. If the current node has no
            visible previous sibling, returns null, and retains the
            current node.
            </summary>
      <returns>
            The new node, or null if the current node has no
            previous sibling.  in the TreeWalker's logical view.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.ITreeWalker.NextSibling">
      <summary>
            Moves the TreeWalker to the next sibling of the current
            node, and returns the new node. If the current node has no visible
            next sibling, returns null, and retains the current node.
            </summary>
      <returns>
            The new node, or null if the current node has no
            next sibling.  in the TreeWalker's logical view.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.ITreeWalker.PreviousNode">
      <summary>
            Moves the TreeWalker to the previous visible node in
            document order relative to the current node, and returns the new
            node. If the current node has no previous node,  or if the search for
            previousNode attempts to step upward from the
            TreeWalker's root node,  returns
            null, and retains the current node.
            </summary>
      <returns>
            The new node, or null if the current node has no
            previous node  in the TreeWalker's logical view.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.ITreeWalker.NextNode">
      <summary>
            Moves the TreeWalker to the next visible node in document
            order relative to the current node, and returns the new node. If the
            current node has no next node, or if the search for nextNode attempts
            to step upward from the TreeWalker's root
            node, returns null, and retains the current node.
            </summary>
      <returns>
            The new node, or null if the current node has no
            next node  in the TreeWalker's logical view.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.ITreeWalker.CurrentNode">
      <summary>
            The node at which the TreeWalker is currently positioned.
            Alterations to the DOM tree may cause the current node to no longer
            be accepted by the TreeWalker's associated filter.
            currentNode may also be explicitly set to any node,
            whether or not it is within the subtree specified by the
            root node or would be accepted by the filter and
            whatToShow flags. Further traversal occurs relative to
            currentNode even if it is not part of the current view,
            by applying the filters in the requested direction; if no traversal
            is possible, currentNode is not changed.
            </summary>
      <value>
            The current node.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if an attempt is made to set
            currentNode to null.</exception>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Dom.Traversal</b> namespace contains methods that
            create iterators and tree-walkers to navigate between elements and
            traverse a node and its children in document order.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.NamespaceGroupDoc">
      <summary>
            This namespace group contains namespaces which are responsible for
            iterators and tree-walkers creation to navigate between elements and
            traverse a node and its children in document order.
            It also contains namespace for tree navigation filtering.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.Filters.NamespaceDoc">
      <summary>
            The namespace represented by node filtering functionality.
            Filters are objects that know how to "filter out" nodes.
            If a node iterator or tree walker is given a node filter,
            it applies the filter before it returns the next node.
            If the filter says to accept the node, the traversal logic
            returns it; otherwise, traversal looks for the next node and
            pretends that the node that was rejected was not there.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.Filters.NodeFilter">
      <summary>
            Filters are objects that know how to "filter out" nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.FILTER_ACCEPT">
      <summary>
            Accept the node. Navigation methods defined for 
            NodeIterator or TreeWalker will return this 
            node.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.FILTER_REJECT">
      <summary>
            Reject the node. Navigation methods defined for 
            NodeIterator or TreeWalker will not return 
            this node. For TreeWalker, the children of this node 
            will also be rejected. NodeIterators treat this as a 
            synonym for FILTER_SKIP.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.FILTER_SKIP">
      <summary>
            Skip this single node. Navigation methods defined for 
            NodeIterator or TreeWalker will not return 
            this node. For both NodeIterator and 
            TreeWalker, the children of this node will still be 
            considered. 
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_ALL">
      <summary>
            Show all Nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_ELEMENT">
      <summary>
            Show Element nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_ATTRIBUTE">
      <summary>
            Show Attr nodes. This is meaningful only when creating an 
            iterator or tree-walker with an attribute node as its 
            root; in this case, it means that the attribute node 
            will appear in the first position of the iteration or traversal. 
            Since attributes are never children of other nodes, they do not 
            appear when traversing over the document tree.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_TEXT">
      <summary>
            Show Text nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_CDATA_SECTION">
      <summary>
            Show CDATASection nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_ENTITY_REFERENCE">
      <summary>
            Show EntityReference nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_ENTITY">
      <summary>
            Show Entity nodes. This is meaningful only when creating 
            an iterator or tree-walker with an Entity node as its 
            root; in this case, it means that the Entity
             node will appear in the first position of the traversal. Since 
            entities are not part of the document tree, they do not appear when 
            traversing over the document tree.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_PROCESSING_INSTRUCTION">
      <summary>
            Show ProcessingInstruction nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_COMMENT">
      <summary>
            Show Comment nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_DOCUMENT">
      <summary>
            Show Document nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_DOCUMENT_TYPE">
      <summary>
            Show DocumentType nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_DOCUMENT_FRAGMENT">
      <summary>
            Show DocumentFragment nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_NOTATION">
      <summary>
            Show Notation nodes. This is meaningful only when creating 
            an iterator or tree-walker with a Notation node as its 
            root; in this case, it means that the 
            Notation node will appear in the first position of the 
            traversal. Since notations are not part of the document tree, they do 
            not appear when traversing over the document tree.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.Filters.NodeFilter.AcceptNode(Aspose.Html.Dom.Node)">
      <summary>
            Test whether a specified node is visible in the logical view of a
            TreeWalker or NodeIterator. This function
            will be called by the implementation of TreeWalker and
            NodeIterator; it is not normally called directly from
            user code. (Though you could do so if you wanted to use the same
            filter to guide your own application logic.)
            </summary>
      <param name="n">node to check to see if it passes the filter or not.</param>
      <returns>
            a constant to determine whether the node is accepted,
            rejected, or skipped, as defined above.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.Filters.NodeFilter.GetPlatformType">
      <summary>
            This method is used to retrieve ECMAScript object <see cref="T:System.Type" />.
            </summary>
      <returns>
            The ECMAScript object <see cref="T:System.Type" />.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Mutations.MutationCallback">
      <summary>
            Represents the method that will handle a mutation events.
            </summary>
      <param name="mutations">The list of mutation records.</param>
      <param name="observer">The mutation observer.</param>
    </member>
    <member name="T:Aspose.Html.Dom.Mutations.MutationObserver">
      <summary>
            A <see cref="T:Aspose.Html.Dom.Mutations.MutationObserver" /> object can be used to observe mutations to the tree of <see cref="T:Aspose.Html.Dom.Node" />.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserver.#ctor(Aspose.Html.Dom.Mutations.MutationCallback)">
      <summary>
            Constructs a MutationObserver object and sets its <see cref="T:Aspose.Html.Dom.Mutations.MutationCallback" /> to callback. 
            The callback is invoked with a list of MutationRecord objects as first argument and the constructed MutationObserver object as second argument. It is invoked after nodes registered with the <see cref="!:Observe(Node, IMutationObserverInit)" /> method, are mutated.
            </summary>
      <param name="callback">The callback.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserver.Observe(Aspose.Html.Dom.Node)">
      <summary>
            Instructs the user agent to observe a given target (a node) and report any mutations based on the criteria given by options (an object).
            The options argument allows for setting mutation observation options via object members.
            </summary>
      <param name="target">The target for observe.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserver.Observe(Aspose.Html.Dom.Node,Aspose.Html.Dom.Mutations.MutationObserverInit)">
      <summary>
            Instructs the user agent to observe a given target (a node) and report any mutations based on the criteria given by options (an object).
            The options argument allows for setting mutation observation options via object members.
            </summary>
      <param name="target">The target for observe.</param>
      <param name="options">The observer options.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserver.Disconnect">
      <summary>
            Stops observer from observing any mutations. Until the observe() method is used again, observer’s callback will not be invoked.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserver.TakeRecords">
      <summary>
            The method returns a copy of the record queue and then empty the record queue.
            </summary>
      <returns>The copy of the record queue.</returns>
    </member>
    <member name="T:Aspose.Html.Dom.Mutations.MutationObserverInit">
      <summary>
            This class represents an options collection which is used to configure <see cref="T:Aspose.Html.Dom.Mutations.MutationObserver" />.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserverInit.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserverInit.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> elements.
            </summary>
      <returns>
            An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> elements.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserverInit.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>
            Adds an element to the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> collection.
            </summary>
      <param name="item">The item to add.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserverInit.Clear">
      <summary>
            Removes all the elements from the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> collection.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserverInit.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>
            Copies the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> elements to an existing one-dimensional array, starting at the specified array index.
            </summary>
      <param name="array">Destination array.</param>
      <param name="arrayIndex">The array index to start at.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserverInit.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>
            Determines whether the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> contain the specified key/value pair.
            </summary>
      <param name="item">The item to check.</param>
      <returns>True if the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> contain the specified key/value pair; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserverInit.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>
            Removes the specified key/value pair from the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> collection.
            </summary>
      <param name="item">The item to remove.</param>
      <returns>True if successfully removed; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserverInit.ContainsKey(System.String)">
      <summary>
            Determines whether the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> collection contain a specified key.
            </summary>
      <param name="key">The key to check.</param>
      <returns>True if the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> contain a specified key; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserverInit.Add(System.String,System.Object)">
      <summary>
            Adds the specified key and value to the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> collection.
            </summary>
      <param name="key">The key of the element to add.</param>
      <param name="value">The value of the element to add.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserverInit.Remove(System.String)">
      <summary>
            Removes the value associated with the specified key from the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> collection.
            </summary>
      <param name="key">The key of the element to remove.</param>
      <returns>True if the element is successfully found and removed; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Mutations.MutationObserverInit.TryGetValue(System.String,System.Object@)">
      <summary>
            Gets the value associated with the specified key.
            </summary>
      <param name="key">The key of the value to get.</param>
      <param name="value">When this method returns, contains the value associated with the specified key, if the key is found; otherwise null.</param>
      <returns>True if the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> contain a specified key; otherwise, false.</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationObserverInit.ChildList">
      <summary>
            Set to true if mutations to target’s children are to be observed.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationObserverInit.Attributes">
      <summary>
            Set to true if mutations to target’s attributes are to be observed. Can be omitted if attributeOldValue and/or attributeFilter is specified. 
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationObserverInit.CharacterData">
      <summary>
            Set to true if mutations to target’s data are to be observed. Can be omitted if characterDataOldValue is specified
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationObserverInit.Subtree">
      <summary>
            Set to true if mutations to not just target, but also target’s descendants are to be observed
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationObserverInit.AttributeOldValue">
      <summary>
            Set to true if attributes is true or omitted and target’s attribute value before the mutation needs to be recorded. 
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationObserverInit.CharacterDataOldValue">
      <summary>
            Set to true if characterData is set to true or omitted and target’s data before the mutation needs to be recorded. 
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationObserverInit.AttributeFilter">
      <summary>
            Set to a list of attribute local names (without namespace) if not all attribute mutations need to be observed and attributes is true or omitted. 
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationObserverInit.Count">
      <summary>
            Gets the number of key/value pairs contained in the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationObserverInit.IsReadOnly">
      <summary>
            Determines whether the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> collection is mutable.
            </summary>
      <returns>True if the collection cannot be modified; otherwise, false.</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationObserverInit.Item(System.String)">
      <summary>
            Gets or sets the element with the specified key.
            </summary>
      <param name="key">The key of the element to get or set.</param>
      <returns>The value associated with the specified key.</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationObserverInit.Keys">
      <summary>
            Gets a collection containing the keys in the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> collection.
            </summary>
      <returns>A collection containing the keys.</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationObserverInit.Values">
      <summary>
            Gets a collection containing the values in the <see cref="T:Aspose.Html.Dom.Mutations.MutationObserverInit" /> collection.
            </summary>
      <returns>A collection containing the values.</returns>
    </member>
    <member name="T:Aspose.Html.Dom.Mutations.MutationRecord">
      <summary>
            A MutationRecord represents an individual DOM mutation. It is the object that is passed to <see cref="T:Aspose.Html.Dom.Mutations.MutationObserver" />'s <see cref="T:Aspose.Html.Dom.Mutations.MutationCallback" />.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationRecord.Type">
      <summary>
            Returns "attributes" if it was an attribute mutation, "characterData" if it was a mutation to a CharacterData node and "childList" if it was a mutation to the tree of nodes.
            </summary>
      <value>
            The type.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationRecord.Target">
      <summary>
            Returns the node the mutation affected, depending on the type. For "attributes", it is the element whose attribute changed. For "characterData", it is the CharacterData node. For "childList", it is the node whose children changed.
            </summary>
      <value>
            The target.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationRecord.AddedNodes">
      <summary>
            Return the nodes added.
            </summary>
      <value>
            The added nodes.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationRecord.RemovedNodes">
      <summary>
            Return the nodes removed. 
            </summary>
      <value>
            The removed nodes.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationRecord.PreviousSibling">
      <summary>
            Returns the previous sibling of the added or removed nodes, or null.
            </summary>
      <value>
            The previous sibling.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationRecord.NextSibling">
      <summary>
            Return the next sibling of the added or removed nodes, or null.
            </summary>
      <value>
            The next sibling.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationRecord.AttributeName">
      <summary>
            Returns the local name of the changed attribute, and null otherwise.
            </summary>
      <value>
            The name of the attribute.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationRecord.AttributeNamespace">
      <summary>
            Returns the namespace of the changed attribute, and null otherwise.
            </summary>
      <value>
            The attribute namespace.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Mutations.MutationRecord.OldValue">
      <summary>
            The return value depends on type. For "attributes", it is the value of the changed attribute before the change.
            For "characterData", it is the data of the changed node before the change.
            For "childList", it is null.
            </summary>
      <value>
            The old value.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Mutations.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Dom.Mutations</b> provides opportunity to observe
            DOM mutations and getting specific callback information.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Events.CustomEvent">
      <summary>
            Events using the CustomEvent interface can be used to carry custom data.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Events.CustomEvent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.CustomEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.CustomEvent.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.CustomEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
      <param name="eventInitDict">The event initialize dictionary.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.CustomEvent.InitCustomEvent(System.String,System.Boolean,System.Boolean,System.Object)">
      <summary>
            /// The <see cref="M:Aspose.Html.Dom.Events.Event.InitEvent(System.String,System.Boolean,System.Boolean)" /> method is used to initialize the value of an <see cref="T:Aspose.Html.Dom.Events.Event" /> created through the <see cref="T:Aspose.Html.Dom.Events.IDocumentEvent" /> interface.
            </summary>
      <param name="type">The event type.</param>
      <param name="bubbles">if set to <c>true</c> [bubbles].</param>
      <param name="cancelable">if set to <c>true</c> [cancelable].</param>
      <param name="detail">The custom data.</param>
      <remarks>
            This method may only be called before the Event has been dispatched via the <see cref="M:Aspose.Html.Dom.Events.IEventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> method,
            though it may be called multiple times during that phase if necessary.
            If called multiple times the final invocation takes precedence.
            If called from a subclass of Event interface only the values specified in the initEvent method are modified, all other attributes are left unchanged.
            </remarks>
    </member>
    <member name="P:Aspose.Html.Dom.Events.CustomEvent.Detail">
      <summary>
            Gets the custom data.
            </summary>
      <value>
            The detail.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Events.DocumentLoadErrorEvent">
      <summary>
            The <see cref="T:Aspose.Html.Dom.Events.DocumentLoadErrorEvent" /> occurres when the requested resource is not available.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Events.DOMEventHandler">
      <summary>
            Represents the callback for event handling.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="T:Aspose.Html.Dom.Events.ErrorEvent">
      <summary>
            The <see cref="T:Aspose.Html.Dom.Events.ErrorEvent" /> provides contextual information about an errors that occurred during runtime.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Events.ErrorEvent.#ctor(System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.ErrorEvent" /> class.
            </summary>
      <param name="exception">The exception.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.ErrorEvent.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.ErrorEvent" /> class.
            </summary>
      <param name="eventInitDict">The event initialization object.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Events.ErrorEvent.Message">
      <summary>
            The message attribute must return the value it was initialized to. When the object is created, this attribute must be initialized to the empty string. It represents the error message.
            </summary>
      <value>
            The message.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.ErrorEvent.FileName">
      <summary>
            The filename attribute must return the value it was initialized to. When the object is created, this attribute must be initialized to the empty string. It represents the absolute URL of the script in which the error originally occurred.
            </summary>
      <value>
            The filename.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.ErrorEvent.LineNo">
      <summary>
            The lineno attribute must return the value it was initialized to. When the object is created, this attribute must be initialized to zero. It represents the line number where the error occurred in the script.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.ErrorEvent.ColNo">
      <summary>
            The colno attribute must return the value it was initialized to. When the object is created, this attribute must be initialized to zero. It represents the column number where the error occurred in the script.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.ErrorEvent.Error">
      <summary>
            The error attribute must return the value it was initialized to. When the object is created, this attribute must be initialized to null. Where appropriate, it is set to the object representing the error (e.g. the exception object in the case of an uncaught DOM exception).
            </summary>
      <value>
            The error.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Events.Event">
      <summary>
            The <see cref="T:Aspose.Html.Dom.Events.Event" /> is used to provide contextual information about an event to the handler processing the event.
            </summary>
      <remarks>
            An object which implements the <see cref="T:Aspose.Html.Dom.Events.Event" /> is generally passed as the first parameter to an event handler.
            More specific context information is passed to event handlers by deriving additional interfaces from <see cref="T:Aspose.Html.Dom.Events.Event" />  
            which contain information directly relating to the type of event they accompany.
            These derived interfaces are also implemented by the object passed to the event listener.
            </remarks>
    </member>
    <member name="F:Aspose.Html.Dom.Events.Event.NonePhase">
      <summary>
            Events not currently dispatched are in this phase.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Events.Event.CapturingPhase">
      <summary>
            The event is currently being evaluated at the target <see cref="T:Aspose.Html.Dom.Events.IEventTarget" />.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Events.Event.AtTargetPhase">
      <summary>
            The current event phase is the capturing phase.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Events.Event.BubblingPhase">
      <summary>
            The current event phase is the bubbling phase.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Events.Event.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.Event" /> class.
            </summary>
      <param name="type">The event type.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.Event.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.Event" /> class.
            </summary>
      <param name="type">The event type.</param>
      <param name="eventInitDict">The event initialize dictionary.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.Event.InitEvent(System.String,System.Boolean,System.Boolean)">
      <summary>
            The <see cref="M:Aspose.Html.Dom.Events.Event.InitEvent(System.String,System.Boolean,System.Boolean)" /> method is used to initialize the value of an <see cref="T:Aspose.Html.Dom.Events.Event" /> created through the
            <see cref="T:Aspose.Html.Dom.Events.IDocumentEvent" /> interface.
            </summary>
      <param name="type">The event type.</param>
      <param name="bubbles">if set to <c>true</c> [bubbles].</param>
      <param name="cancelable">if set to <c>true</c> [cancelable].</param>
      <remarks>
            This method may only be called before the Event has been dispatched via the <see cref="M:Aspose.Html.Dom.Events.IEventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> method,
            though it may be called multiple times during that phase if necessary.
            If called multiple times the final invocation takes precedence.
            If called from a subclass of Event interface only the values specified in the initEvent method are modified, all other attributes are left unchanged.
            </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.Events.Event.PreventDefault">
      <summary>
                If an event is cancelable, the <see cref="M:Aspose.Html.Dom.Events.Event.PreventDefault" /> method is used to signify that the event is to be canceled,
                meaning any default action normally taken by the implementation as a result of the event will not occur.
            </summary>
      <remarks>
                If, during any stage of event flow, the <see cref="M:Aspose.Html.Dom.Events.Event.PreventDefault" /> method is called the event is canceled.
                Any default action associated with the event will not occur.
                Calling this method for a non-cancelable event has no effect.
                Once <see cref="M:Aspose.Html.Dom.Events.Event.PreventDefault" /> has been called it will remain in effect throughout the remainder of the event's propagation.
                This method may be used during any stage of event flow.
            </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.Events.Event.StopPropagation">
      <summary>
                The <see cref="M:Aspose.Html.Dom.Events.Event.StopPropagation" /> method is used prevent further propagation of an event during event flow.
            </summary>
      <remarks>
                If this method is called by any <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> the event will cease propagating through the tree.
                The event will complete dispatch to all listeners on the current <see cref="T:Aspose.Html.Dom.Events.IEventTarget" /> before event flow stops.
                This method may be used during any stage of event flow.
            </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.Events.Event.StopImmediatePropagation">
      <summary>
            Invoking this method prevents event from reaching any event listeners registered after the current one and when dispatched in a tree also prevents event from reaching any other objects.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.Bubbles">
      <summary>
                Used to indicate whether or not an event is a bubbling event. If the event can bubble the value is true, else the value is false.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.Cancelable">
      <summary>
                Used to indicate whether or not an event can have its default action prevented. If the default action can be prevented the value is true, else the value is false.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.CurrentTarget">
      <summary>
                Used to indicate the <see cref="T:Aspose.Html.Dom.Events.IEventTarget" /> whose <see cref="T:Aspose.Html.Dom.Events.IEventListener" />s are currently being processed.
                This is particularly useful during capturing and bubbling.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.EventPhase">
      <summary>
                Used to indicate which phase of event flow is currently being evaluated.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.Target">
      <summary>
                Used to indicate the <see cref="T:Aspose.Html.Dom.Events.IEventTarget" /> to which the event was originally dispatched.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.TimeStamp">
      <summary>
                Used to specify the time (in milliseconds relative to the epoch) at which the event was created.
                Due to the fact that some systems may not provide this information the value of timeStamp may be not available for all events.
                When not available, a value of 0 will be returned.
                Examples of epoch time are the time of the system start or 0:0:0 UTC 1st January 1970.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.Type">
      <summary>
                The name of the event (case-insensitive). The name must be an XML name.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.DefaultPrevented">
      <summary>
            Returns true if preventDefault() was invoked while the cancelable attribute value is true, and false otherwise.
            </summary>
      <value>
        <c>true</c> if [default prevented]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.IsTrusted">
      <summary>
            The isTrusted attribute must return the value it was initialized to. When an event is created the attribute must be initialized to false.
            </summary>
      <value>
        <c>true</c> if this instance is trusted; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Events.FocusEvent">
      <summary>
            The FocusEvent interface provides specific contextual information associated with Focus events.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Events.FocusEvent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.FocusEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.FocusEvent.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.FocusEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
      <param name="eventInitDict">The event initialize dictionary.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Events.FocusEvent.RelatedTarget">
      <summary>
            Used to identify a secondary EventTarget related to a Focus event, depending on the type of event.
            </summary>
      <value>
            The related target.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Events.IDocumentEvent">
      <summary>
                The <see cref="T:Aspose.Html.Dom.Events.IDocumentEvent" /> interface provides a mechanism by which the user can create an <see cref="T:Aspose.Html.Dom.Events.Event" /> of a type supported by the implementation.
            </summary>
      <remarks>
                It is expected that the <see cref="T:Aspose.Html.Dom.Events.IDocumentEvent" /> interface will be implemented on the same object which implements the
                <see cref="T:Aspose.Html.Dom.Document" />
                interface in an implementation which supports the Event model.
            </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.Events.IDocumentEvent.CreateEvent(System.String)">
      <summary>
                Creates an <see cref="T:Aspose.Html.Dom.Events.Event" /> of a type supported by the implementation.
            </summary>
      <param name="eventType">
                The eventType parameter specifies the type of <see cref="T:Aspose.Html.Dom.Events.Event" /> interface to be created.
                <remarks>
                    If the <see cref="T:Aspose.Html.Dom.Events.Event" /> interface specified is supported by the implementation this method will return a new
                    <see cref="T:Aspose.Html.Dom.Events.Event" /> of the interface type requested.
                    If the <see cref="T:Aspose.Html.Dom.Events.Event" /> is to be dispatched via the <see cref="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> method the appropriate
                    <see cref="M:Aspose.Html.Dom.Events.Event.InitEvent(System.String,System.Boolean,System.Boolean)" /> method must be called after creation in order to initialize the <see cref="T:Aspose.Html.Dom.Events.Event" />'s values.
                    <para>
                        The <see cref="M:Aspose.Html.Dom.Events.IDocumentEvent.CreateEvent(System.String)" /> method is used in creating <see cref="T:Aspose.Html.Dom.Events.Event" />s when it is either inconvenient
                        or unnecessary for the user to create an <see cref="T:Aspose.Html.Dom.Events.Event" /> themselves.
                        In cases where the implementation provided <see cref="T:Aspose.Html.Dom.Events.Event" /> is insufficient, users may supply their own
                        <see cref="T:Aspose.Html.Dom.Events.Event" /> implementations for use with the <see cref="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> method.
                    </para></remarks></param>
      <returns>
                The newly created <see cref="T:Aspose.Html.Dom.Events.Event" /></returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
                NOT_SUPPORTED_ERR: Raised if the implementation does not support the type of <see cref="T:Aspose.Html.Dom.Events.Event" /> interface requested
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Events.IEventListener">
      <summary>
                The <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> interface is the primary method for handling events.
                Users implement the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> interface and register their listener on an <see cref="T:Aspose.Html.Dom.EventTarget" /> using the <see cref="M:Aspose.Html.Dom.EventTarget.AddEventListener(System.String,Aspose.Html.Dom.Events.DOMEventHandler,System.Boolean)" /> method.
                The users should also remove their <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> from its <see cref="T:Aspose.Html.Dom.EventTarget" /> after they have completed using the listener.
            </summary>
      <remarks>
                When a Node is copied using the cloneNode method the Event Listeners attached to the source Node are not attached to the copied Node.
                If the user wishes the same Event Listeners to be added to the newly created copy the user must add them manually.
            </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.Events.IEventListener.HandleEvent(Aspose.Html.Dom.Events.Event)">
      <summary>
                This method is called whenever an event occurs of the type for which the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> interface was registered.
            </summary>
      <param name="event">
                The <see cref="T:Aspose.Html.Dom.Events.Event" /> contains contextual information about the event.
                It also contains the <see cref="M:Aspose.Html.Dom.Events.Event.StopPropagation" /> and <see cref="M:Aspose.Html.Dom.Events.Event.PreventDefault" /> methods which are used in determining the event's flow and default action.
            </param>
    </member>
    <member name="T:Aspose.Html.Dom.Events.IEventTarget">
      <summary>
            The <see cref="T:Aspose.Html.Dom.EventTarget" /> interface is implemented by all Nodes in an implementation which supports the DOM Event Model.
            Therefore, this interface can be obtained by using binding-specific casting methods on an instance of the Node interface.
            The interface allows registration and removal of Event Listeners on an <see cref="T:Aspose.Html.Dom.EventTarget" /> and dispatch of events to that <see cref="T:Aspose.Html.Dom.Events.IEventTarget" />.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Events.IEventTarget.AddEventListener(System.String,Aspose.Html.Dom.Events.IEventListener)">
      <summary>
            This method allows the registration of event listeners on the event target.
            </summary>
      <param name="type">The event type for which the user is registering</param>
      <param name="listener">Takes an interface implemented by the user which contains the methods to be called when the event occurs.</param>
      <remarks>
        <para>
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is added to an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered
            by the current actions but may be triggered during a later stage of event flow, such as the bubbling phase.
            </para>
        <para>
            If multiple identical Event Listeners are registered on the same <see cref="T:Aspose.Html.Dom.EventTarget" /> with the same parameters the duplicate instances are discarded.
            They do not cause the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be called twice and since they are discarded they do not need to be removed with the
            <see cref="M:Aspose.Html.Dom.Events.IEventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.IEventListener)" />
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.Events.IEventTarget.AddEventListener(System.String,Aspose.Html.Dom.Events.IEventListener,System.Boolean)">
      <summary>
            This method allows the registration of event listeners on the event target.
            </summary>
      <param name="type">The event type for which the user is registering</param>
      <param name="listener">Takes an interface implemented by the user which contains the methods to be called when the event occurs.</param>
      <param name="useCapture">If true, useCapture indicates that the user wishes to initiate capture.
            After initiating capture, all events of the specified type will be dispatched to the registered
            <see cref="T:Aspose.Html.Dom.Events.IEventListener" />
            before being dispatched to any Event Targets beneath them in the tree.
            Events which are bubbling upward through the tree will not trigger an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> designated to use capture.</param>
      <remarks>
        <para>
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is added to an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered
            by the current actions but may be triggered during a later stage of event flow, such as the bubbling phase.
            </para>
        <para>
            If multiple identical Event Listeners are registered on the same <see cref="T:Aspose.Html.Dom.EventTarget" /> with the same parameters the duplicate instances are discarded.
            They do not cause the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be called twice and since they are discarded they do not need to be removed with the
            <see cref="M:Aspose.Html.Dom.Events.IEventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.IEventListener)" />
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.Events.IEventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.IEventListener)">
      <summary>
            This method allows the removal of event listeners from the event target.
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is removed from an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered by the current actions.
            Event Listeners can never be invoked after being removed.
            </summary>
      <param name="type">Specifies the event type of the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> being removed.</param>
      <param name="listener">The <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> parameter indicates the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be removed.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.IEventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.IEventListener,System.Boolean)">
      <summary>
            This method allows the removal of event listeners from the event target.
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is removed from an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered by the current actions.
            Event Listeners can never be invoked after being removed.
            </summary>
      <param name="type">Specifies the event type of the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> being removed.</param>
      <param name="listener">The <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> parameter indicates the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be removed.</param>
      <param name="useCapture">Specifies whether the EventListener being removed was registered as a capturing listener or not.
            If a listener was registered twice, one with capture and one without, each must be removed separately.
            Removal of a capturing listener does not affect a non-capturing version of the same listener, and vice versa.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.IEventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)">
      <summary>
            This method allows the dispatch of events into the implementations event model.
            </summary>
      <param name="event">Specifies the event type, behavior, and contextual information to be used in processing the event.</param>
      <returns>
            The return value of <see cref="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> indicates whether any of the listeners which handled the event called <see cref="M:Aspose.Html.Dom.Events.Event.PreventDefault" />.
            If <see cref="M:Aspose.Html.Dom.Events.Event.PreventDefault" /> was called the value is false, else the value is true.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
      </exception>
      <remarks>
            Events dispatched in this manner will have the same capturing and bubbling behavior as events dispatched directly by the implementation.
            The target of the event is the <see cref="T:Aspose.Html.Dom.EventTarget" /> on which <see cref="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> is called.
            </remarks>
    </member>
    <member name="T:Aspose.Html.Dom.Events.InputEvent">
      <summary>
            Input events are sent as notifications whenever the DOM is being updated.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Events.InputEvent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.InputEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.InputEvent.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.InputEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
      <param name="eventInitDict">The event initialize dictionary.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Events.InputEvent.Data">
      <summary>
            The data holds the value of the characters generated by an input method. This MAY be a single Unicode character or a non-empty sequence of Unicode characters [Unicode]. Characters SHOULD be normalized as defined by the Unicode normalization form NFC, defined in [UAX15]. This attribute MAY contain the empty string.
            </summary>
      <value>
            The event data.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.InputEvent.IsComposing">
      <summary>
            true if the input event occurs as part of a composition session, i.e., after a compositionstart event and before the corresponding compositionend event. The un-initialized value of this attribute MUST be false.
            </summary>
      <value>
        <c>true</c> if this instance is composing; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Events.KeyboardEvent">
      <summary>
            The KeyboardEvent interface provides specific contextual information associated with keyboard devices. Each keyboard event references a key using a value. Keyboard events are commonly directed at the element that has the focus.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Events.KeyboardEvent.DOM_KEY_LOCATION_STANDARD">
      <summary>
            The key activation MUST NOT be distinguished as the left or right version of the key, and (other than the NumLock key) did not originate from the numeric keypad (or did not originate with a virtual key corresponding to the numeric keypad).
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Events.KeyboardEvent.DOM_KEY_LOCATION_LEFT">
      <summary>
            The key activated originated from the left key location (when there is more than one possible location for this key).
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Events.KeyboardEvent.DOM_KEY_LOCATION_RIGHT">
      <summary>
            The key activation originated from the right key location (when there is more than one possible location for this key).
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Events.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD">
      <summary>
            The key activation originated on the numeric keypad or with a virtual key corresponding to the numeric keypad (when there is more than one possible location for this key). Note that the NumLock key should always be encoded with a location of DOM_KEY_LOCATION_STANDARD.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Events.KeyboardEvent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.KeyboardEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.KeyboardEvent.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.KeyboardEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
      <param name="eventInitDict">The event initialize dictionary.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Events.KeyboardEvent.Key">
      <summary>
            The key holds the key value of the key pressed. If the value is has a printed representation, it MUST be a non-empty Unicode character string, conforming to the algorithm for determining the key value defined in this specification. If the value is a control key which has no printed representation, it MUST be one of the key values defined in the key values set, as determined by the algorithm for determining the key value. Implementations that are unable to identify a key MUST use the key value Unidentified.
            </summary>
      <value>
            The key value.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.KeyboardEvent.Code">
      <summary>
            The code holds a string that identifies the physical key being pressed. The value is not affected by the current keyboard layout or modifier state, so a particular key will always return the same value.
            </summary>
      <value>
            The key code.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.KeyboardEvent.Location">
      <summary>
            The location attribute contains an indication of the logical location of the key on the device.
            </summary>
      <value>
            The location.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.KeyboardEvent.CtrlKey">
      <summary>
            true if the Control (control) key modifier	was active.
            The un-initialized value of this attribute MUST be false.
            </summary>
      <value>
        <c>true</c> if Control; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.KeyboardEvent.ShiftKey">
      <summary>
            true if the shift (Shift) key modifier was	active.
            </summary>
      <value>
        <c>true</c> if Shift; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.KeyboardEvent.AltKey">
      <summary>
            true if the Alt (alternative) (or "Option") key modifier was active. The un-initialized value of this attribute MUST be false.
            </summary>
      <value>
        <c>true</c> if Alt; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.KeyboardEvent.MetaKey">
      <summary>
            true if the meta (Meta) key modifier was active.
            </summary>
      <value>
        <c>true</c> if Meta; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.KeyboardEvent.Repeat">
      <summary>
            true if the key has been pressed in a sustained manner. Holding down a key MUST result in the repeating the events keydown, beforeinput, input in this	order, at a rate determined by the system configuration. For mobile devices which have long-key-press behavior, the first key event with a repeat attribute value of true MUST serve as an indication of a long-key-press. The length of time that the key MUST be pressed in order to begin repeating is configuration-dependent.
            </summary>
      <value>
        <c>true</c> if repeat; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.KeyboardEvent.IsComposing">
      <summary>
            true if the key event occurs as part of a composition session, i.e., after a compositionstart event	and before the corresponding compositionend event. The un-initialized value of this attribute MUST be false.
            </summary>
      <value>
        <c>true</c> if this instance is composing; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Events.MouseEvent">
      <summary>
            The MouseEvent interface provides specific contextual information associated with Mouse events.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Events.MouseEvent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.MouseEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.MouseEvent.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.MouseEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
      <param name="eventInitDict">The event initialize dictionary.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Events.MouseEvent.ScreenX">
      <summary>
            The horizontal coordinate at which the event occurred relative to the origin of the screen coordinate system.
            </summary>
      <value>
            The screen x.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.MouseEvent.ScreenY">
      <summary>
            The vertical coordinate at which the event occurred relative to the origin of the screen coordinate system.
            </summary>
      <value>
            The screen y.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.MouseEvent.ClientX">
      <summary>
            The horizontal coordinate at which the event occurred relative to the viewport associated with the event.
            </summary>
      <value>
            The client x.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.MouseEvent.ClientY">
      <summary>
            The vertical coordinate at which the event occurred relative to the viewport associated with the event.
            </summary>
      <value>
            The client y.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.MouseEvent.CtrlKey">
      <summary>
            Refer to the ctrlKey attribute.
            </summary>
      <value>
        <c>true</c> if [control key]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.MouseEvent.ShiftKey">
      <summary>
            Refer to the shiftKey attribute.
            </summary>
      <value>
        <c>true</c> if [shift key]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.MouseEvent.AltKey">
      <summary>
            Refer to the altKey attribute.
            </summary>
      <value>
        <c>true</c> if [alt key]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.MouseEvent.MetaKey">
      <summary>
            Refer to the metaKey attribute.
            </summary>
      <value>
        <c>true</c> if [meta key]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.MouseEvent.Button">
      <summary>
            During mouse events caused by the depression or release of a mouse button, button MUST be used to indicate which pointer device button changed state.
            </summary>
      <value>
            The button.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.MouseEvent.Buttons">
      <summary>
            During any mouse events, buttons MUST be used to indicate which combination of mouse buttons are currently being pressed, expressed as a bitmask.
            </summary>
      <value>
            The buttons.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.MouseEvent.RelatedTarget">
      <summary>
            Used to identify a secondary EventTarget related to a UI event, depending on the type of event.
            </summary>
      <value>
            The related target.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Events.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Dom.Events</b> namespace provides objects for
            any events related DOM updating. It includes subscription to
            specific contextual information observation
            associated with event as well as custom events construction.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Events.UIEvent">
      <summary>
            The UIEvent interface provides specific contextual information associated with User Interface events.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Events.UIEvent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.UIEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.UIEvent.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.UIEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
      <param name="eventInitDict">The event initialize dictionary.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Events.UIEvent.View">
      <summary>
            The view attribute identifies the Window from which the event was generated.
            The un-initialized value of this attribute MUST be null.
            </summary>
      <value>
            The window instance.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.UIEvent.Detail">
      <summary>
            Specifies some detail information about the Event, depending on the type of event.
            </summary>
      <value>
            The detail data.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Events.WheelEvent">
      <summary>
            The WheelEvent interface provides specific contextual information associated with wheel events. To create an instance of the WheelEvent interface, use the WheelEvent constructor, passing an optional WheelEventInit dictionary.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Events.WheelEvent.DOM_DELTA_PIXEL">
      <summary>
            The units of measurement for the delta MUST be pixels. This is the most typical case in most operating system and implementation configurations.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Events.WheelEvent.DOM_DELTA_LINE">
      <summary>
            The units of measurement for the delta MUST be individual lines of text. This is the case for many form controls.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Events.WheelEvent.DOM_DELTA_PAGE">
      <summary>
            The units of measurement for the delta MUST be pages, either defined as a single screen or as a demarcated page.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Events.WheelEvent.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.WheelEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.WheelEvent.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.WheelEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
      <param name="eventInitDict">The event initialize dictionary.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Events.WheelEvent.DeltaX">
      <summary>
            In user agents where the default action of the wheel event is to scroll, the value MUST be the measurement along the x-axis (in pixels, lines, or pages) to be scrolled in the case where the event is not cancelled. Otherwise, this is an implementation-specific measurement (in pixels, lines, or pages) of the movement of a wheel device around the x-axis.
            </summary>
      <value>
            The deltaX attribute.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.WheelEvent.DeltaY">
      <summary>
            In user agents where the default action of the wheel event is to scroll, the value MUST be the measurement along the y-axis (in pixels, lines, or pages) to be scrolled in the case where the event is not cancelled. Otherwise, this is an implementation-specific measurement (in pixels, lines, or pages) of the movement of a wheel device around the y-axis.
            </summary>
      <value>
            The deltaY attribute.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.WheelEvent.DeltaZ">
      <summary>
            In user agents where the default action of the wheel event is to scroll, the value MUST be the measurement along the z-axis (in pixels, lines, or pages) to be scrolled in the case where the event is not cancelled. Otherwise, this is an implementation-specific measurement (in pixels, lines, or pages) of the movement of a wheel device around the z-axis.
            </summary>
      <value>
            The deltaZ attribute.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.WheelEvent.DeltaMode">
      <summary>
            The deltaMode attribute contains an indication of the units of measurement for the delta values. The default value is DOM_DELTA_PIXEL (pixels).
            </summary>
      <value>
            The delta mode.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.CSSEngineMode">
      <summary>
            Specifies CSSEngine mode
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSEngineMode.Default">
      <summary>
            CSS engine will work like usual.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSEngineMode.NotStrict">
      <summary>
            CSS parser will work in not strict mode. All not documented properties will be parsed and could be accessed through <see cref="T:Aspose.Html.Dom.Css.ICSSStyleDeclaration" />.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.CSSValue">
      <summary>
            Represents a simple or a complex value. A CSSValue object only occurs in a context of a CSS property.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSValue.CSS_INHERIT">
      <summary>
            The value is inherited and the cssText contains "inherit".
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSValue.CSS_PRIMITIVE_VALUE">
      <summary>
            The value is a primitive value and an instance of the CSSPrimitiveValue interface can be obtained by using binding-specific casting methods on this instance of the CSSValue interface.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSValue.CSS_VALUE_LIST">
      <summary>
            The value is a CSSValue list and an instance of the CSSValueList interface can be obtained by using binding-specific casting methods on this instance of the CSSValue interface.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSValue.CSS_CUSTOM">
      <summary>
            The value is a custom value.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValue.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Css.CSSValue" /> class.
            </summary>
      <param name="valueType">Type of the value.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValue.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValue.GetPlatformType">
      <summary>
            This method is used to retrieve ECMAScript object <see cref="T:System.Type" />.
            </summary>
      <returns>
            The ECMAScript object <see cref="T:System.Type" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValue.Equals(Aspose.Html.Dom.Css.CSSValue)">
      <summary>
            Determines whether the specified object is equal to this instance.
            </summary>
      <param name="obj">The object to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:Aspose.Html.Dom.Css.CSSValue" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValue.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
      <exception cref="T:System.NullReferenceException">
            The <paramref name="obj" /> parameter is null.
              </exception>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValue.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValue.op_Equality(Aspose.Html.Dom.Css.CSSValue,Aspose.Html.Dom.Css.CSSValue)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="left">The left element.</param>
      <param name="right">The right element.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValue.op_Inequality(Aspose.Html.Dom.Css.CSSValue,Aspose.Html.Dom.Css.CSSValue)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="left">The left element.</param>
      <param name="right">The right element.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.CSSValue.CSSText">
      <summary>
            A string representation of the current value.
            </summary>
      <value>
            The CSS text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.CSSValue.CSSValueType">
      <summary>
            A code defining the type of the value.
            </summary>
      <value>
            The type of the CSS value.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSS2Properties">
      <summary>
            Provides interface for CSS2 properties set values manipulation in the context of certain HTML element
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Azimuth">
      <summary>
            See the azimuth property definition in CSS2.
            </summary>
      <returns>The azimuth property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Background">
      <summary>
            See the background property definition in CSS2.
            </summary>
      <returns>the background property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BackgroundAttachment">
      <summary>
            See the background-attachment property definition in CSS2.
            </summary>
      <returns>background-attachment property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BackgroundColor">
      <summary>
            See the background-color property definition in CSS2.
            </summary>
      <returns>background-color property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BackgroundImage">
      <summary>
            See the background-image property definition in CSS2.
            </summary>
      <returns>background-image property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BackgroundPosition">
      <summary>
            See the background-position property definition in CSS2.
            </summary>
      <returns>background-position property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BackgroundRepeat">
      <summary>
            See the background-repeat property definition in CSS2.
            </summary>
      <returns>background-repeat property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Border">
      <summary>
            See the border property definition in CSS2.
            </summary>
      <returns>border property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderCollapse">
      <summary>
            See the border-collapse property definition in CSS2.
            </summary>
      <returns>border-collapse property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderColor">
      <summary>
            See the border-color property definition in CSS2.
            </summary>
      <returns>border-color property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderSpacing">
      <summary>
            See the border-spacing property definition in CSS2.
            </summary>
      <returns>border-spacing property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderStyle">
      <summary>
            See the border-style property definition in CSS2.
            </summary>
      <returns>border-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderTop">
      <summary>
            See the border-top property definition in CSS2.
            </summary>
      <returns>border-top property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderRight">
      <summary>
            See the border-right property definition in CSS2.
            </summary>
      <returns>border-right property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderBottom">
      <summary>
            See the border-bottom property definition in CSS2.
            </summary>
      <returns>border-bottom property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderLeft">
      <summary>
            See the border-left property definition in CSS2.
            </summary>
      <returns>border-left property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderTopColor">
      <summary>
            See the border-top-color property definition in CSS2.
            </summary>
      <returns>border-top-color property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderRightColor">
      <summary>
            See the border-right-color property definition in CSS2.
            </summary>
      <returns>border-right-color property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderBottomColor">
      <summary>
            See the border-bottom-color property definition in CSS2.
            </summary>
      <returns>border-bottom-color property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderLeftColor">
      <summary>
            See the border-left-color property definition in CSS2.
            </summary>
      <returns>border-left-color property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderTopStyle">
      <summary>
            See the border-top-style property definition in CSS2.
            </summary>
      <returns>border-top-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderRightStyle">
      <summary>
            See the border-right-style property definition in CSS2.
            </summary>
      <returns>border-right-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderBottomStyle">
      <summary>
            See the border-bottom-style property definition in CSS2.
            </summary>
      <returns>border-bottom-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderLeftStyle">
      <summary>
            See the border-left-style property definition in CSS2.
            </summary>
      <returns>border-left-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderTopWidth">
      <summary>
            See the border-top-width property definition in CSS2.
            </summary>
      <returns>border-top-width property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderRightWidth">
      <summary>
            See the border-right-width property definition in CSS2.
            </summary>
      <returns>border-right-width property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderBottomWidth">
      <summary>
            See the border-bottom-width property definition in CSS2.
            </summary>
      <returns>border-bottom-width property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderLeftWidth">
      <summary>
            See the border-left-width property definition in CSS2.
            </summary>
      <returns>border-left-width property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderWidth">
      <summary>
            See the border-width property definition in CSS2.
            </summary>
      <returns>border-width property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Bottom">
      <summary>
            See the bottom property definition in CSS2.
            </summary>
      <returns>bottom property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.CaptionSide">
      <summary>
            See the caption-side property definition in CSS2.
            </summary>
      <returns>caption-side property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Clear">
      <summary>
            See the clear property definition in CSS2.
            </summary>
      <returns>clear property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Clip">
      <summary>
            See the clip property definition in CSS2.
            </summary>
      <returns>clip property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Color">
      <summary>
            See the color property definition in CSS2.
            </summary>
      <returns>color property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Content">
      <summary>
            See the content property definition in CSS2.
            </summary>
      <returns>content property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.CounterIncrement">
      <summary>
            See the counter-increment property definition in CSS2.
            </summary>
      <returns>counter-increment property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.CounterReset">
      <summary>
            See the counter-reset property definition in CSS2.
            </summary>
      <returns>counter-reset property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Cue">
      <summary>
            See the cue property definition in CSS2.
            </summary>
      <returns>cue property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.CueAfter">
      <summary>
            See the cue-after property definition in CSS2.
            </summary>
      <returns>cue-after property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.CueBefore">
      <summary>
            See the cue-before property definition in CSS2.
            </summary>
      <returns>cue-before property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Cursor">
      <summary>
            See the cursor property definition in CSS2.
            </summary>
      <returns>cursor property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Direction">
      <summary>
            See the direction property definition in CSS2.
            </summary>
      <returns>direction property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Display">
      <summary>
            See the display property definition in CSS2.
            </summary>
      <returns>display property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Elevation">
      <summary>
            See the elevation property definition in CSS2.
            </summary>
      <returns>elevation property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.EmptyCells">
      <summary>
            See the empty-cells property definition in CSS2.
            </summary>
      <returns>empty-cells property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Float">
      <summary>
            See the float property definition in CSS2.
            </summary>
      <returns>float property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Font">
      <summary>
            See the font property definition in CSS2.
            </summary>
      <returns>font property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.FontFamily">
      <summary>
            See the font-family property definition in CSS2.
            </summary>
      <returns>font-family property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.FontSize">
      <summary>
            See the font-size property definition in CSS2.
            </summary>
      <returns>font-size property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.FontSizeAdjust">
      <summary>
            See the font-size-adjust property definition in CSS2.
            </summary>
      <returns>font-size-adjust property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.FontStretch">
      <summary>
            See the font-stretch property definition in CSS2.
            </summary>
      <returns>font-stretch property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.FontStyle">
      <summary>
            See the font-style property definition in CSS2.
            </summary>
      <returns>font-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.FontVariant">
      <summary>
            See the font-variant property definition in CSS2.
            </summary>
      <returns>font-variant property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.FontWeight">
      <summary>
            See the font-weight property definition in CSS2.
            </summary>
      <returns>font-weight property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Height">
      <summary>
            See the height property definition in CSS2.
            </summary>
      <returns>height property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Left">
      <summary>
            See the left property definition in CSS2.
            </summary>
      <returns>left property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.LetterSpacing">
      <summary>
            See the letter-spacing property definition in CSS2.
            </summary>
      <returns>letter-spacing property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.LineHeight">
      <summary>
            See the line-height property definition in CSS2.
            </summary>
      <returns>line-height property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.ListStyle">
      <summary>
            See the list-style property definition in CSS2.
            </summary>
      <returns>list-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.ListStyleImage">
      <summary>
            See the list-style-image property definition in CSS2.
            </summary>
      <returns>list-style-image property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.ListStylePosition">
      <summary>
            See the list-style-position property definition in CSS2.
            </summary>
      <returns>list-style-position property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.ListStyleType">
      <summary>
            See the list-style-type property definition in CSS2.
            </summary>
      <returns>list-style-type property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Margin">
      <summary>
            See the margin property definition in CSS2.
            </summary>
      <returns>margin property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MarginTop">
      <summary>
            See the margin-top property definition in CSS2.
            </summary>
      <returns>The margin top</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MarginRight">
      <summary>
            See the margin-right property definition in CSS2.
            </summary>
      <returns>The margin-right value</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MarginBottom">
      <summary>
            See the margin-bottom property definition in CSS2.
            </summary>
      <returns>margin-bottom </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MarginLeft">
      <summary>
            See the margin-left property definition in CSS2.
            </summary>
      <returns>margin-left property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MarkerOffset">
      <summary>
            See the marker-offset property definition in CSS2.
            </summary>
      <returns>marker-offset property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Marks">
      <summary>
            See the marks property definition in CSS2.
            </summary>
      <returns>marks property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MaxHeight">
      <summary>
            See the max-height property definition in CSS2.
            </summary>
      <returns>max-height property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MaxWidth">
      <summary>
            See the max-width property definition in CSS2.
            </summary>
      <returns>max-width property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MinHeight">
      <summary>
            See the min-height property definition in CSS2.
            </summary>
      <returns>min-height property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MinWidth">
      <summary>
            See the min-width property definition in CSS2.
            </summary>
      <returns>min-width property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Orphans">
      <summary>
            See the orphans property definition in CSS2.
            </summary>
      <returns>orphans property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Outline">
      <summary>
            See the outline property definition in CSS2.
            </summary>
      <returns>outline property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.OutlineColor">
      <summary>
            See the outline-color property definition in CSS2.
            </summary>
      <returns>outline-color property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.OutlineStyle">
      <summary>
            See the outline-style property definition in CSS2.
            </summary>
      <returns>outline-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.OutlineWidth">
      <summary>
            See the outline-width property definition in CSS2.
            </summary>
      <returns>outline-width property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Overflow">
      <summary>
            See the overflow property definition in CSS2.
            </summary>
      <returns>overflow property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Padding">
      <summary>
            See the padding property definition in CSS2.
            </summary>
      <returns>padding property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PaddingTop">
      <summary>
            See the padding-top property definition in CSS2.
            </summary>
      <returns>padding-top property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PaddingRight">
      <summary>
            See the padding-right property definition in CSS2.
            </summary>
      <returns>padding-right property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PaddingBottom">
      <summary>
            See the padding-bottom property definition in CSS2.
            </summary>
      <returns>padding-bottom property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PaddingLeft">
      <summary>
            See the padding-left property definition in CSS2.
            </summary>
      <returns>padding-left property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Page">
      <summary>
            See the page property definition in CSS2.
            </summary>
      <returns>page property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PageBreakAfter">
      <summary>
            See the page-break-after property definition in CSS2.
            </summary>
      <returns>page-break-after property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PageBreakBefore">
      <summary>
            See the page-break-before property definition in CSS2.
            </summary>
      <returns>page-break-before property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PageBreakInside">
      <summary>
            See the page-break-inside property definition in CSS2.
            </summary>
      <returns>page-break-inside property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Pause">
      <summary>
            See the pause property definition in CSS2.
            </summary>
      <returns>pause property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PauseAfter">
      <summary>
            See the pause-after property definition in CSS2.
            </summary>
      <returns>pause-after property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PauseBefore">
      <summary>
            See the pause-before property definition in CSS2.
            </summary>
      <returns>pause-before property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Pitch">
      <summary>
            See the pitch property definition in CSS2.
            </summary>
      <returns>pitch property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PitchRange">
      <summary>
            See the pitch-range property definition in CSS2.
            </summary>
      <returns>pitch-range property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PlayDuring">
      <summary>
            See the play-during property definition in CSS2.
            </summary>
      <returns>play-during property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Position">
      <summary>
            See the position property definition in CSS2.
            </summary>
      <returns>position property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Quotes">
      <summary>
            See the quotes property definition in CSS2.
            </summary>
      <returns>quotes property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Richness">
      <summary>
            See the richness property definition in CSS2.
            </summary>
      <returns>richness property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Right">
      <summary>
            See the right property definition in CSS2.
            </summary>
      <returns>right property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Size">
      <summary>
            See the size property definition in CSS2.
            </summary>
      <returns>size property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Speak">
      <summary>
            See the speak property definition in CSS2.
            </summary>
      <returns>speak property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.SpeakHeader">
      <summary>
            See the speak-header property definition in CSS2.
            </summary>
      <returns>speak-header property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.SpeakNumeral">
      <summary>
            See the speak-numeral property definition in CSS2.
            </summary>
      <returns>speak-numeral property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.SpeakPunctuation">
      <summary>
            See the speak-punctuation property definition in CSS2.
            </summary>
      <returns>speak-punctuation property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.SpeechRate">
      <summary>
            See the speech-rate property definition in CSS2.
            </summary>
      <returns>speech-rate property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Stress">
      <summary>
            See the stress property definition in CSS2.
            </summary>
      <returns>stress property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.TableLayout">
      <summary>
            See the table-layout property definition in CSS2.
            </summary>
      <returns>table-layout property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.TextAlign">
      <summary>
            See the text-align property definition in CSS2.
            </summary>
      <returns>text-align property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.TextDecoration">
      <summary>
            See the text-decoration property definition in CSS2.
            </summary>
      <returns>text-decoration property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.TextIndent">
      <summary>
            See the text-indent property definition in CSS2.
            </summary>
      <returns>text-indent property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.TextShadow">
      <summary>
            See the text-shadow property definition in CSS2.
            </summary>
      <returns>text-shadow property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.TextTransform">
      <summary>
            See the text-transform property definition in CSS2.
            </summary>
      <returns>text-transform property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Top">
      <summary>
            See the top property definition in CSS2.
            </summary>
      <returns>top property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.UnicodeBidi">
      <summary>
            See the unicode-bidi property definition in CSS2.
            </summary>
      <returns>unicode-bidi property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.VerticalAlign">
      <summary>
            See the vertical-align property definition in CSS2.
            </summary>
      <returns>vertical-align property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Visibility">
      <summary>
            See the visibility property definition in CSS2.
            </summary>
      <returns>visibility property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.VoiceFamily">
      <summary>
            See the voice-family property definition in CSS2.
            </summary>
      <returns>voice-family property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Volume">
      <summary>
            See the volume property definition in CSS2.
            </summary>
      <returns>volume property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.WhiteSpace">
      <summary>
            See the white-space property definition in CSS2.
            </summary>
      <returns>white-space property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Widows">
      <summary>
            See the widows property definition in CSS2.
            </summary>
      <returns>widows property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Width">
      <summary>
            See the width property definition in CSS2.
            </summary>
      <returns>width property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.WordSpacing">
      <summary>
            See the word-spacing property definition in CSS2.
            </summary>
      <returns>word-spacing property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.ZIndex">
      <summary>
            See the z-index property definition in CSS2.
            </summary>
      <returns>z-index property</returns>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSRule">
      <summary>
            The CSSRule interface is the abstract base interface for any type of CSS statement. This includes both rule sets and at-rules. An implementation is expected to preserve all rules specified in a CSS style sheet, even if the rule is not recognized by the parser. Unrecognized rules are represented using the <see cref="!:ICSSUnknownRule" /> interface.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSRule.Type">
      <summary>
            The type of the rule, as defined above. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSRule.CSSText">
      <summary>
            The parsable textual representation of the rule. This reflects the current state of the rule and not its initial value.
            </summary>
      <value>
            The CSS text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSRule.ParentStyleSheet">
      <summary>
            The style sheet that contains this rule.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSRule.ParentRule">
      <summary>
            If this rule is contained inside another rule (e.g. a style rule inside an @media block), this is the containing rule. If this rule is not nested inside any other rules, this returns null.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSRuleList">
      <summary>
            The CSSRuleList interface provides the abstraction of an ordered collection of CSS rules.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSRuleList.Length">
      <summary>
            The number of CSSRules in the list. The range of valid child rule indices is 0 to length-1 inclusive.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSRuleList.Item(System.Int32)">
      <summary>
            Used to retrieve a CSS rule by method item() (http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRuleList). The order in this collection represents the order of the rules in the CSS style sheet. If index is greater than or equal to the number of rules in the list, this returns null.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Css.ICSSRule" />.
            </value>
      <param name="index">The rule index</param>
      <returns>The CSS rule instance.</returns>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSStyleDeclaration">
      <summary>
            The CSSStyleDeclaration interface represents a single CSS declaration block. This interface may be used to determine the style properties currently set in a block or to set style properties explicitly within the block.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSStyleDeclaration.GetPropertyValue(System.String)">
      <summary>
            Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block.
            </summary>
      <param name="propertyName">Name of the property.</param>
      <returns>Returns property value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSStyleDeclaration.GetPropertyCSSValue(System.String)">
      <summary>
            Used to retrieve the object representation of the value of a CSS property if it has been explicitly set within this declaration block. This method returns null if the property is a shorthand property. Shorthand property values can only be accessed and modified as strings, using the getPropertyValue and setProperty methods.
            </summary>
      <param name="propertyName">Name of the property.</param>
      <returns>Returns property value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSStyleDeclaration.RemoveProperty(System.String)">
      <summary>
            Used to remove a CSS property if it has been explicitly set within this declaration block.
            </summary>
      <param name="propertyName">Name of the property.</param>
      <returns>Returns property value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSStyleDeclaration.GetPropertyPriority(System.String)">
      <summary>
            Used to retrieve the priority of a CSS property (e.g. the "important" qualifier) if the property has been explicitly set in this declaration block.
            </summary>
      <param name="propertyName">Name of the property.</param>
      <returns>Returns property priority</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSStyleDeclaration.SetProperty(System.String,System.String)">
      <summary>
            Used to set a property value with default priority within this declaration block.
            Default priority is not "important" i.e. String.Empty
            </summary>
      <param name="propertyName">Name of the property.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSStyleDeclaration.SetProperty(System.String,System.String,System.String)">
      <summary>
            Used to set a property value and priority within this declaration block.
            </summary>
      <param name="propertyName">Name of the property.</param>
      <param name="value">The value.</param>
      <param name="priority">The priority.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleDeclaration.CSSText">
      <summary>
            The parsable textual representation of the declaration block (excluding the surrounding curly braces). Setting this attribute will result in the parsing of the new value and resetting of all the properties in the declaration block including the removal or addition of properties.
            </summary>
      <value>
            The CSS text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleDeclaration.Length">
      <summary>
            The number of properties that have been explicitly set in this declaration block. The range of valid indices is 0 to length-1 inclusive.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleDeclaration.Item(System.Int32)">
      <summary>
            Used to retrieve the properties that have been explicitly set in this declaration block. The order of the properties retrieved using this method does not have to be the order in which they were set. This method can be used to iterate over all properties in this declaration block.
            </summary>
      <param name="index">The property index</param>
      <returns>The CSS value.</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleDeclaration.ParentRule">
      <summary>
            The CSS rule that contains this declaration block or null if this CSSStyleDeclaration is not attached to a CSSRule.
            </summary>
      <value>
            The parent rule.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSStyleSheet">
      <summary>
            The CSSStyleSheet interface is a concrete interface used to represent a CSS style sheet i.e., a style sheet whose content type is "text/css".
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSStyleSheet.InsertRule(System.String,System.Int32)">
      <summary>
            Used to insert a new rule into the style sheet. The new rule now becomes part of the cascade.
            </summary>
      <param name="rule">The style rule.</param>
      <param name="index">The rule index.</param>
      <returns>The inserted index</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSStyleSheet.DeleteRule(System.Int32)">
      <summary>
            Used to delete a rule from the style sheet.
            </summary>
      <param name="index">The index.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleSheet.OwnerRule">
      <summary>
            If this style sheet comes from an @import rule, the ownerRule attribute will contain the CSSImportRule. In that case, the ownerNode attribute in the StyleSheet interface will be null. If the style sheet comes from an element or a processing instruction, the ownerRule attribute will be null and the ownerNode attribute will contain the Node.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleSheet.CSSRules">
      <summary>
            The list of all CSS rules contained within the style sheet. This includes both rule sets and at-rules.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.IDocumentStyle">
      <summary>
            The DocumentStyle interface provides a mechanism by which the style sheets embedded in a document can be retrieved. The expectation is that an instance of the DocumentStyle interface can be obtained by using binding-specific casting methods on an instance of the Document interface.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IDocumentStyle.StyleSheets">
      <summary>
            A list containing all the style sheets explicitly linked into or embedded in a document. For HTML documents, this includes external style sheets, included via the HTML LINK element, and inline STYLE elements.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ILinkStyle">
      <summary>
            The LinkStyle interface provides a mechanism by which a style sheet can be retrieved from the node responsible for linking it into a document. An instance of the LinkStyle interface can be obtained using binding-specific casting methods on an instance of a linking node (HTMLLinkElement, HTMLStyleElement or ProcessingInstruction in DOM Level 2).
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ILinkStyle.Sheet">
      <summary>
            Gets the associated style sheet.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.IMediaList">
      <summary>
            The MediaList interface provides the abstraction of an ordered collection of media, without defining or constraining how this collection is implemented. An empty list is the same as a list that contains the medium "all".
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.IMediaList.DeleteMedium(System.String)">
      <summary>
            Deletes the medium indicated by oldMedium from the list.
            </summary>
      <param name="oldMedium">The old medium.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.IMediaList.AppendMedium(System.String)">
      <summary>
            Adds the medium newMedium to the end of the list. If the newMedium is already used, it is first removed.
            </summary>
      <param name="newMedium">The new medium.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IMediaList.MediaText">
      <summary>
            The parsable textual representation of the media list. This is a comma-separated list of media.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IMediaList.Length">
      <summary>
            The number of media in the list. The range of valid media is 0 to length-1 inclusive.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IMediaList.Item(System.Int32)">
      <summary>
            Returns the indexth in the list. If index is greater than or equal to the number of media in the list, this returns null.
            <param name="index">The media index.</param></summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.IStyleSheet">
      <summary>
            The StyleSheet interface is the abstract base interface for any type of style sheet. It represents a single style sheet associated with a structured document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheet.Type">
      <summary>
            This specifies the style sheet language for this style sheet. The style sheet language is specified as a content type (e.g. "text/css").
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheet.Disabled">
      <summary>
            false if the style sheet is applied to the document. true if it is not. Modifying this attribute may cause a new resolution of style for the document. A stylesheet only applies if both an appropriate medium definition is present and the disabled attribute is false. So, if the media doesn't apply to the current user agent, the disabled attribute is ignored.
            </summary>
      <value>
        <c>true</c> if disabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheet.OwnerNode">
      <summary>
            The node that associates this style sheet with the document. For HTML, this may be the corresponding LINK or STYLE element. For XML, it may be the linking processing instruction. For style sheets that are included by other style sheets, the value of this attribute is null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheet.ParentStyleSheet">
      <summary>
            For style sheet languages that support the concept of style sheet inclusion, this attribute represents the including style sheet, if one exists. If the style sheet is a top-level style sheet, or the style sheet language does not support inclusion, the value of this attribute is null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheet.Href">
      <summary>
            If the style sheet is a linked style sheet, the value of its attribute is its location. For inline style sheets, the value of this attribute is null. 
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheet.Title">
      <summary>
            The advisory title. 
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheet.Media">
      <summary>
            The intended destination media for style information.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.IStyleSheetList">
      <summary>
            The StyleSheetList interface provides the abstraction of an ordered collection of style sheets.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheetList.Length">
      <summary>
            The number of StyleSheets in the list. The range of valid child stylesheet indices is 0 to length-1 inclusive.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheetList.Item(System.Int32)">
      <summary>
            Used to retrieve a style sheet by method item(int index) accordind to http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/stylesheets.html.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Css.ICSSStyleSheet" />.
            </value>
      <param name="index">The style sheet index</param>
      <returns>The CSS stylesheet instance.</returns>
    </member>
    <member name="T:Aspose.Html.Dom.Css.IViewCSS">
      <summary>
            This interface represents a CSS view.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Views.IAbstractView" />
    </member>
    <member name="M:Aspose.Html.Dom.Css.IViewCSS.GetComputedStyle(Aspose.Html.Dom.Element)">
      <summary>
            This method is used to get the computed style as it is defined in CSS2.
            </summary>
      <param name="element">The element whose style is to be computed. This parameter cannot be null.</param>
      <returns>The computed style</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.IViewCSS.GetComputedStyle(Aspose.Html.Dom.Element,System.String)">
      <summary>
            This method is used to get the computed style as it is defined in CSS2.
            </summary>
      <param name="element">The element whose style is to be computed. This parameter cannot be null.</param>
      <param name="pseudoElement">The pseudo element.</param>
      <returns>The computed style</returns>
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.Accessors">
      <summary>
            Represents the enumeration of member accessors that is defined by the W3C.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Attributes.Accessors.None">
      <summary>
            Specifies that the property does not have any special meaning.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Attributes.Accessors.Getter">
      <summary>
            Specifies that the property or method should be handled as a getter.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Attributes.Accessors.Setter">
      <summary>
            Specifies that the property or method should be handled as a setter.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Attributes.Accessors.Deleter">
      <summary>
            Specifies that the property or method should be handled by delete.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMConstructorAttribute">
      <summary>
            Specifies a constructor that is defined by the W3C.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMNameAttribute">
      <summary>
            Specifies the official DOM object name as it defined by the W3C.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="M:Aspose.Html.Dom.Attributes.DOMNameAttribute.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Attributes.DOMNameAttribute" /> class.
            </summary>
      <param name="name">The DOM name.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Attributes.DOMNameAttribute.Name">
      <summary>
            Gets the DOM name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMNamedPropertyGetterAttribute">
      <summary>
            Specifies that the method will be used as named property getter.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMNoInterfaceObjectAttribute">
      <summary>
            If the [NoInterfaceObject] extended attribute appears on an interface, it indicates that an interface object will not exist for the interface in the ECMAScript binding.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMNullableAttribute">
      <summary>
            Specifies a DOM object can be assigned null value.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMObjectAttribute">
      <summary>
            Specifies that object is marked with this attribute is defined by the W3C.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMTreatNullAsAttribute">
      <summary>
            Indicates that null of the member value will be treated as specified value.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="M:Aspose.Html.Dom.Attributes.DOMTreatNullAsAttribute.#ctor(System.Type,System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Attributes.DOMTreatNullAsAttribute" /> class.
            </summary>
      <param name="type">The object type.</param>
      <param name="value">The object value.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Attributes.DOMTreatNullAsAttribute.Type">
      <summary>
            Gets or sets value the type.
            </summary>
      <value>
            The type.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attributes.DOMTreatNullAsAttribute.Value">
      <summary>
            Gets or sets the value.
            </summary>
      <value>
            The value.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Dom.Attributes</b> namespace contains
            unified attribute classes which specifies
            or qualifies any object (node, element, ...) feature or behavior.
            </summary>
    </member>
    <member name="T:Aspose.Html.Drawing.Color">
      <summary>
            The Color class lets you specify colors as 
            Red-Green-Blue (RGB) values,
            Hue-Saturation-Luminosity (HSL) values,
            Hue-Saturation-Value (HSV) values,
            Hue-Whiteness-Blackness (HWB) values,
            lightness-A-B (LAB) values,
            Luminance-Chroma-Hue (LCH) values,
            Cyan-Magenta-Yellow-Key (CMYK) values,
            Natural colors (NCOL) values,
            or with a color name. 
            An Alpha channel is also available to indicate transparency.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class.
            By default color is black.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.#ctor(System.Single,System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class.
            All color components must be in the range 0-1.
            </summary>
      <param name="red">The red component of the color.</param>
      <param name="green">The green component of the color.</param>
      <param name="blue">The blue component of the color.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class.
            All color components must be in the range 0-1.
            </summary>
      <param name="red">The red component of the color.</param>
      <param name="green">The green component of the color.</param>
      <param name="blue">The blue component of the color.</param>
      <param name="alpha">The alpha component of the color.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.#ctor(System.Byte,System.Byte,System.Byte)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class.
            All color components must be in the range 0-255.
            </summary>
      <param name="red">The red component of the color.</param>
      <param name="green">The green component of the color.</param>
      <param name="blue">The blue component of the color.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class.
            All color components must be in the range 0-255.
            </summary>
      <param name="red">A byte that represents the red component of the color.</param>
      <param name="green">A byte that represents the green component of the color.</param>
      <param name="blue">A byte that represents the blue component of the color.</param>
      <param name="alpha">A byte that represents the alpha component of the color.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class.
            All color components must be in the range 0-255.
            </summary>
      <param name="red">The red component of the color.</param>
      <param name="green">The green component of the color.</param>
      <param name="blue">The blue component of the color.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class.
            All color components must be in the range 0-255.
            </summary>
      <param name="red">The red component of the color.</param>
      <param name="green">The green component of the color.</param>
      <param name="blue">The blue component of the color.</param>
      <param name="alpha">The alpha component of the color.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromGray(System.Single)">
      <summary>
            Returns a new Color with the requested gray value.
            </summary>
      <param name="gray">A float that represents the gray value of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromUint(System.UInt32)">
      <summary>
            Returns a new Color with the requested ARGB value.
            </summary>
      <param name="argb">A uint that represents the ARGB value of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromInt(System.Int32)">
      <summary>
            Returns a new Color with the requested ARGB value.
            </summary>
      <param name="argb">A int that represents the ARGB value of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromRgb(System.Byte,System.Byte,System.Byte)">
      <summary>
            Returns a new Color with the requested ged, green, blue values.
            All color components must be in the range 0-255.
            </summary>
      <param name="red">A byte that represents the red component of the color.</param>
      <param name="green">A byte that represents the green component of the color.</param>
      <param name="blue">A byte that represents the blue component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromRgba(System.Byte,System.Byte,System.Byte,System.Byte)">
      <summary>
            Returns a new Color with the requested ged, green, blue, alpha values.
            All color components must be in the range 0-255.
            </summary>
      <param name="red">A byte that represents the red component of the color.</param>
      <param name="green">A byte that represents the green component of the color.</param>
      <param name="blue">A byte that represents the blue component of the color.</param>
      <param name="alpha">A byte that represents the alpha component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromRgb(System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a new Color with the requested ged, green, blue values.
            All color components must be in the range 0-255.
            </summary>
      <param name="red">A int that represents the red component of the color.</param>
      <param name="green">A int that represents the green component of the color.</param>
      <param name="blue">A int that represents the blue component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromRgba(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a new Color with the requested ged, green, blue, alpha values.
            All color components must be in the range 0-255.
            </summary>
      <param name="red">A int that represents the red component of the color.</param>
      <param name="green">A int that represents the green component of the color.</param>
      <param name="blue">A int that represents the blue component of the color.</param>
      <param name="alpha">A int that represents the alpha component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromRgb(System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested ged, green, blue values.
            All color components must be in the range 0-1.
            </summary>
      <param name="red">A float that represents the red component of the color.</param>
      <param name="green">A float that represents the green component of the color.</param>
      <param name="blue">A float that represents the blue component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromRgba(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested ged, green, blue, alpha values.
            All color components must be in the range 0-1.
            </summary>
      <param name="red">A float that represents the red component of the color.</param>
      <param name="green">A float that represents the green component of the color.</param>
      <param name="blue">A float that represents the blue component of the color.</param>
      <param name="alpha">A float that represents the alpha component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromString(System.String)">
      <summary>
            Parses string containing the CSS color and returns a new Color.
            </summary>
      <param name="color">A string containing the color in the format RGB, HEX, HSL, HSV, HWB, CMYK, NCOL, LCH, OKLCH, LAB or OKLAB</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromHsl(System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested hue, saturation, saturation values.
            </summary>
      <param name="hue">A float that represents the hue component of the color.</param>
      <param name="saturation">A float that represents the saturation component of the color.</param>
      <param name="lightness">A float that represents the lightness component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromHsla(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested hue, saturation, saturation, alpha values.
            </summary>
      <param name="hue">A float that represents the hue component of the color.</param>
      <param name="saturation">A float that represents the saturation component of the color.</param>
      <param name="lightness">A float that represents the lightness component of the color.</param>
      <param name="alpha">A float that represents the alpha component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromHsv(System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested hue, saturation, value.
            </summary>
      <param name="hue">A float that represents the hue component of the color.</param>
      <param name="saturation">A float that represents the saturation component of the color.</param>
      <param name="value">A float that represents the value component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromHsva(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested hue, saturation, value, alpha.
            </summary>
      <param name="hue">A float that represents the hue component of the color.</param>
      <param name="saturation">A float that represents the saturation component of the color.</param>
      <param name="value">A float that represents the value component of the color.</param>
      <param name="alpha">A float that represents the alpha component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromHwb(System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested hue, whiteness, blackness values.
            </summary>
      <param name="hue">A float that represents the hue component of the color.</param>
      <param name="whiteness">A float that represents the whiteness component of the color.</param>
      <param name="blackness">A float that represents the blackness component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromHwba(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested hue, whiteness, blackness values.
            </summary>
      <param name="hue">A float that represents the hue component of the color.</param>
      <param name="whiteness">A float that represents the whiteness component of the color.</param>
      <param name="blackness">A float that represents the blackness component of the color.</param>
      <param name="alpha">A float that represents the alpha component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromCmyk(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested cyan, magenta, yellow, key (black) values.
            </summary>
      <param name="cyan">A float that represents the cyan component of the color.</param>
      <param name="magenta">A float that represents the magenta component of the color.</param>
      <param name="yellow">A float that represents the yellow component of the color.</param>
      <param name="key">A float that represents the key component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromCmyka(System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested cyan, magenta, yellow, key (black), alpha values.
            </summary>
      <param name="cyan">A float that represents the cyan component of the color.</param>
      <param name="magenta">A float that represents the magenta component of the color.</param>
      <param name="yellow">A float that represents the yellow component of the color.</param>
      <param name="key">A float that represents the key component of the color.</param>
      <param name="alpha">A float that represents the alpha component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromLab(System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested lightness, A, B values.
            </summary>
      <param name="lightness">A float that represents the lightness component of the color.</param>
      <param name="a">A float that represents the A component of the color.</param>
      <param name="b">A float that represents the B component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromLaba(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested lightness, A, B, alpha values.
            </summary>
      <param name="lightness">A float that represents the lightness component of the color.</param>
      <param name="a">A float that represents the A component of the color.</param>
      <param name="b">A float that represents the B component of the color.</param>
      <param name="alpha">A float that represents the alpha component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromOklab(System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested lightness, A, B values for OKLAB model.
            </summary>
      <param name="lightness">A float that represents the lightness component of the color.</param>
      <param name="a">A float that represents the A component of the color.</param>
      <param name="b">A float that represents the B component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromOklaba(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested lightness, A, B, alpha values for OKLAB model.
            </summary>
      <param name="lightness">A float that represents the lightness component of the color.</param>
      <param name="a">A float that represents the A component of the color.</param>
      <param name="b">A float that represents the B component of the color.</param>
      <param name="alpha">A float that represents the alpha component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromLch(System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested luminance, chroma, hue values.
            </summary>
      <param name="luminance">A float that represents the luminance component of the color.</param>
      <param name="chroma">A float that represents the chroma component of the color.</param>
      <param name="hue">A float that represents the hue component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromLcha(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested luminance, chroma, hue, alpha values.
            </summary>
      <param name="luminance">A float that represents the luminance component of the color.</param>
      <param name="chroma">A float that represents the chroma component of the color.</param>
      <param name="hue">A float that represents the hue component of the color.</param>
      <param name="alpha">A float that represents the alpha component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromOklch(System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested luminance, chroma, hue values for OKLAB model.
            </summary>
      <param name="luminance">A float that represents the luminance component of the color.</param>
      <param name="chroma">A float that represents the chroma component of the color.</param>
      <param name="hue">A float that represents the hue component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.FromOklcha(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a new Color with the requested luminance, chroma, hue, alpha values for OKLAB model.
            </summary>
      <param name="luminance">A float that represents the luminance component of the color.</param>
      <param name="chroma">A float that represents the chroma component of the color.</param>
      <param name="hue">A float that represents the hue component of the color.</param>
      <param name="alpha">A float that represents the alpha component of the color.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.ToRgbHexString">
      <summary>
            Returns a hexadecimal color is specified with: #RRGGBB.
            </summary>
      <returns>A hexadecimal color string.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.ToNaturalColorString(System.Int32)">
      <summary>
            Returns a Natural colors (NCol) specified color using a color letter with a number to specify the distance (in percent) from the color.
            </summary>
      <param name="digits">Sets the rounding precision for color components.</param>
      <returns>A Natural colors (NCol) string</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.ToName">
      <summary>
            Returns the name of the color if it matches a color in the list of CSS named colors, or an empty string.
             </summary>
      <returns>A color name.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.Convert(Aspose.Html.Drawing.ColorModel)">
      <summary>
            Returns a color components in the format of the specified color model.
            </summary>
      <param name="model">The color model.</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.IColorComponents" /> interface</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.ToString">
      <summary>
            Returns a string that consists of the RGBA component values.
            </summary>
      <returns>A human-readable string.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.ToRgbString">
      <summary>
            Returns a string containing the RGB color specified by: rgb(R, G, B).
            </summary>
      <returns>A rgb string.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.ToRgbaHexString">
      <summary>
            Returns a Hexadecimal color is specified with: #RRGGBBAA.
            </summary>
      <returns>A Hexadecimal color string.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.ToRgbaString">
      <summary>
            Returns a string containing the RGBA color specified by: rgba(R, G, B, A).
            </summary>
      <returns>A rgba string.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.GetHashCode">
      <summary>
            Returns a hash code.
            </summary>
      <returns>A hash code.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:Aspose.Html.Drawing.Color" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.ToInt">
      <summary>
            Encodes the Color ARGB components into int.
            </summary>
      <returns>Encoded int.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.ToUint">
      <summary>
            Encodes the Color ARGB components into unsigned int.
            </summary>
      <returns>Encoded unsigned int.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.GetLuminosity">
      <summary>
            Returns a luminosity of the Color.
            </summary>
      <returns>A luminosity of the Color.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.AddLuminosity(System.Single)">
      <summary>
            Creates copy of the Color with Sum of its luminosity and the delta value.
            </summary>
      <param name="delta">Value of luminosity</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.WithLuminosity(System.Single)">
      <summary>
            Creates copy of the Color with specified luminosity.
            </summary>
      <param name="luminosity">Value of luminosity</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.WithAlpha(System.Single)">
      <summary>
            Creates copy of the Color with specified alpha component.
            </summary>
      <param name="alpha">Value of Alpha component</param>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.GetSaturation">
      <summary>
            Returns a saturation of the Color.
            </summary>
      <returns>A saturation of the Color.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.WithSaturation(System.Single)">
      <summary>
            Creates copy of the Color with specified saturation.
            </summary>
      <param name="saturation">Value of saturation.</param>
      <returns>&gt;A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.GetHue">
      <summary>
            Returns a Hue of the Color.
            </summary>
      <returns>A Hue of the Color.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.WithHue(System.Single)">
      <summary>
            Creates copy of the Color with specified Hue.
            </summary>
      <param name="hue">Value of Hue.</param>
      <returns>&gt;A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Color.GetComplementary">
      <summary>
            Returns a new color that is on the opposite side of the color wheel from the original.
            </summary>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.Color.Red">
      <summary>
            Represents the red component of the color
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.Color.Green">
      <summary>
            Represents the green component of the color.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.Color.Blue">
      <summary>
            Represents the blue component of the color.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.Color.Alpha">
      <summary>
            Represents the alpha component of the color.
            </summary>
    </member>
    <member name="T:Aspose.Html.Drawing.ColorModel">
      <summary>
            This enumeration is used to select the color model for working with color components.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.ColorModel.Rgb">
      <summary>
             Red-Green-Blue color model
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.ColorModel.Hsl">
      <summary>
            Hue-Saturation-Luminosity color model
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.ColorModel.Hsv">
      <summary>
            Hue-Saturation-Value color model
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.ColorModel.Hwb">
      <summary>
            Hue-Whiteness-Blackness color model
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.ColorModel.Cmyk">
      <summary>
            Cyan-Magenta-Yellow-Key color model
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.ColorModel.Lab">
      <summary>
             Lightness-A-B color model
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.ColorModel.Oklab">
      <summary>
            Improved Lightness-A-B model
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.ColorModel.Lch">
      <summary>
            Luminance-Chroma-Hue color model
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.ColorModel.Oklch">
      <summary>
            Improved Luminance-Chroma-Hue color model
            </summary>
    </member>
    <member name="T:Aspose.Html.Drawing.IColorComponents">
      <summary>
            Declares method and properties for processing color components.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.IColorComponents.ToColor">
      <summary>
            Converts the color components to the Color object.
            </summary>
      <returns>A new instance of the <see cref="T:Aspose.Html.Drawing.Color" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.IColorComponents.ToString(System.Boolean,System.Boolean,System.Int32)">
      <summary>
            Converts color components to string representation.
            </summary>
      <param name="includeAlpha">Specifies whether to add Alpha component.</param>
      <param name="asDecimal">Specifies whether color components are preserved as a decimal number or as a percentage.</param>
      <param name="digits">Sets the rounding precision for color components.</param>
      <returns>String representation of the color components.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.IColorComponents.Model">
      <summary>
            Returns the color model.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.IColorComponents.Components">
      <summary>
            Returns the color components as float array.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.IColorComponents.Alpha">
      <summary>
            Returns the alpha component.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLAddressElement">
      <summary>
            The address element. See the ADDRESS  element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="T:Aspose.Html.HTMLAnchorElement">
      <summary>
            The anchor element. See the A element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="M:Aspose.Html.HTMLAnchorElement.Blur">
      <summary>
            Removes keyboard focus from this element.
            </summary>
    </member>
    <member name="M:Aspose.Html.HTMLAnchorElement.Focus">
      <summary>
            Gives keyboard focus to this element.
            </summary>
    </member>
    <member name="M:Aspose.Html.HTMLAnchorElement.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.RelList">
      <summary>
            Returns a live DOMTokenList which contains tokens received from parsing the "rel" attribute.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.AccessKey">
      <summary>
            A single character access key to give access to the form control. See 
            the accesskey attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Charset">
      <summary>
            The character encoding of the linked resource. See the charset 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Coords">
      <summary>
            Comma-separated list of lengths, defining an active region geometry.
            See also <c>shape</c> for the shape of the region. See the
            coords attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Href">
      <summary>
            The absolute URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] of the linked resource. See the href attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Hreflang">
      <summary>
            Language code of the linked resource. See the hreflang attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Name">
      <summary>
            Anchor name. See the name attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Rel">
      <summary>
            Forward link type. See the rel attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Rev">
      <summary>
            Reverse link type. See the rev attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Shape">
      <summary>
            The shape of the active area. The coordinates are given by
            <c>coords</c>. See the shape attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.TabIndex">
      <summary>
            Index that represents the element's position in the tabbing order. See 
            the tabindex attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Target">
      <summary>
            Frame to render the resource in. See the target attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Type">
      <summary>
            Advisory content type. See the type attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Origin">
      <summary>
            Gets a string representation of the origin segment of the associated URL.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Protocol">
      <summary>
            Gets or sets a string representation of the scheme segment of the associated URL.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Username">
      <summary>
            Gets or sets a string representation of the username segment of the associated URL.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Password">
      <summary>
            Gets or sets a string representation of the password segment of the associated URL.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Host">
      <summary>
            Gets or sets a string representation of the host and port segments of the associated URL.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Hostname">
      <summary>
            Gets or sets a string representation of the host segment of the associated URL.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Port">
      <summary>
            Gets or sets a string representation of the port segment of the associated URL.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Pathname">
      <summary>
            Gets or sets a string representation of the path segment of the associated URL.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Search">
      <summary>
            Gets or sets a string representation of the search segment of the associated URL.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Hash">
      <summary>
            Gets or sets a string representation of the hash segment of the associated URL.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLAppletElement">
      <summary>
            An embedded Java applet. See the APPLET element definition in HTML 4.01. 
            This element is deprecated in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Align">
      <summary>
            Aligns this object (vertically or horizontally) with respect to its 
            surrounding text. See the align attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Alt">
      <summary>
            Alternate text for user agents not rendering the normal content of this 
            element. See the alt attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Archive">
      <summary>
            Comma-separated archive list. See the archive attribute definition in 
            HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Code">
      <summary>
            Applet class file. See the code attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.CodeBase">
      <summary>
            Optional base URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] for applet. See the codebase attribute definition in 
            HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Height">
      <summary>
            Override height. See the height attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Hspace">
      <summary>
            Horizontal space, in pixels, to the left and right of this image, 
            applet, or object. See the hspace attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Name">
      <summary>
            The name of the applet. See the name attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Object">
      <summary>
            The value of the "object" attribute. See the object attribute definition
             in HTML 4.01. This attribute is deprecated in HTML 4.01. 
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Vspace">
      <summary>
            Vertical space, in pixels, above and below this image, applet, or 
            object. See the vspace attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Width">
      <summary>
            Override width. See the width attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLAreaElement">
      <summary>
            Client-side image map area definition. See the AREA element definition in 
            HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.RelList">
      <summary>
            Returns a live DOMTokenList which contains tokens received from parsing the "rel" attribute.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.AccessKey">
      <summary>
            A single character access key to give access to the form control. See 
            the accesskey attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.Alt">
      <summary>
            Alternate text for user agents not rendering the normal content of this 
            element. See the alt attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.Coords">
      <summary>
            Comma-separated list of lengths, defining an active region geometry. 
            See also <c>shape</c> for the shape of the region. See the 
            coords attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.Href">
      <summary>
            The URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] of the linked resource. 
            See the href attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.NoHref">
      <summary>
            Specifies that this area is inactive, i.e., has no associated action. 
            See the nohref attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.Shape">
      <summary>
            The shape of the active area. The coordinates are given by 
            <c>coords</c>. See the shape attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.TabIndex">
      <summary>
            Index that represents the element's position in the tabbing order. See 
            the tabindex attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.Target">
      <summary>
            Frame to render the resource in. See the target attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLBaseElement">
      <summary>
            Document base URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>]. See the BASE element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLBaseElement.Href">
      <summary>
            The base URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>]. See the href attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBaseElement.Target">
      <summary>
            The default target frame. See the target attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLBaseFontElement">
      <summary>
            Base font. See the BASEFONT element definition in HTML 4.01. This element 
            is deprecated in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLBaseFontElement.Color">
      <summary>
            Font color. See the color attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBaseFontElement.Face">
      <summary>
            Font face identifier. See the face attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBaseFontElement.Size">
      <summary>
            Computed font size. See the size attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            @version DOM Level 2
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLBodyElement">
      <summary>
            The HTML document body. This element is always present in the DOM API, even 
            if the tags are not present in the source document. See the BODY element 
            definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLBodyElement.ALink">
      <summary>
            Color of active links (after mouse-button down, but before mouse-button 
            up). See the alink attribute definition in HTML 4.01. This attribute 
            is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBodyElement.Background">
      <summary>
            URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] of the background texture tile image. See the background attribute 
            definition in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBodyElement.BgColor">
      <summary>
            Document background color. See the bgcolor attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBodyElement.Link">
      <summary>
            Color of links that are not active and unvisited. See the link 
            attribute definition in HTML 4.01. This attribute is deprecated in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBodyElement.Text">
      <summary>
            Document text color. See the text attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBodyElement.VLink">
      <summary>
            Color of links that have been visited by the user. See the vlink 
            attribute definition in HTML 4.01. This attribute is deprecated in 
            HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLBRElement">
      <summary>
            Force a line break. See the BR element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLBRElement.Clear">
      <summary>
            Control flow of text around floats. See the clear attribute definition 
            in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLButtonElement">
      <summary>
            Push button. See the BUTTON element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLButtonElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLButtonElement.AccessKey">
      <summary>
            A single character access key to give access to the form control. See 
            the accesskey attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLButtonElement.Disabled">
      <summary>
            The control is unavailable in this context. See the disabled attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLButtonElement.Name">
      <summary>
            Form control or object name when submitted with a form. See the name 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLButtonElement.TabIndex">
      <summary>
            Index that represents the element's position in the tabbing order. See 
            the tabindex attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLButtonElement.Type">
      <summary>
            The type of button (all lower case). See the type attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLButtonElement.Value">
      <summary>
            The current form control value. See the value attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLCanvasElement">
      <summary>
            The HTMLCanvasElement interface provides properties and methods for manipulating the layout and presentation of canvas elements. 
            The HTMLCanvasElement interface also inherits the properties and methods of the HTMLElement interface.  
            </summary>
    </member>
    <member name="M:Aspose.Html.HTMLCanvasElement.ToDataURL">
      <summary>
            returns a data URI containing a representation of the image in the format specified by the type parameter (defaults to PNG). 
            The returned image is in a resolution of 96 dpi.
            </summary>
      <returns>A DOMString containing the requested data URI.</returns>
    </member>
    <member name="M:Aspose.Html.HTMLCanvasElement.ToDataURL(System.String)">
      <summary>
            returns a data URI containing a representation of the image in the format specified by the type parameter (defaults to PNG). 
            The returned image is in a resolution of 96 dpi.
            </summary>
      <param name="type">A string indicating the image format. The default format type is image/png.</param>
      <returns>A DOMString containing the requested data URI.</returns>
    </member>
    <member name="M:Aspose.Html.HTMLCanvasElement.ToDataURL(System.String,System.Double)">
      <summary>
            returns a data URI containing a representation of the image in the format specified by the type parameter (defaults to PNG). 
            The returned image is in a resolution of 96 dpi.
            </summary>
      <param name="type">A string indicating the image format. The default format type is image/png.</param>
      <param name="encoderOptions">A Number between 0 and 1 indicating image quality if the requested type is image/jpeg or image/webp.</param>
      <returns>A DOMString containing the requested data URI.</returns>
    </member>
    <member name="M:Aspose.Html.HTMLCanvasElement.GetContext(System.String)">
      <summary>
            Returns a drawing context on the canvas, or null if the context ID is not supported. A drawing context lets you draw on the canvas.
            </summary>
      <param name="contextId">Is a string containing the context identifier defining the drawing context associated to the canvas</param>
      <returns>A RenderingContext</returns>
    </member>
    <member name="P:Aspose.Html.HTMLCanvasElement.Width">
      <summary>
            Is a positive integer reflecting the width HTML attribute of the canvas element interpreted in CSS pixels. 
            When the attribute is not specified, or if it is set to an invalid value, like a negative, the default value of 300 is used.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLCanvasElement.Height">
      <summary>
            Is a positive integer reflecting the height HTML attribute of the canvas element interpreted in CSS pixels. 
            When the attribute is not specified, or if it is set to an invalid value, like a negative, 
            the default value of 150 is used.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLDataListElement">
      <summary>
            The datalist element represents a set of option elements that represent predefined options for other controls.
            See also the <a href="https://www.w3.org/TR/html52/sec-forms.html#elementdef-datalist">HTML 5.2 W3C Recommendation</a>.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDataListElement.Options">
      <summary>
            The collection of <c>OPTION</c> elements contained by this 
            element. 
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLDirectoryElement">
      <summary>
            Directory list. See the DIR element definition in HTML 4.01. This element 
            is deprecated in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLDirectoryElement.Compact">
      <summary>
            Reduce spacing between list items. See the compact attribute definition 
            in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLDivElement">
      <summary>
            Generic block container. See the DIV element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLDivElement.Align">
      <summary>
            Horizontal text alignment. See the align attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLDListElement">
      <summary>
            Definition list. See the DL element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLDListElement.Compact">
      <summary>
            Reduce spacing between list items. See the compact attribute definition 
            in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLFieldSetElement">
      <summary>
            Organizes form controls into logical groups. See the FIELDSET element 
            definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLFieldSetElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLFontElement">
      <summary>
            Local change to font. See the FONT element definition in HTML 4.01. This 
            element is deprecated in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLFontElement.Color">
      <summary>
            Font color. See the color attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFontElement.Face">
      <summary>
            Font face identifier. See the face attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFontElement.Size">
      <summary>
            Font size. See the size attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLFormElement">
      <summary>
            The <c>FORM</c> element encompasses behavior similar to a collection 
            and an element. It provides direct access to the contained form controls 
            as well as the attributes of the form element. See the FORM element 
            definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="M:Aspose.Html.HTMLFormElement.Submit">
      <summary>
            Submits the form. It performs the same action as a submit button.
            </summary>
    </member>
    <member name="M:Aspose.Html.HTMLFormElement.Reset">
      <summary>
            Restores a form element's default values. It performs the same action 
            as a reset button.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.Elements">
      <summary>
            Returns a collection of all form control elements in the form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.Length">
      <summary>
            The number of form controls in the form.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.Name">
      <summary>
            Names the form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.AcceptCharset">
      <summary>
            List of character sets supported by the server. See the accept-charset 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.Action">
      <summary>
            Server-side form handler. See the action attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.Enctype">
      <summary>
            The content type of the submitted form, generally 
            "application/x-www-form-urlencoded". See the enctype attribute 
            definition in HTML 4.01. The onsubmit even handler is not guaranteed 
            to be triggered when invoking this method. The behavior is 
            inconsistent for historical reasons and authors should not rely on a 
            particular one. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.Method">
      <summary>
            HTTP method [<a href="http://www.ietf.org/rfc/rfc2616.txt">IETF RFC 2616</a>] used to submit form. See the method attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.Target">
      <summary>
            Frame to render the resource in. See the target attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLFrameElement">
      <summary>
            Create a frame. See the FRAME element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.FrameBorder">
      <summary>
            Request frame borders. See the frameborder attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.LongDesc">
      <summary>
            URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating a long description of this image or frame. See the 
            longdesc attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.MarginHeight">
      <summary>
            Frame margin height, in pixels. See the marginheight attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.MarginWidth">
      <summary>
            Frame margin width, in pixels. See the marginwidth attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.Name">
      <summary>
            The frame name (object of the <c>target</c> attribute). See the 
            name attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.NoResize">
      <summary>
            When true, forbid user from resizing frame. See the noresize attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.Scrolling">
      <summary>
            Specify whether or not the frame should have scrollbars. See the 
            scrolling attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.Src">
      <summary>
            A URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating the initial frame contents. See the src attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.ContentDocument">
      <summary>
            The document this frame contains, if there is any and it is available, 
            or <c>null</c> otherwise.
            @since DOM Level 2
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLFrameSetElement">
      <summary>
            Create a grid of frames. See the FRAMESET element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameSetElement.Cols">
      <summary>
            The number of columns of frames in the frameset. See the cols attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameSetElement.Rows">
      <summary>
            The number of rows of frames in the frameset. See the rows attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLHeadElement">
      <summary>
            Document head information. See the HEAD element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLHeadElement.Profile">
      <summary>
            URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating a metadata profile. See the profile attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLHeadingElement">
      <summary>
            For the <c>H1</c> to <c>H6</c> elements. See the H1 element
            definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLHeadingElement.Align">
      <summary>
            Horizontal text alignment. See the align attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLHRElement">
      <summary>
            Create a horizontal rule. See the HR element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLHRElement.Align">
      <summary>
            Align the rule on the page. See the align attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLHRElement.NoShade">
      <summary>
            Indicates to the user agent that there should be no shading in the 
            rendering of this element. See the noshade attribute definition in 
            HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLHRElement.Size">
      <summary>
            The height of the rule. See the size attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLHRElement.Width">
      <summary>
            The width of the rule. See the width attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLHtmlElement">
      <summary>
            Root of an HTML document. See the HTML element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLHtmlElement.Version">
      <summary>
            Version information about the document's DTD. See the version attribute 
            definition in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLIFrameElement">
      <summary>
            Inline subwindows. See the IFRAME element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.Align">
      <summary>
            Aligns this object (vertically or horizontally) with respect to its 
            surrounding text. See the align attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.FrameBorder">
      <summary>
            Request frame borders. See the frameborder attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.Height">
      <summary>
            Frame height. See the height attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.LongDesc">
      <summary>
            URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating a long description of this image or frame. See the 
            longdesc attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.MarginHeight">
      <summary>
            Frame margin height, in pixels. See the marginheight attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.MarginWidth">
      <summary>
            Frame margin width, in pixels. See the marginwidth attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.Name">
      <summary>
            The frame name (object of the <c>target</c> attribute). See the 
            name attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.Scrolling">
      <summary>
            Specify whether or not the frame should have scrollbars. See the 
            scrolling attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.Src">
      <summary>
            A URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating the initial frame contents. See the src attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.Width">
      <summary>
            Frame width. See the width attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLImageElement">
      <summary>
            Embedded image. See the IMG element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="M:Aspose.Html.HTMLImageElement.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Name">
      <summary>
            The name of the element (for backwards compatibility). 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Align">
      <summary>
            Aligns this object (vertically or horizontally) with respect to its 
            surrounding text. See the align attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Alt">
      <summary>
            Alternate text for user agents not rendering the normal content of this 
            element. See the alt attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Border">
      <summary>
            Width of border around image. See the  border attribute definition in 
            HTML 4.01. This attribute is deprecated in HTML 4.01. Note that the 
            type of this attribute was <c>DOMString</c> in DOM Level 1 HTML [<a href="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001">DOM Level 1</a>]
            .
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Height">
      <summary>
            Height of the image in pixels. See the height attribute definition in 
            HTML 4.01. Note that the type of this attribute was 
            <c>DOMString</c> in DOM Level 1 HTML [<a href="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001">DOM Level 1</a>].
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Hspace">
      <summary>
            Horizontal space to the left and right of this image in pixels. See the 
            hspace attribute definition in HTML 4.01. This attribute is 
            deprecated in HTML 4.01. Note that the type of this attribute was 
            <c>DOMString</c> in DOM Level 1 HTML [<a href="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001">DOM Level 1</a>].
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.IsMap">
      <summary>
            Use server-side image map. See the ismap attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.LongDesc">
      <summary>
            URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating a long description of this image or frame. See the 
            longdesc attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Src">
      <summary>
            URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating the source of this image. See the src attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.UseMap">
      <summary>
            Use client-side image map. See the usemap attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Vspace">
      <summary>
            Vertical space above and below this image in pixels. See the vspace 
            attribute definition in HTML 4.01. This attribute is deprecated in 
            HTML 4.01. Note that the type of this attribute was "DOMString" in 
            DOM Level 1 HTML [<a href="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001">DOM Level 1</a>].
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Width">
      <summary>
            The width of the image in pixels. See the width attribute definition in 
            HTML 4.01. Note that the type of this attribute was 
            <c>DOMString</c> in DOM Level 1 HTML [<a href="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001">DOM Level 1</a>].
            @version DOM Level 2
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLInputElement">
      <summary>
            Form control.Depending upon the environment in which the page is being 
            viewed, the value property may be read-only for the file upload input 
            type. For the "password" input type, the actual value returned may be 
            masked to prevent unauthorized use. See the INPUT element definition in [<a href="http://www.w3.org/TR/1999/REC-html401-19991224">HTML 4.01</a>].
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.DefaultValue">
      <summary>
            When the <c>type</c> attribute of the element has the value 
            "text", "file" or "password", this represents the HTML value 
            attribute of the element. The value of this attribute does not change 
            if the contents of the corresponding form control, in an interactive 
            user agent, changes. See the value attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.DefaultChecked">
      <summary>
            When <c>type</c> has the value "radio" or "checkbox", this 
            represents the HTML checked attribute of the element. The value of 
            this attribute does not change if the state of the corresponding form 
            control, in an interactive user agent, changes. See the checked 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Files">
      <summary>
            The files IDL attribute allows scripts to access the element’s selected files.
             On getting, if the IDL attribute applies, it must return a FileList object that represents the current selected files. 
            The same object must be returned until the list of selected files changes. If the IDL attribute does not apply, then it must instead return null.  [FILEAPI]
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Accept">
      <summary>
            A comma-separated list of content types that a server processing this 
            form will handle correctly. See the accept attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.AccessKey">
      <summary>
            A single character access key to give access to the form control. See 
            the accesskey attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Align">
      <summary>
            Aligns this object (vertically or horizontally) with respect to its 
            surrounding text. See the align attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Alt">
      <summary>
            Alternate text for user agents not rendering the normal content of this 
            element. See the alt attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Checked">
      <summary>
            When the <c>type</c> attribute of the element has the value 
            "radio" or "checkbox", this represents the current state of the form 
            control, in an interactive user agent. Changes to this attribute 
            change the state of the form control, but do not change the value of 
            the HTML checked attribute of the INPUT element.During the handling 
            of a click event on an input element with a type attribute that has 
            the value "radio" or "checkbox", some implementations may change the 
            value of this property before the event is being dispatched in the 
            document. If the default action of the event is canceled, the value 
            of the property may be changed back to its original value. This means 
            that the value of this property during the handling of click events 
            is implementation dependent.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Disabled">
      <summary>
            The control is unavailable in this context. See the disabled attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.List">
      <summary>
            The list attribute is used to identify an element that lists predefined options suggested to the user.
            If present, its value must be the ID of a datalist element in the same document.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.MaxLength">
      <summary>
            Maximum number of characters for text fields, when <c>type</c> 
            has the value "text" or "password". See the maxlength attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Name">
      <summary>
            Form control or object name when submitted with a form. See the name 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.ReadOnly">
      <summary>
            This control is read-only. Relevant only when <c>type</c> has the 
            value "text" or "password". See the readonly attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Size">
      <summary>
            Size information. The precise meaning is specific to each type of 
            field. See the size attribute definition in HTML 4.01.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Src">
      <summary>
            When the <c>type</c> attribute has the value "image", this 
            attribute specifies the location of the image to be used to decorate 
            the graphical submit button. See the src attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.TabIndex">
      <summary>
            Index that represents the element's position in the tabbing order. See 
            the tabindex attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Type">
      <summary>
            The type of control created (all lower case). See the type attribute definition in HTML 4.01. @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.UseMap">
      <summary>
            Use client-side image map. See the usemap attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Value">
      <summary>
            When the <c>type</c> attribute of the element has the value 
            "text", "file" or "password", this represents the current contents of 
            the corresponding form control, in an interactive user agent. 
            Changing this attribute changes the contents of the form control, but 
            does not change the value of the HTML value attribute of the element. 
            When the <c>type</c> attribute of the element has the value 
            "button", "hidden", "submit", "reset", "image", "checkbox" or 
            "radio", this represents the HTML value attribute of the element. See 
            the value attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLIsIndexElement">
      <summary>
            This element is used for single-line text input. See the ISINDEX element 
            definition in HTML 4.01. This element is deprecated in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLIsIndexElement.Form">
      <summary>
            Returns the <code>FORM</code> element containing this control. Returns 
            <code>null</code> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIsIndexElement.Prompt">
      <summary>
            The prompt message. See the prompt attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLLabelElement">
      <summary>
            Form field label text. See the LABEL element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLLabelElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLabelElement.AccessKey">
      <summary>
            A single character access key to give access to the form control. See 
            the accesskey attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLabelElement.For">
      <summary>
            This attribute links this label with another form control by 
            <c>id</c> attribute. See the for attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLLegendElement">
      <summary>
            Provides a caption for a <c>FIELDSET</c> grouping. See the LEGEND 
            element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLLegendElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLegendElement.AccessKey">
      <summary>
            A single character access key to give access to the form control. See 
            the accesskey attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLegendElement.Align">
      <summary>
            Text alignment relative to <c>FIELDSET</c>. See the align 
            attribute definition in HTML 4.01. This attribute is deprecated in 
            HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLLIElement">
      <summary>
            List item. See the LI element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLLIElement.Type">
      <summary>
            List item bullet style. See the type attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLIElement.Value">
      <summary>
            Reset sequence number when used in <c>OL</c>. See the value 
            attribute definition in HTML 4.01. This attribute is deprecated in 
            HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLLinkElement">
      <summary>
            The <c>LINK</c> element specifies a link to an external resource, and 
            defines this document's relationship to that resource (or vice versa). 
            See the LINK element definition in HTML 4.01 (see also the 
            <c>LinkStyle</c> interface in the StyleSheet module [<a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113">DOM Level 2 Style Sheets and CSS</a>]).
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="M:Aspose.Html.HTMLLinkElement.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.RelList">
      <summary>
            Returns a live DOMTokenList which contains tokens received from parsing the "rel" attribute.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Disabled">
      <summary>
            Enables/disables the link. This is currently only used for style sheet 
            links, and may be used to activate or deactivate style sheets. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Charset">
      <summary>
            The character encoding of the resource being linked to. See the charset 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Href">
      <summary>
            The URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] of the linked resource. See the href attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Hreflang">
      <summary>
            Language code of the linked resource. See the hreflang attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Media">
      <summary>
            Designed for use with one or more target media. See the media attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Rel">
      <summary>
            Forward link type. See the rel attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Rev">
      <summary>
            Reverse link type. See the rev attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Target">
      <summary>
            Frame to render the resource in. See the target attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Type">
      <summary>
            Advisory content type. See the type attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Sheet">
      <summary>
            Gets the associated style sheet.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLMapElement">
      <summary>
            Client-side image map. See the MAP element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLMapElement.Areas">
      <summary>
            The list of areas defined for the image map. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLMapElement.Name">
      <summary>
            Names the map (for use with <c>usemap</c>). See the name 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLMenuElement">
      <summary>
            Menu list. See the MENU element definition in HTML 4.01. This element is 
            deprecated in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLMenuElement.Compact">
      <summary>
            Reduce spacing between list items. See the compact attribute definition 
            in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLMetaElement">
      <summary>
            This contains generic meta-information about the document. See the META 
            element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLMetaElement.Content">
      <summary>
            Associated information. See the content attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLMetaElement.HttpEquiv">
      <summary>
            HTTP response header name [<a href="http://www.ietf.org/rfc/rfc2616.txt">IETF RFC 2616</a>]. See the http-equiv attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLMetaElement.Name">
      <summary>
            Meta information name. See the name attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLMetaElement.Scheme">
      <summary>
            Select form of content. See the scheme attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLModElement">
      <summary>
            Notice of modification to part of a document. See the INS and DEL element 
            definitions in HTML 4.01. 
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLModElement.Cite">
      <summary>
            A URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating a document that describes the reason for the change. 
            See the cite attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLModElement.DateTime">
      <summary>
            The date and time of the change. See the datetime attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLNoScriptElement">
      <summary>
            Script statements. See the NOSCRIPT element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="T:Aspose.Html.HTMLObjectElement">
      <summary>
            Generic embedded object.In principle, all properties on the object element 
            are read-write but in some environments some properties may be read-only 
            once the underlying object is instantiated. See the OBJECT element 
            definition in [<a href="http://www.w3.org/TR/1999/REC-html401-19991224">HTML 4.01</a>].
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns <c>null</c> if this control is not within the context of a form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Code">
      <summary>
            Applet class file. See the <c>code</c> attribute for HTMLAppletElement. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Align">
      <summary>
            Aligns this object (vertically or horizontally) with respect to its surrounding text. See the align attribute definition in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Archive">
      <summary>
            Space-separated list of archives. See the archive attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Border">
      <summary>
            Width of border around the object. See the border attribute definition in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.CodeBase">
      <summary>
            Base URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] for <c>classid</c>, <c>data</c>, and 
            <c>archive</c> attributes. See the codebase attribute definition
             in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.CodeType">
      <summary>
            Content type for data downloaded via <c>classid</c> attribute. 
            See the codetype attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.ClassId">
      <summary>
            Defines a class ID value as set in the Windows Registry or a URL
            </summary>
      <value>
            The class id.
            </value>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Data">
      <summary>
            A URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] specifying the location of the object's data. See the data 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Declare">
      <summary>
            Declare (for future reference), but do not instantiate, this object. 
            See the declare attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Height">
      <summary>
            Override height. See the height attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Hspace">
      <summary>
            Horizontal space, in pixels, to the left and right of this image, 
            applet, or object. See the hspace attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Name">
      <summary>
            Form control or object name when submitted with a form. See the name 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Standby">
      <summary>
            Message to render while loading the object. See the standby attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.TabIndex">
      <summary>
            Index that represents the element's position in the tabbing order. See 
            the tabindex attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Type">
      <summary>
            Content type for data downloaded via <c>data</c> attribute. See 
            the type attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.UseMap">
      <summary>
            Use client-side image map. See the usemap attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Vspace">
      <summary>
            Vertical space, in pixels, above and below this image, applet, or object. See the vspace attribute definition in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Width">
      <summary>
            Override width. See the width attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLOListElement">
      <summary>
            Ordered list. See the OL element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLOListElement.Compact">
      <summary>
            Reduce spacing between list items. See the compact attribute definition 
            in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOListElement.Start">
      <summary>
            Starting sequence number. See the start attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOListElement.Type">
      <summary>
            Numbering style. See the type attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLOptGroupElement">
      <summary>
            Group options together in logical subdivisions. See the OPTGROUP element 
            definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptGroupElement.Disabled">
      <summary>
            The control is unavailable in this context. See the disabled attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptGroupElement.Label">
      <summary>
            Assigns a label to this option group. See the label attribute definition
             in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLOptionElement">
      <summary>
            A selectable choice. See the OPTION element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.DefaultSelected">
      <summary>
            Represents the value of the HTML selected attribute. The value of this 
            attribute does not change if the state of the corresponding form 
            control, in an interactive user agent, changes. See the selected 
            attribute definition in HTML 4.01.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.Text">
      <summary>
            The text contained within the option element. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.Index">
      <summary>
            The index of this <c>OPTION</c> in its parent <c>SELECT</c>
            , starting from 0.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.Disabled">
      <summary>
            The control is unavailable in this context. See the disabled attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.Label">
      <summary>
            Option label for use in hierarchical menus. See the label attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.Selected">
      <summary>
            Represents the current state of the corresponding form control, in an 
            interactive user agent. Changing this attribute changes the state of 
            the form control, but does not change the value of the HTML selected 
            attribute of the element.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.Value">
      <summary>
            The current form control value. See the value attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLParagraphElement">
      <summary>
            Paragraphs. See the P element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLParagraphElement.Align">
      <summary>
            Horizontal text alignment. See the align attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLParamElement">
      <summary>
            Parameters fed to the <c>OBJECT</c> element. See the PARAM element 
            definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLParamElement.Name">
      <summary>
            The name of a run-time parameter. See the name attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLParamElement.Type">
      <summary>
            Content type for the <c>value</c> attribute when 
            <c>valuetype</c> has the value "ref". See the type attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLParamElement.Value">
      <summary>
            The value of a run-time parameter. See the value attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLParamElement.ValueType">
      <summary>
            Information about the meaning of the <c>value</c> attribute 
            value. See the valuetype attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLPreElement">
      <summary>
            Preformatted text. See the PRE element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLPreElement.Width">
      <summary>
            Fixed width for content. See the width attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLQuoteElement">
      <summary>
            For the <c>Q</c> and <c>BLOCKQUOTE</c> elements. See the Q 
            element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLQuoteElement.Cite">
      <summary>
            A URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating a source document or message. See the cite attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLScriptElement">
      <summary>
            Script statements. See the SCRIPT element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLScriptElement.Text">
      <summary>
            The script content of the element. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLScriptElement.Event">
      <summary>
            Reserved for future use. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLScriptElement.Charset">
      <summary>
            The character encoding of the linked resource. See the charset 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLScriptElement.Defer">
      <summary>
            Indicates that the user agent can defer processing of the script. See 
            the defer attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLScriptElement.Src">
      <summary>
            URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating an external script. See the src attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLScriptElement.Type">
      <summary>
            The content type of the script language. See the type attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLSelectElement">
      <summary>
            The select element allows the selection of an option. The contained options 
            can be directly accessed through the select element as a collection. See 
            the SELECT element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Type">
      <summary>
            The type of this form control. This is the string "select-multiple" when the multiple attribute is <c>true</c> and the string "select-one" when <c>false</c>.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.SelectedIndex">
      <summary>
            The ordinal index of the selected option, starting from 0. The value -1 
            is returned if no element is selected. If multiple options are 
            selected, the index of the first selected option is returned. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Value">
      <summary>
             The current form control value (i.e. the value of the currently 
            selected option), if multiple options are selected this is the value 
            of the first selected option. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Length">
      <summary>
             The number of options in this <c>SELECT</c>. 
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Form">
      <summary>
             The number of options in this <c>SELECT</c>. </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
               NOT_SUPPORTED_ERR: if setting the length is not allowed by the 
              implementation. 
            @version DOM Level 2 </exception>
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Options">
      <summary>
            The collection of <c>OPTION</c> elements contained by this 
            element. 
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Disabled">
      <summary>
            The control is unavailable in this context. See the disabled attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Multiple">
      <summary>
            If true, multiple <c>OPTION</c> elements may be selected in this <c>SELECT</c>. See the multiple attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Name">
      <summary>
            Form control or object name when submitted with a form. See the name 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Size">
      <summary>
            Number of visible rows. See the size attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.TabIndex">
      <summary>
            Index that represents the element's position in the tabbing order. See 
            the tabindex attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLStyleElement">
      <summary>
             Style information. See the STYLE element definition in HTML 4.01, the CSS 
            module [<a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113">DOM Level 2 Style Sheets and CSS</a>] and the <c>LinkStyle</c> interface in the StyleSheets 
            module [<a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113">DOM Level 2 Style Sheets and CSS</a>]. 
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLStyleElement.Disabled">
      <summary>
            Enables/disables the style sheet. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLStyleElement.Media">
      <summary>
            Designed for use with one or more target media. See the media attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLStyleElement.Type">
      <summary>
            The content type of the style sheet language. See the type attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLStyleElement.Sheet">
      <summary>
            Gets the associated style sheet.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTableCaptionElement">
      <summary>
            Table caption See the CAPTION element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCaptionElement.Align">
      <summary>
            Caption alignment with respect to the table. See the align attribute 
            definition in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTableCellElement">
      <summary>
            The object used to represent the <c>TH</c> and <c>TD</c> 
            elements. See the TD element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.CellIndex">
      <summary>
            The index of this cell in the row, starting from 0. This index is in 
            document tree order and not display order.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Abbr">
      <summary>
            Abbreviation for header cells. See the abbr attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Align">
      <summary>
            Horizontal alignment of data in cell. See the align attribute definition
             in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Axis">
      <summary>
            Names group of related headers. See the axis attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.BgColor">
      <summary>
            Cell background color. See the bgcolor attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Ch">
      <summary>
            Alignment character for cells in a column. See the char attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.ChOff">
      <summary>
            Offset of alignment character. See the charoff attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.ColSpan">
      <summary>
            Number of columns spanned by cell. See the colspan attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Headers">
      <summary>
            List of <c>id</c> attribute values for header cells. See the 
            headers attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Height">
      <summary>
            Cell height. See the height attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.NoWrap">
      <summary>
            Suppress word wrapping. See the nowrap attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.RowSpan">
      <summary>
            Number of rows spanned by cell. See the rowspan attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Scope">
      <summary>
            Scope covered by header cells. See the scope attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.VAlign">
      <summary>
            Vertical alignment of data in cell. See the valign attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Width">
      <summary>
            Cell width. See the width attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTableColElement">
      <summary>
            Regroups the <c>COL</c> and <c>COLGROUP</c> elements. See the 
            COL element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableColElement.Align">
      <summary>
            Horizontal alignment of cell data in column. See the align attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableColElement.Ch">
      <summary>
            Alignment character for cells in a column. See the char attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableColElement.ChOff">
      <summary>
            Offset of alignment character. See the charoff attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableColElement.Span">
      <summary>
            Indicates the number of columns in a group or affected by a grouping. 
            See the span attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableColElement.VAlign">
      <summary>
            Vertical alignment of cell data in column. See the valign attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableColElement.Width">
      <summary>
            Default column width. See the width attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTableElement">
      <summary>
            The create* and delete* methods on the table allow authors to construct and 
            modify tables. [<a href="http://www.w3.org/TR/1999/REC-html401-19991224">HTML 4.01</a>] specifies that only one of each of the 
            <c>CAPTION</c>, <c>THEAD</c>, and <c>TFOOT</c> elements 
            may exist in a table. Therefore, if one exists, and the createTHead() or 
            createTFoot() method is called, the method returns the existing THead or 
            TFoot element. See the TABLE element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.CreateTHead">
      <summary>
            Create a table header row or return an existing one. </summary>
      <returns> A new table header element (<c>THEAD</c>). </returns>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.DeleteTHead">
      <summary>
            Delete the header from the table, if one exists.
            </summary>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.CreateTFoot">
      <summary>
            Create a table footer row or return an existing one. </summary>
      <returns> A footer element (<c>TFOOT</c>). </returns>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.DeleteTFoot">
      <summary>
            Delete the footer from the table, if one exists.
            </summary>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.CreateCaption">
      <summary>
            Create a new table caption object or return an existing one. </summary>
      <returns> A <c>CAPTION</c> element. </returns>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.DeleteCaption">
      <summary>
            Delete the table caption, if one exists.
            </summary>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.InsertRow(System.Int32)">
      <summary>
            Insert a new empty row in the table. The new row is inserted 
            immediately before and in the same section as the current 
            <c>index</c>th row in the table. If <c>index</c> is -1 or 
            equal to the number of rows, the new row is appended. In addition, 
            when the table is empty the row is inserted into a <c>TBODY</c> 
            which is created and inserted into the table.A table row cannot be 
            empty according to [<a href="http://www.w3.org/TR/1999/REC-html401-19991224">HTML 4.01</a>]. </summary>
      <param name="index"> The row number where to insert a new row. This index 
              starts from 0 and is relative to the logical order (not document 
              order) of all the rows contained inside the table. </param>
      <returns> The newly created row. </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
              INDEX_SIZE_ERR: Raised if the specified index is greater than the 
              number of rows or if the index is a negative number other than -1.
            @version DOM Level 2 </exception>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.DeleteRow(System.Int32)">
      <summary>
            Delete a table row. </summary>
      <param name="index"> The index of the row to be deleted. This index starts 
              from 0 and is relative to the logical order (not document order) of 
              all the rows contained inside the table. If the index is -1 the 
              last row in the table is deleted. </param>
      <exception cref="T:Aspose.Html.Dom.DOMException">
              INDEX_SIZE_ERR: Raised if the specified index is greater than or 
              equal to the number of rows or if the index is a negative number 
              other than -1.
            @version DOM Level 2 </exception>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.Caption">
      <summary>
            Returns the table's <c>CAPTION</c>, or void if none exists. 
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.THead">
      <summary>
            Returns the table's <c>CAPTION</c>, or void if none exists. </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
               HIERARCHY_REQUEST_ERR: if the element is not a <c>CAPTION</c>. 
            @version DOM Level 2 </exception>
      <summary>
            Returns the table's <c>THEAD</c>, or <c>null</c> if none 
            exists. 
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.TFoot">
      <summary>
            Returns the table's <c>THEAD</c>, or <c>null</c> if none 
            exists. </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
               HIERARCHY_REQUEST_ERR: if the element is not a <c>THEAD</c>. 
            @version DOM Level 2 </exception>;
            <summary>
            Returns the table's <c>TFOOT</c>, or <c>null</c> if none 
            exists. 
            @version DOM Level 2
            </summary></member>
    <member name="P:Aspose.Html.HTMLTableElement.Rows">
      <summary>
            Returns the table's <c>TFOOT</c>, or <c>null</c> if none 
            exists. </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
               HIERARCHY_REQUEST_ERR: if the element is not a <c>TFOOT</c>. 
            @version DOM Level 2 </exception>
      <summary>
            Returns a collection of all the rows in the table, including all in 
            <c>THEAD</c>, <c>TFOOT</c>, all <c>TBODY</c> 
            elements. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.TBodies">
      <summary>
            Returns a collection of the table bodies (including implicit ones).
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.Align">
      <summary>
            Specifies the table's position with respect to the rest of the 
            document. See the align attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.BgColor">
      <summary>
            Cell background color. See the bgcolor attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.Border">
      <summary>
            The width of the border around the table. See the border attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.CellPadding">
      <summary>
            Specifies the horizontal and vertical space between cell content and 
            cell borders. See the cellpadding attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.CellSpacing">
      <summary>
            Specifies the horizontal and vertical separation between cells. See the 
            cellspacing attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.Frame">
      <summary>
            Specifies which external table borders to render. See the frame 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.Rules">
      <summary>
            Specifies which internal table borders to render. See the rules 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.Summary">
      <summary>
            Description about the purpose or structure of a table. See the summary 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.Width">
      <summary>
            Specifies the desired table width. See the width attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTableRowElement">
      <summary>
            A row in a table. See the TR element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="M:Aspose.Html.HTMLTableRowElement.InsertCell(System.Int32)">
      <summary>
            Insert an empty <c>TD</c> cell into this row. If 
            <c>index</c> is -1 or equal to the number of cells, the new 
            cell is appended. </summary>
      <param name="index"> The place to insert the cell, starting from 0. </param>
      <returns> The newly created cell. </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
              INDEX_SIZE_ERR: Raised if the specified <c>index</c> is greater 
              than the number of cells or if the index is a negative number other 
              than -1.
            @version DOM Level 2 </exception>
    </member>
    <member name="M:Aspose.Html.HTMLTableRowElement.DeleteCell(System.Int32)">
      <summary>
            Delete a cell from the current row. </summary>
      <param name="index"> The index of the cell to delete, starting from 0. If the 
              index is -1 the last cell in the row is deleted. </param>
      <exception cref="T:Aspose.Html.Dom.DOMException">
              INDEX_SIZE_ERR: Raised if the specified <c>index</c> is greater 
              than or equal to the number of cells or if the index is a negative 
              number other than -1.
            @version DOM Level 2 </exception>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.RowIndex">
      <summary>
            This is in logical order and not in document order. The 
            <c>rowIndex</c> does take into account sections (
            <c>THEAD</c>, <c>TFOOT</c>, or <c>TBODY</c>) within 
            the table, placing <c>THEAD</c> rows first in the index, 
            followed by <c>TBODY</c> rows, followed by <c>TFOOT</c> 
            rows.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.SectionRowIndex">
      <summary>
            The index of this row, relative to the current section (
            <c>THEAD</c>, <c>TFOOT</c>, or <c>TBODY</c>), 
            starting from 0.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.Cells">
      <summary>
            The collection of cells in this row. 
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.Align">
      <summary>
            Horizontal alignment of data within cells of this row. See the align 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.BgColor">
      <summary>
            Background color for rows. See the bgcolor attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.Ch">
      <summary>
            Alignment character for cells in a column. See the char attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.ChOff">
      <summary>
            Offset of alignment character. See the charoff attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.VAlign">
      <summary>
            Vertical alignment of data within cells of this row. See the valign 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTableSectionElement">
      <summary>
            The <c>THEAD</c>, <c>TFOOT</c>, and <c>TBODY</c> 
            elements. 
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="M:Aspose.Html.HTMLTableSectionElement.InsertRow(System.Int32)">
      <summary>
            Insert a row into this section. The new row is inserted immediately 
            before the current <c>index</c>th row in this section. If 
            <c>index</c> is -1 or equal to the number of rows in this 
            section, the new row is appended. </summary>
      <param name="index"> The row number where to insert a new row. This index 
              starts from 0 and is relative only to the rows contained inside 
              this section, not all the rows in the table. </param>
      <returns> The newly created row. </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
              INDEX_SIZE_ERR: Raised if the specified index is greater than the 
              number of rows of if the index is a negative number other than -1.
            @version DOM Level 2 </exception>
    </member>
    <member name="M:Aspose.Html.HTMLTableSectionElement.DeleteRow(System.Int32)">
      <summary>
            Delete a row from this section. </summary>
      <param name="index"> The index of the row to be deleted, or -1 to delete the 
              last row. This index starts from 0 and is relative only to the rows 
              contained inside this section, not all the rows in the table. </param>
      <exception cref="T:Aspose.Html.Dom.DOMException">
              INDEX_SIZE_ERR: Raised if the specified index is greater than or 
              equal to the number of rows or if the index is a negative number 
              other than -1.
            @version DOM Level 2 </exception>
    </member>
    <member name="P:Aspose.Html.HTMLTableSectionElement.Align">
      <summary>
            Horizontal alignment of data in cells. See the <c>align</c> 
            attribute for HTMLTheadElement for details. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableSectionElement.Ch">
      <summary>
            Alignment character for cells in a column. See the char attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableSectionElement.ChOff">
      <summary>
            Offset of alignment character. See the charoff attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableSectionElement.VAlign">
      <summary>
            Vertical alignment of data in cells. See the <c>valign</c> 
            attribute for HTMLTheadElement for details. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableSectionElement.Rows">
      <summary>
            The collection of rows in this table section. 
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTemplateElement">
      <summary>
            The template element
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTemplateElement.Content">
      <summary>
            Gets the instance of the <see cref="T:Aspose.Html.Dom.DocumentFragment" />.
            </summary>
      <value>
            The content.
            </value>
    </member>
    <member name="T:Aspose.Html.HTMLTextAreaElement">
      <summary>
            Multi-line text field. See the TEXTAREA element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.DefaultValue">
      <summary>
            Represents the contents of the element. The value of this attribute 
            does not change if the contents of the corresponding form control, in 
            an interactive user agent, changes.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.AccessKey">
      <summary>
            A single character access key to give access to the form control. See 
            the accesskey attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.Cols">
      <summary>
            Width of control (in characters). See the cols attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.Disabled">
      <summary>
            The control is unavailable in this context. See the disabled attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.Name">
      <summary>
            Form control or object name when submitted with a form. See the name 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.ReadOnly">
      <summary>
            This control is read-only. See the readonly attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.Rows">
      <summary>
            Number of text rows. See the rows attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.TabIndex">
      <summary>
            Index that represents the element's position in the tabbing order. See 
            the tabindex attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.Type">
      <summary>
            The type of this form control. This the string "textarea".
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.Value">
      <summary>
            Represents the current contents of the corresponding form control, in 
            an interactive user agent. Changing this attribute changes the 
            contents of the form control, but does not change the contents of the 
            element. If the entirety of the data can not fit into a single 
            <c>DOMString</c>, the implementation may truncate the data.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTitleElement">
      <summary>
            The title element. See the TITLE element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="T:Aspose.Html.HTMLUListElement">
      <summary>
            Unordered list. See the UL element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLUListElement.Compact">
      <summary>
            Reduce spacing between list items. See the compact attribute definition 
            in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLUListElement.Type">
      <summary>
            Bullet style. See the type attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLUnknownElement">
      <summary>
            The Unknown html element.
            </summary>
    </member>
    <member name="T:Aspose.Html.IHTMLOptionsCollection">
      <summary>
             An <c>HTMLOptionsCollection</c> is a list of nodes representing HTML 
            option element. An individual node may be accessed by either ordinal 
            index or the node's <c>name</c> or <c>id</c> attributes.  
            Collections in the HTML DOM are assumed to be live meaning that they are 
            automatically updated when the underlying document is changed. 
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            @since DOM Level 2
            </para></summary>
    </member>
    <member name="M:Aspose.Html.IHTMLOptionsCollection.NamedItem(System.String)">
      <summary>
            Method returns the indexth item in the collection. 
            http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection-namedItem
            </summary>
      <param name="name">The element name.</param>
      <returns>Returns node.</returns>
    </member>
    <member name="P:Aspose.Html.IHTMLOptionsCollection.Item(System.String)">
      <summary>
            Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.
            </summary>
      <param name="name">The element name.</param>
      <returns>Returns node.</returns>
    </member>
    <member name="P:Aspose.Html.IHTMLOptionsCollection.Item(System.Int32)">
      <summary>
            Method returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.
            http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection-namedItem
            </summary>
      <param name="index">The index.</param>
      <returns>Returns node.</returns>
    </member>
    <member name="P:Aspose.Html.IHTMLOptionsCollection.Length">
      <summary>
            The number of nodes in the list.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLDocument">
      <summary>
            An <c>HTMLDocument</c> is the root of the HTML hierarchy and holds 
            the entire content. Besides providing access to the hierarchy, it also 
            provides some convenience methods for accessing certain sets of 
            information from the document.
            <para>The following properties have been deprecated in favor of the 
            corresponding ones for the <c>BODY</c> element.
            In DOM Level 2, the method <c>getElementById</c> is inherited from the <c>Document</c> 
            interface where it was moved to.
            </para><para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class.
            </summary>
      <param name="configuration">The environment configuration.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(Aspose.Html.Url)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(Aspose.Html.Url)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="url">The document URL.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(Aspose.Html.Url,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(Aspose.Html.Url)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.String)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="address">The document address. It will be combined with the current directory path to form an absolute URL.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.String,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.String)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="address">The document address. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.String,System.String)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.String,System.String,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.String,System.String)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.String,Aspose.Html.Url)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.String,Aspose.Html.Url)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.String,Aspose.Html.Url,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.String,Aspose.Html.Url)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document.</param>
      <param name="configuration">The environment configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.IO.Stream,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.IO.Stream,System.String)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            Document loading starts from the current position in the stream.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.IO.Stream,System.String,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.IO.Stream,System.String)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            Document loading starts from the current position in the stream.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The environment configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.IO.Stream,Aspose.Html.Url)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.IO.Stream,Aspose.Html.Url)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            Document loading starts from the current position in the stream.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.IO.Stream,Aspose.Html.Url,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.IO.Stream,Aspose.Html.Url)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            Document loading starts from the current position in the stream.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document.</param>
      <param name="configuration">The environment configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(Aspose.Html.Net.RequestMessage)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(Aspose.Html.Net.RequestMessage)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="request">The request message.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(Aspose.Html.Net.RequestMessage,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(Aspose.Html.Net.RequestMessage)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="request">The request message.</param>
      <param name="configuration">The environment configuration.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.GetOverrideStyle(Aspose.Html.Dom.Element,System.String)">
      <summary>
            This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element.
            </summary>
      <param name="elt">The element whose style is to be modified. This parameter cannot be null.</param>
      <param name="pseudoElt">The pseudo-element or null if none.</param>
      <returns>
            The override style declaration
            </returns>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(Aspose.Html.Url)">
      <summary>
            Saves the document to local file specified by <c>url</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="url">Local URL to output file.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>url</c> is not a valid local file URL.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(Aspose.Html.IO.IOutputStorage)">
      <summary>
            Saves the document content and resources to the output storage.
            </summary>
      <param name="outputStorage">The output storage <see cref="T:Aspose.Html.IO.IOutputStorage" />.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(System.String)">
      <summary>
            Saves the document to local file specified by <c>path</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="path">Local path to output file.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>path</c> is not a valid local file path.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(System.String,Aspose.Html.Saving.HTMLSaveFormat)">
      <summary>
            Saves the document to local file specified by <c>path</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="path">Local path to output file.</param>
      <param name="saveFormat">Format in which document is saved.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>path</c> is not a valid local file path.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(Aspose.Html.Url,Aspose.Html.Saving.HTMLSaveFormat)">
      <summary>
            Saves the document to local file specified by <c>url</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="url">Local URL to output file.</param>
      <param name="saveFormat">Format in which document is saved.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>url</c> is not a valid local file URL.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(Aspose.Html.IO.IOutputStorage,Aspose.Html.Saving.HTMLSaveFormat)">
      <summary>
            Saves the document content and resources to the output storage.
            </summary>
      <param name="outputStorage">The output storage <see cref="T:Aspose.Html.IO.IOutputStorage" />.</param>
      <param name="saveFormat">Format in which document is saved.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(System.String,Aspose.Html.Saving.HTMLSaveOptions)">
      <summary>
            Saves the document to local file specified by <c>path</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="path">Local path to output file.</param>
      <param name="saveOptions">HTML save options.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>path</c> is not a valid local file path.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(Aspose.Html.Url,Aspose.Html.Saving.HTMLSaveOptions)">
      <summary>
            Saves the document to local file specified by <c>url</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="url">Local URL to output file.</param>
      <param name="saveOptions">HTML save options.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>url</c> is not a valid local file URL.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(Aspose.Html.IO.IOutputStorage,Aspose.Html.Saving.HTMLSaveOptions)">
      <summary>
            Saves the document content and resources to the output storage.
            </summary>
      <param name="outputStorage">The output storage <see cref="T:Aspose.Html.IO.IOutputStorage" />.</param>
      <param name="saveOptions">HTML save options.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(System.String,Aspose.Html.Saving.MarkdownSaveOptions)">
      <summary>
            Saves the document to local file specified by <c>path</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="path">Local path to output file.</param>
      <param name="saveOptions">Markdown save options.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>path</c> is not a valid local file path.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(Aspose.Html.Url,Aspose.Html.Saving.MarkdownSaveOptions)">
      <summary>
            Saves the document to local file specified by <c>url</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="url">Local URL to output file.</param>
      <param name="saveOptions">Markdown save options.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>url</c> is not a valid local file URL.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(Aspose.Html.IO.IOutputStorage,Aspose.Html.Saving.MarkdownSaveOptions)">
      <summary>
            Saves the document content and resources to the output storage.
            </summary>
      <param name="outputStorage">The output storage <see cref="T:Aspose.Html.IO.IOutputStorage" />.</param>
      <param name="saveOptions">Markdown save options.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(System.String,Aspose.Html.Saving.MHTMLSaveOptions)">
      <summary>
            Saves the document to local file specified by <c>path</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="path">Local path to output file.</param>
      <param name="saveOptions">MHTML save options.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>path</c> is not a valid local file path.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(Aspose.Html.Url,Aspose.Html.Saving.MHTMLSaveOptions)">
      <summary>
            Saves the document to local file specified by <c>url</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="url">Local URL to output file.</param>
      <param name="saveOptions">MHTML save options.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>url</c> is not a valid local file URL.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(Aspose.Html.IO.IOutputStorage,Aspose.Html.Saving.MHTMLSaveOptions)">
      <summary>
            Saves the document content and resources to the output storage.
            </summary>
      <param name="outputStorage">The output storage <see cref="T:Aspose.Html.IO.IOutputStorage" />.</param>
      <param name="saveOptions">MHTML save options.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.RenderTo(Aspose.Html.Rendering.IDevice)">
      <summary>
            This method is used to print the contents of the current document to the specified device.
            </summary>
      <param name="device">The user device.</param>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Title">
      <summary>
            The title of a document as specified by the <c>TITLE</c> element 
            in the head of the document. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Referrer">
      <summary>
            Returns the URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] of the page that linked to this page. The value is an 
            empty string if the user navigated to the page directly (not through 
            a link, but, for example, via a bookmark). 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Domain">
      <summary>
            The domain name of the server that served the document, or 
            <c>null</c> if the server cannot be identified by a domain 
            name. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Body">
      <summary>
            The element that contains the content for the document. In documents 
            with <c>BODY</c> contents, returns the <c>BODY</c> 
            element. In frameset documents, this returns the outermost 
            <c>FRAMESET</c> element. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Images">
      <summary>
            A collection of all the <c>IMG</c> elements in a document. The 
            behavior is limited to <c>IMG</c> elements for backwards 
            compatibility. As suggested by [<a href="http://www.w3.org/TR/1999/REC-html401-19991224">HTML 4.01</a>], to include images, authors may use 
            the <c>OBJECT</c> element or the <c>IMG</c> element. 
            Therefore, it is recommended not to use this attribute to find the 
            images in the document but <c>getElementsByTagName</c> with 
            HTML 4.01 or <c>getElementsByTagNameNS</c> with XHTML 1.0.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Applets">
      <summary>
            A collection of all the <c>OBJECT</c> elements that include 
            applets and <c>APPLET</c> (deprecated) elements in a document. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Links">
      <summary>
            A collection of all <c>AREA</c> elements and anchor (
            <c>A</c>) elements in a document with a value for the 
            <c>href</c> attribute. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Forms">
      <summary>
            A collection of all the forms of a document. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Anchors">
      <summary>
             A collection of all the anchor (<c>A</c>) elements in a document 
            with a value for the <c>name</c> attribute. For reasons of 
            backward compatibility, the returned set of anchors only contains 
            those anchors created with the <c>name</c> attribute, not those 
            created with the <c>id</c> attribute. Note that in [<a href="http://www.w3.org/TR/2002/REC-xhtml1-20020801">XHTML 1.0</a>], the 
            <c>name</c> attribute (see section 4.10) has no semantics and 
            is only present for legacy user agents: the <c>id</c> attribute 
            is used instead. Users should prefer the iterator mechanisms provided 
            by [<a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113">DOM Level 2 Traversal</a>] instead. 
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLElement">
      <summary>
             All HTML element interfaces derive from this class. Elements that only 
            expose the HTML core attributes are represented by the base 
            <c>HTMLElement</c> interface. These elements are as follows: 
            special: SUB, SUP, SPAN, BDOfont: TT, I, B, U, S, STRIKE, BIG, SMALL
            phrase: EM, STRONG, DFN, CODE, SAMP, KBD, VAR, CITE, ACRONYM, ABBRlist: 
            DD, DTNOFRAMES, NOSCRIPTADDRESS, CENTERThe <c>style</c> attribute 
            of an HTML element is accessible through the 
            <c>ElementCSSInlineStyle</c> interface which is defined in the CSS 
            module [<a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113">DOM Level 2 Style Sheets and CSS</a>]. 
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLElement.Id">
      <summary>
            The element's identifier. See the id attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLElement.Title">
      <summary>
            The element's advisory title. See the title attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLElement.Lang">
      <summary>
            Language code defined in RFC 1766. See the lang attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLElement.Dir">
      <summary>
            Specifies the base direction of directionally neutral text and the 
            directionality of tables. See the dir attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLElement.ClassName">
      <summary>
            The class attribute of the element. This attribute has been renamed due 
            to conflicts with the "class" keyword exposed by many languages. See 
            the class attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLElement.Style">
      <summary>
            Represents a style attribute that allows author to directly apply style information to specific element.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnAbort">
      <summary>
            Gets or sets event handler for OnAbort event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnBlur">
      <summary>
            Gets or sets event handler for OnBlur event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnCancel">
      <summary>
            Gets or sets event handler for OnCancel event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnCanplay">
      <summary>
            Gets or sets event handler for OnCanplay event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnCanPlayThrough">
      <summary>
            Gets or sets event handler for OnCanPlayThrough event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnChange">
      <summary>
            Gets or sets event handler for OnChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnClick">
      <summary>
            Gets or sets event handler for OnClick event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnCueChange">
      <summary>
            Gets or sets event handler for OnCueChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnDblClick">
      <summary>
            Gets or sets event handler for OnDblClick event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnDurationChange">
      <summary>
            Gets or sets event handler for OnDurationChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnEmptied">
      <summary>
            Gets or sets event handler for OnEmptied event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnEnded">
      <summary>
            Gets or sets event handler for OnEnded event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnError">
      <summary>
            Gets or sets event handler for OnError event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnFocus">
      <summary>
            Gets or sets event handler for OnFocus event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnInput">
      <summary>
            Gets or sets event handler for OnInput event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnInvalid">
      <summary>
            Gets or sets event handler for OnInvalid event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnKeyDown">
      <summary>
            Gets or sets event handler for OnKeyDown event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnKeyPress">
      <summary>
            Gets or sets event handler for OnKeyPress event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnKeyUp">
      <summary>
            Gets or sets event handler for OnKeyUp event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnLoad">
      <summary>
            Gets or sets event handler for OnLoad event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnLoadedData">
      <summary>
            Gets or sets event handler for OnLoadedData event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnLoadedMetadata">
      <summary>
            Gets or sets event handler for OnLoadedMetadata event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnLoadStart">
      <summary>
            Gets or sets event handler for OnLoadStart event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseDown">
      <summary>
            Gets or sets event handler for OnMouseDown event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseEnter">
      <summary>
            Gets or sets event handler for OnMouseEnter event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseLeave">
      <summary>
            Gets or sets event handler for OnMouseLeave event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseMove">
      <summary>
            Gets or sets event handler for OnMouseMove event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseOut">
      <summary>
            Gets or sets event handler for OnMouseOut event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseOver">
      <summary>
            Gets or sets event handler for OnMouseOver event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseUp">
      <summary>
            Gets or sets event handler for OnMouseUp event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseWheel">
      <summary>
            Gets or sets event handler for OnMouseWheel event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnPause">
      <summary>
            Gets or sets event handler for OnPause event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnPlay">
      <summary>
            Gets or sets event handler for OnPlay event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnPlaying">
      <summary>
            Gets or sets event handler for OnPlaying event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnProgress">
      <summary>
            Gets or sets event handler for OnProgress event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnRateChange">
      <summary>
            Gets or sets event handler for OnRateChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnReset">
      <summary>
            Gets or sets event handler for OnReset event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnResize">
      <summary>
            Gets or sets event handler for OnResize event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnScroll">
      <summary>
            Gets or sets event handler for OnScroll event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnSeeked">
      <summary>
            Gets or sets event handler for OnSeeked event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnSeeking">
      <summary>
            Gets or sets event handler for OnSeeking event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnSelect">
      <summary>
            Gets or sets event handler for OnSelect event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnShow">
      <summary>
            Gets or sets event handler for OnShow event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnStalled">
      <summary>
            Gets or sets event handler for OnStalled event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnSubmit">
      <summary>
            Gets or sets event handler for OnSubmit event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnSuspend">
      <summary>
            Gets or sets event handler for OnSuspend event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnTimeUpdate">
      <summary>
            Gets or sets event handler for OnTimeUpdate event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnToggle">
      <summary>
            Gets or sets event handler for OnToggle event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnVolumeChange">
      <summary>
            Gets or sets event handler for OnVolumeChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnWaiting">
      <summary>
            Gets or sets event handler for OnWaiting event.
            </summary>
    </member>
    <member name="T:Aspose.Html.NamespaceDoc">
      <summary>
            The <b>Aspose.Html</b> namespace contains classes and methods to
            manipulate HTML documents, whether simple or complex and on the fly.
            <b>Aspose.HTML</b> for .NET allows developers to Insert, Remove,
            Replace HTML nodes, extract CSS style information,
            Navigate through HTML document either by NodeIterator,
            TreeWalker that are provided by Traversal Specifications,
            XPath or CSS selector queries. It also offers the scripting which allows to
            manipulate HTML DOM via JavaScript. As well as HTML, this API also provides
            the capabilities to load EPUB and MHTML. Aspose APIs are famous for their
            inter file format conversion features and this API also provides
            the capabilities to load HTML file and render the output in PDF,
            XPS and raster image formats including JPEG, PNG, BMP and TIFF.
            </summary>
    </member>
    <member name="T:Aspose.Html.NamespaceGroupDoc">
      <summary>
            This root group contains namespaces and namespace groups
            which are responsible for core functionality operations with HTML documents
            as well as rendering, saving, high level conversions and
            additional helper and services activities packed
            into appropriate namespaces and namespace groups. 
            </summary>
    </member>
    <member name="T:Aspose.Html.Saving.HTMLSaveFormat">
      <summary>
            Specifies format in which document is saved.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.HTMLSaveFormat.Original">
      <summary>
            The document will be saved in its original format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.HTMLSaveFormat.Markdown">
      <summary>
            Document will be saved as Markdown.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.HTMLSaveFormat.MHTML">
      <summary>
            Document will be saved as MHTML.
            </summary>
    </member>
    <member name="T:Aspose.Html.Saving.HTMLSaveOptions">
      <summary>
            Represents HTML save options.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.HTMLSaveOptions.AUTO">
      <summary>
            The output document type will be selected automatically.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.HTMLSaveOptions.HTML">
      <summary>
            The document will be saved as HTML.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.HTMLSaveOptions.XHTML">
      <summary>
            The document will be saved as XHTML.
            </summary>
    </member>
    <member name="P:Aspose.Html.Saving.HTMLSaveOptions.DocumentType">
      <summary>
            Gets or sets the output document type.
            </summary>
    </member>
    <member name="T:Aspose.Html.Saving.MarkdownFeatures">
      <summary>
            A <see cref="T:Aspose.Html.Saving.MarkdownFeatures" /> flag set is a set of zero or more of the following flags, which are used to select elements converted to markdown.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.InlineHTML">
      <summary>
            This flag enables HTML elements inlining. If this flag is set than block level elements (such as <c>div</c>) whose <c>markdown</c> attribute value equals <c>inline</c> will be inserted in to resulting markdown.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.AutomaticParagraph">
      <summary>
            This flag enables conversion of <c>paragraph</c> elements. Content of such elements will be placed on separate lines, so markdown handlers will wrap it.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.Header">
      <summary>
            This flag enables conversion of <c>header</c> elements.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.Blockquote">
      <summary>
            This flag enables conversion of <c>blockquote</c> elements.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.List">
      <summary>
            This flag enables conversion of <c>list</c> elements.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.CodeBlock">
      <summary>
            This flag enables conversion of code blocks. Code block consists of 2 elements <c>pre</c> and <c>code</c>, content of such construction is processes "as is". 
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.HorizontalRule">
      <summary>
            This flag enables conversion of <c>horizontal rules</c>.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.Link">
      <summary>
            This flag enables conversion of <c>a</c> elements.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.Emphasis">
      <summary>
            This flag enables conversion of <c>emphasis</c> elements.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.InlineCode">
      <summary>
            This flag enables conversion of <c>code</c> elements.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.Image">
      <summary>
            This flag enables conversion of <c>img</c> elements.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.LineBreak">
      <summary>
            This flag enables conversion of <c>br</c> elements.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.Video">
      <summary>
            This flag enables conversion of <c>video</c> elements.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.Table">
      <summary>
            This flag enables conversion of <c>table</c> elements.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.TaskList">
      <summary>
            This flag enables conversion of task lists. Task list consists of <c>input</c> element, which must be the first child of <c>list</c> element and whose <c>type</c> attribute value should equal <c>checkbox</c>.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.Strikethrough">
      <summary>
            This flag enables conversion of <c>del</c> elements.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFeatures.Strong">
      <summary>
            This flag enables conversion of <c>strong</c> elements.
            </summary>
    </member>
    <member name="T:Aspose.Html.Saving.MarkdownFormatter">
      <summary>
            Specifies the way output will be formatted.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFormatter.Default">
      <summary>
            Document will be saved using default markdown style.
            </summary>
    </member>
    <member name="F:Aspose.Html.Saving.MarkdownFormatter.Git">
      <summary>
            Document will be saved using Git markdown style.
            </summary>
    </member>
    <member name="T:Aspose.Html.Saving.MarkdownSaveOptions">
      <summary>
            Represents Markdown save options.
            </summary>
    </member>
    <member name="M:Aspose.Html.Saving.MarkdownSaveOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Saving.MarkdownSaveOptions" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Html.Saving.MarkdownSaveOptions.Features">
      <summary>
            Flag set that controls which elements are converted to markdown.
            </summary>
    </member>
    <member name="P:Aspose.Html.Saving.MarkdownSaveOptions.Formatter">
      <summary>
            Gets or sets the markdown formatting style.
            </summary>
    </member>
    <member name="P:Aspose.Html.Saving.MarkdownSaveOptions.Default">
      <summary>
            Returns set of options which are compatible with default Markdown documentation.
            </summary>
    </member>
    <member name="P:Aspose.Html.Saving.MarkdownSaveOptions.Git">
      <summary>
            Returns set of options which are compatible with GitLab Flavored Markdown.
            </summary>
    </member>
    <member name="T:Aspose.Html.Saving.MHTMLSaveOptions">
      <summary>
            Represents MHTML save options.
            </summary>
    </member>
    <member name="T:Aspose.Html.Saving.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Saving</b> namespace is presented by
            data classes for description of specific save options at
            conversion/saving process.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Rendering</b> namespace consists of
            numerous renderer objects as well as appropriate
            low level options classes which are responsible to
            render documents/files into IDevice implementation.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.NamespaceGroupDoc">
      <summary>
            This namespace group contains namespaces and namespace groups
            which are responsible for processing of multiple image formats.
            It also includes namespaces with
            Pdf and Xps formats processing functionality. 
            </summary>
    </member>
    <member name="T:Aspose.Html.Loading.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Loading</b> namespace contains
            data classes for description of specific load options
            at conversion/merging process.
            </summary>
    </member>
    <member name="T:Aspose.Html.Forms.ButtonElement">
      <summary>
             The ButtonElement represents a wrapper that is associated with the HTMLButtonElement.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.ButtonElement.Name">
      <summary>
            Represent the name attribute of the Button element.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.ButtonElement.Id">
      <summary>
            Represents the Id attribute of the Button element.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.ButtonElement.Value">
      <summary>
            Represents the string value of the button element that is directly mapped to the 'value' attribute.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.ButtonElement.Type">
      <summary>
            Type of the form control.
            </summary>
    </member>
    <member name="T:Aspose.Html.Forms.ButtonType">
      <summary>
            This enumeration represents states of the button.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.ButtonType.Submit">
      <summary>
            The 'submit' state of the button.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.ButtonType.Reset">
      <summary>
            The 'reset' state of the button.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.ButtonType.Button">
      <summary>
            The default 'button' state.
            </summary>
    </member>
    <member name="T:Aspose.Html.Forms.DataListElement">
      <summary>
            The DataListElement represents a wrapper that is associated with the HTMLDataListElement
            </summary>
    </member>
    <member name="M:Aspose.Html.Forms.DataListElement.#ctor(Aspose.Html.HTMLDataListElement)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Forms.DataListElement" /> class.
            </summary>
      <param name="element">The element.</param>
    </member>
    <member name="P:Aspose.Html.Forms.DataListElement.Options">
      <summary>
            Returns a list of options
            </summary>
    </member>
    <member name="T:Aspose.Html.Forms.FormEditor">
      <summary>
            This class represents the editor over the <see cref="T:Aspose.Html.HTMLFormElement" /> that creates a easier way for .net developers to edit the html forms.
            </summary>
    </member>
    <member name="M:Aspose.Html.Forms.FormEditor.CreateNew(Aspose.Html.HTMLDocument)">
      <summary>
            Creates a new <see cref="T:Aspose.Html.HTMLFormElement" /> and associated it with <see cref="T:Aspose.Html.Forms.FormEditor" />. <see cref="T:Aspose.Html.HTMLFormElement" /> is created in the detached from the document state; in order to attach it to the document, please select proper location and use <see cref="M:Aspose.Html.Dom.Node.AppendChild(Aspose.Html.Dom.Node)" /> method.
            </summary>
      <param name="document">The <see cref="T:Aspose.Html.HTMLDocument" />.</param>
      <returns>Return a new instance of the <see cref="T:Aspose.Html.Forms.FormEditor" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormEditor.Create(Aspose.Html.HTMLFormElement)">
      <summary>
            Creates a new <see cref="T:Aspose.Html.Forms.FormEditor" /> based on <see cref="T:Aspose.Html.HTMLFormElement" />.
            </summary>
      <param name="form">The html form element</param>
      <returns>Return a new instance of the <see cref="T:Aspose.Html.Forms.FormEditor" /> class</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormEditor.Create(Aspose.Html.HTMLDocument,System.Int32)">
      <summary>
            Creates a new <see cref="T:Aspose.Html.Forms.FormEditor" /> based on <see cref="T:Aspose.Html.HTMLFormElement" /> selected from the <see cref="P:Aspose.Html.HTMLDocument.Forms" /> collection by index.
            </summary>
      <param name="document">The document.</param>
      <param name="index">The index inside the forms collection.</param>
      <exception cref="T:Aspose.Html.Dom.DOMException">The exception is occured if index out of the range.</exception>
      <returns>
            Return a new instance of the <see cref="T:Aspose.Html.Forms.FormEditor" /> class
            </returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormEditor.Create(Aspose.Html.HTMLDocument,System.String)">
      <summary>
            Creates a new <see cref="T:Aspose.Html.Forms.FormEditor" /> based on <see cref="T:Aspose.Html.HTMLFormElement" /> selected from the document by id.
            </summary>
      <param name="document">The document.</param>
      <param name="id">The identifier.</param>
            /// <exception cref="T:Aspose.Html.Dom.DOMException">The exception is occured if there is no element by specified Id or element is not a form type.</exception><returns>
            Return a new instance of the <see cref="T:Aspose.Html.Forms.FormEditor" /> class
            </returns></member>
    <member name="M:Aspose.Html.Forms.FormEditor.Add``1(System.String)">
      <summary>
            Creates a new <see cref="T:Aspose.Html.HTMLElement" /> and adds it to the end of the form.
            </summary>
      <typeparam name="T">Type of form element</typeparam>
      <param name="name">Name of the element</param>
      <returns>A new instance of form element</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormEditor.AddInput(System.String)">
      <summary>
            Creates a new <see cref="T:Aspose.Html.Forms.InputElement" /> and adds it to the end of the form.
            </summary>
      <param name="name">Name of input element</param>
      <returns>Returns a new created <see cref="T:Aspose.Html.Forms.InputElement" />.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormEditor.AddInput(System.String,Aspose.Html.Forms.InputElementType)">
      <summary>
            Creates a new <see cref="T:Aspose.Html.Forms.InputElement" /> and adds it to the end of the form.
            </summary>
      <param name="name">Name of input element</param>
      <param name="type">Type of input element</param>
      <returns>Returns a new created <see cref="T:Aspose.Html.Forms.InputElement" />.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormEditor.GetElement``1(System.Int32)">
      <summary>
            Returns the element by specified index.
            </summary>
      <typeparam name="T">Type of the form element</typeparam>
      <param name="index">The index of the element</param>
      <returns>Returns the element.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormEditor.GetElement``1(System.String)">
      <summary>
            Returns the element by specified name.
            </summary>
      <typeparam name="T">Type of the form element</typeparam>
      <param name="name">The element name</param>
      <returns>Returns the element.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormEditor.Fill(System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>
            This method fills the whole form with the specified values.
            </summary>
      <param name="values">The values represented by key-value pair that is contains name and value for form elements.</param>
    </member>
    <member name="M:Aspose.Html.Forms.FormEditor.GetEnumerator">
      <summary>
            Gets the enumerator.
            </summary>
      <returns>Returns the FormElements enumerator.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormEditor.Dispose">
      <summary>
            Releases unmanaged and managed resources.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.FormEditor.Form">
      <summary>
            The original <see cref="T:Aspose.Html.HTMLFormElement" /> that is associated with current instance of <see cref="T:Aspose.Html.Forms.FormEditor" />.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.FormEditor.Count">
      <summary>
            The number of form controls in the form.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.FormEditor.Method">
      <summary>
            HTTP method [<a href="http://www.ietf.org/rfc/rfc2616.txt">IETF RFC 2616</a>] used to submit form. See the method attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.FormEditor.Action">
      <summary>
            Server-side form handler. See the action attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.FormEditor.Item(System.Int32)">
      <summary>
            Returns the element by specified index.
            </summary>
      <param name="index">The index of the element</param>
      <returns>Returns the element.</returns>
    </member>
    <member name="P:Aspose.Html.Forms.FormEditor.Item(System.String)">
      <summary>
            Returns the element by specified name or id.
            </summary>
      <param name="name">The element name</param>
      <returns>Returns the element.</returns>
    </member>
    <member name="T:Aspose.Html.Forms.FormElement`1">
      <summary>
            The <see cref="T:Aspose.Html.Forms.FormElement" /> represent the generic field
            </summary>
      <typeparam name="T">Type of form control elements</typeparam>
    </member>
    <member name="M:Aspose.Html.Forms.FormElement`1.#ctor(`0,Aspose.Html.Forms.FormElementType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Forms.FormElement`1" /> class.
            </summary>
      <param name="element">The element.</param>
      <param name="type">The form element type.</param>
    </member>
    <member name="P:Aspose.Html.Forms.FormElement`1.HtmlElement">
      <summary>
            Gets the <see cref="T:Aspose.Html.HTMLElement" />.
            </summary>
      <value>
            The HTML element.
            </value>
    </member>
    <member name="T:Aspose.Html.Forms.FormElement">
      <summary>
            Represents base class for form elements.
            </summary>
    </member>
    <member name="M:Aspose.Html.Forms.FormElement.#ctor(Aspose.Html.Forms.FormElementType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Forms.FormElement" /> class.
            </summary>
      <param name="type">The form element type.</param>
    </member>
    <member name="P:Aspose.Html.Forms.FormElement.ElementType">
      <summary>
            Gets the type of the element.
            </summary>
      <value>
            The type of the element.
            </value>
    </member>
    <member name="P:Aspose.Html.Forms.FormElement.Name">
      <summary>
            Gets or sets the name of the form element.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Aspose.Html.Forms.FormElement.Id">
      <summary>
            Gets or sets the identifier of the form element.
            </summary>
      <value>
            The identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Forms.FormElement.Value">
      <summary>
            The value of field
            </summary>
    </member>
    <member name="T:Aspose.Html.Forms.FormElementType">
      <summary>
            Represents an enumeration of the Form Elements types and their corresponding to the HTML Elements
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.FormElementType.Unknown">
      <summary>
            Corresponding to any HTML Element that is not been converting to the any of implemented <see cref="T:Aspose.Html.Forms.FormElement" />.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.FormElementType.Input">
      <summary>
            Corresponding to the <see cref="T:Aspose.Html.HTMLInputElement" />.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.FormElementType.Select">
      <summary>
            Corresponding to the <see cref="T:Aspose.Html.HTMLSelectElement" />.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.FormElementType.TextArea">
      <summary>
            Corresponding to the <see cref="T:Aspose.Html.HTMLTextAreaElement" />.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.FormElementType.Option">
      <summary>
            Corresponding to the <see cref="T:Aspose.Html.HTMLOptionElement" />.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.FormElementType.Button">
      <summary>
            Corresponding to the <see cref="T:Aspose.Html.HTMLButtonElement" />.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.FormElementType.DataList">
      <summary>
            Corresponding to the <see cref="T:Aspose.Html.HTMLDataListElement" />.
            </summary>
    </member>
    <member name="T:Aspose.Html.Forms.FormSubmitter">
      <summary>
            This class allows to prepare specified <see cref="T:Aspose.Html.HTMLFormElement" />, collects values from the form element, submit them to the remote server and receives a response.
            </summary>
    </member>
    <member name="M:Aspose.Html.Forms.FormSubmitter.#ctor(Aspose.Html.HTMLFormElement)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Forms.FormSubmitter" /> class based on <see cref="T:Aspose.Html.HTMLFormElement" />.
            </summary>
      <param name="form">The html form element.</param>
    </member>
    <member name="M:Aspose.Html.Forms.FormSubmitter.#ctor(Aspose.Html.HTMLDocument,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Forms.FormSubmitter" /> class based on <see cref="T:Aspose.Html.HTMLFormElement" /> selected by index from <see cref="T:Aspose.Html.HTMLDocument" />.
            </summary>
      <param name="document">The HTML document.</param>
      <param name="index">The index of the form.</param>
    </member>
    <member name="M:Aspose.Html.Forms.FormSubmitter.#ctor(Aspose.Html.HTMLDocument,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Forms.FormSubmitter" /> class based on <see cref="T:Aspose.Html.HTMLFormElement" /> selected by identifier from <see cref="T:Aspose.Html.HTMLDocument" />.
            </summary>
      <param name="document">The HTML document.</param>
      <param name="id">The element identifier.</param>
    </member>
    <member name="M:Aspose.Html.Forms.FormSubmitter.#ctor(Aspose.Html.Forms.FormEditor)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Forms.FormSubmitter" /> class.
            </summary>
      <param name="editor">The FormEditor.</param>
    </member>
    <member name="M:Aspose.Html.Forms.FormSubmitter.Submit">
      <summary>
            Submits the form data to the server.
            </summary>
      <returns>The result of the submission.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormSubmitter.Submit(System.Net.CookieContainer)">
      <summary>
            Submits the form data to the server with specified cookies.
            </summary>
      <param name="cookieContainer">The cookie container.</param>
      <returns>The result of the submission.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormSubmitter.Submit(System.Net.ICredentials)">
      <summary>
            Submits the form data to the server with specified user credentials.
            </summary>
      <param name="credentials">The authentication information for the request.</param>
      <returns>The result of the submission.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormSubmitter.Submit(System.Net.ICredentials,System.Net.CookieContainer)">
      <summary>
             Submits the form data to the server with specified user credentials and cookies.
            </summary>
      <param name="credentials">The authentication information for the request.</param>
      <param name="cookieContainer">The cookie container.</param>
      <returns>The result of the submission.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormSubmitter.Submit(System.TimeSpan)">
      <summary>
            Submits the form data to the server with specified timeout.
            </summary>
      <param name="timeout">The number of milliseconds to wait before the request times out.</param>
      <returns>The result of the submission.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormSubmitter.Submit(System.TimeSpan,System.Net.CookieContainer)">
      <summary>
            Submits the form data to the server with specified timeout and cookies.
            </summary>
      <param name="timeout">The number of milliseconds to wait before the request times out.</param>
      <param name="cookieContainer">The cookie container.</param>
      <returns>The result of the submission.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormSubmitter.Submit(System.Net.ICredentials,System.TimeSpan)">
      <summary>
            Submits the form data to the server with specified user credentials and timeout.
            </summary>
      <param name="credentials">The authentication information for the request.</param>
      <param name="timeout">The number of milliseconds to wait before the request times out.</param>
      <returns>The result of the submission.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormSubmitter.Submit(System.Net.ICredentials,System.TimeSpan,System.Net.CookieContainer)">
      <summary>
             Submits the form data to the server with specified user credentials, timeout and cookies.
            </summary>
      <param name="credentials">The authentication information for the request.</param>
      <param name="timeout">The number of milliseconds to wait before the request times out.</param>
      <param name="cookieContainer">The cookie container.</param>
      <returns>The result of the submission.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormSubmitter.Submit(System.Net.ICredentials,System.TimeSpan,System.Boolean)">
      <summary>
            Submits the form data to the server with specified user credentials.
            </summary>
      <param name="credentials">The authentication information for the request.</param>
      <param name="timeout">The number of milliseconds to wait before the request times out.</param>
      <param name="preAuthenticate">The value that indicates whether to send an Authorization header with the request.</param>
      <returns>The result of the submission.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormSubmitter.Submit(System.Net.ICredentials,System.TimeSpan,System.Boolean,System.Net.CookieContainer)">
      <summary>
            Submits the form data to the server with specified user credentials and cookies.
            </summary>
      <param name="credentials">The authentication information for the request.</param>
      <param name="timeout">The number of milliseconds to wait before the request times out.</param>
      <param name="preAuthenticate">The value that indicates whether to send an Authorization header with the request.</param>
      <param name="cookieContainer">The cookie container.</param>
      <returns>The result of the submission.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.FormSubmitter.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.FormSubmitter.Method">
      <summary>
            HTTP method [<a href="http://www.ietf.org/rfc/rfc2616.txt">IETF RFC 2616</a>] used to submit form. See the method attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.FormSubmitter.Action">
      <summary>
            Server-side form handler. See the action attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.Forms.InputElement">
      <summary>
            The InputElement represents a wrapper that is associated with the HTMLInputElement.
            </summary>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.SetUrlValue(Aspose.Html.Url)">
      <summary>
            This method is used to set <see cref="T:Aspose.Html.Url" /> object as a value for input element. This method is valid if only the type of the input element is "url"
            </summary>
      <param name="value">The url value.</param>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.GetUrlValue">
      <summary>
            This method is used to get the value as <see cref="T:Aspose.Html.Url" /> object. This method is valid if only only type of the input element is "url"
            </summary>
      <returns>The field value as url.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.SetEmailValue(System.String)">
      <summary>
            This method is used to set email string as a value for input element. This method is valid if only the type of the input element is "email"
            </summary>
      <param name="value">The email.</param>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.GetEmailValue">
      <summary>
            This method is used to get the value as an email string object. This method is valid if only only type of the input element is "email"
            </summary>
      <returns>The email.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.SetPasswordValue(System.String)">
      <summary>
            This method is used to set password string as a value for input element. This method is valid if only the type of the input element is "password"
            </summary>
      <param name="value">The password.</param>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.GetPasswordValue">
      <summary>
            This method is used to get the value as a password string object. This method is valid if only only type of the input element is "password"
            </summary>
      <returns>The password.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.SetDateValue(System.DateTime)">
      <summary>
            This method is used to set <see cref="T:System.DateTime" /> object as a value for input element. This method is valid if only the type of the input element is "date"
            </summary>
      <param name="value">The date object.</param>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.GetDateValue">
      <summary>
            This method is used to get the value as a <see cref="T:System.DateTime" /> object. This method is valid if only only type of the input element is "date"
            </summary>
      <returns>The date object.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.SetMonthValue(System.DateTime)">
      <summary>
            This method is used to set <see cref="T:System.DateTime" /> object as a value for input element. This method is valid if only the type of the input element is "month"
            </summary>
      <param name="value">The date object.</param>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.GetMonthValue">
      <summary>
            This method is used to get the value as a <see cref="T:System.DateTime" /> object. This method is valid if only only type of the input element is "month"
            </summary>
      <returns>The date object.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.SetWeekValue(System.String)">
      <summary>
            This method is used to set 'week' string as a value for input element. This method is valid if only the type of the input element is "week"
            </summary>
      <param name="value">The week value.</param>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.GetWeekValue">
      <summary>
            This method is used to get the value as a week string. This method is valid if only only type of the input element is "week"
            </summary>
      <returns>The week value.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.SetTimeValue(System.TimeSpan)">
      <summary>
            This method is used to set <see cref="T:System.TimeSpan" /> object as a value for input element. This method is valid if only the type of the input element is "time"
            </summary>
      <param name="value">The TimeSpan object.</param>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.GetTimeValue">
      <summary>
            This method is used to get the value as a <see cref="T:System.TimeSpan" /> object. This method is valid if only only type of the input element is "time"
            </summary>
      <returns>The TimeSpan object.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.SetDateTimeLocalValue(System.DateTime)">
      <summary>
            This method is used to set <see cref="T:System.DateTime" /> object as a value for input element. This method is valid if only the type of the input element is "datetime-local"
            </summary>
      <param name="value">The date object.</param>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.GetDateTimeLocalValue">
      <summary>
            This method is used to get the value as a <see cref="T:System.DateTime" /> object object. This method is valid if only only type of the input element is "datetime-local"
            </summary>
      <returns>The date object.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.SetNumberValue(System.Single)">
      <summary>
            This method is used to set number as a value for input element. This method is valid if only the type of the input element is "number"
            </summary>
      <param name="value">The number object.</param>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.GetNumberValue">
      <summary>
            This method is used to get the value as a number. This method is valid if only only type of the input element is "number"
            </summary>
      <returns>The number object.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.SetColorValue(System.Drawing.Color)">
      <summary>
            This method is used to set color as a value for input element. This method is valid if only the type of the input element is "color"
            </summary>
      <param name="value">The color object.</param>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.GetColorValue">
      <summary>
            This method is used to get the value as a color. This method is valid if only only type of the input element is "color"
            </summary>
      <returns>The color object.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.SetCheckboxValue(System.Boolean)">
      <summary>
            Sets the checkedness state for the input elemen with the Checkbox type.
            </summary>
      <param name="value">The checkedness.</param>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.GetCheckboxValue">
      <summary>
            Returns the checkedness state for the  input element with the Checkbox type .
            </summary>
      <returns>The checkedness state.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.SetRadioValue(System.Boolean)">
      <summary>
            Sets the checkedness state for the input element with the radio type.
            </summary>
      <param name="value">The checkedness.</param>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.GetRadioValue">
      <summary>
            Returns the checkedness state for the  input element with the radio type.
            </summary>
      <returns>The checkedness.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.InputElement.AddFile(System.String)">
      <summary>
            This method adds files to the <see cref="P:Aspose.Html.HTMLInputElement.Files" /> collection which will be sent during the next web request.
            </summary>
      <param name="uri">The file path.</param>
    </member>
    <member name="P:Aspose.Html.Forms.InputElement.Name">
      <summary>
            Represent the name attribute of the input element.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.InputElement.Id">
      <summary>
            Represents the Id attribute of the input element.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.InputElement.List">
      <summary>
            Represents a list of options
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.InputElement.Value">
      <summary>
            Represents the string value of the input element that is directly mapped to the 'value' attribute.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.InputElement.Type">
      <summary>
            Type of the form control.
            </summary>
    </member>
    <member name="T:Aspose.Html.Forms.InputElementType">
      <summary>
            Represent states of the input field.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Hidden">
      <summary>
            A control that is not displayed.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Text">
      <summary>
            A control that is a text-field.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Search">
      <summary>
            A control that is used for entering search strings.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Telephone">
      <summary>
            A control for entering a telephone number.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Url">
      <summary>
            A field for entering a URL.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Email">
      <summary>
            A field for entering an email.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Password">
      <summary>
            A field for entering a password.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Date">
      <summary>
            A field for entering a date.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Month">
      <summary>
            A field for entering a month.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Week">
      <summary>
            A field for entering a week.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Time">
      <summary>
            A field for entering a time.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.LocalDateTime">
      <summary>
            A field for entering a local datetime.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Number">
      <summary>
            A field for entering a number.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Range">
      <summary>
            A field for entering a number inside the range.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Color">
      <summary>
            A field for entering a color.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Checkbox">
      <summary>
            A field for entering a checkbox.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Radio">
      <summary>
            A field that allowing a single value to select.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.File">
      <summary>
            A field that allows to select and attach user files.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Submit">
      <summary>
            A button for submitting the form result.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Image">
      <summary>
            A graphical button for submitting the form result.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Reset">
      <summary>
            A button for resetting the form data.
            </summary>
    </member>
    <member name="F:Aspose.Html.Forms.InputElementType.Button">
      <summary>
            A push button.
            </summary>
    </member>
    <member name="T:Aspose.Html.Forms.NamespaceDoc">
      <summary>
            The namespace provides access to
            numerous objects (elements) which are responsible to
            user interactivity within form as web page component.
            </summary>
    </member>
    <member name="T:Aspose.Html.Forms.OptionCollection">
      <summary>
            The OptionElements represents a wrapper that is associated with the IHTMLOptionsCollection
            </summary>
    </member>
    <member name="M:Aspose.Html.Forms.OptionCollection.Add">
      <summary>
            Add new option.
            </summary>
      <returns>Return created OptionElement.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.OptionCollection.Remove(Aspose.Html.Forms.OptionElement)">
      <summary>
            Remove the option from list.
            </summary>
      <param name="option">The OptionElement.</param>
    </member>
    <member name="M:Aspose.Html.Forms.OptionCollection.GetEnumerator">
      <summary>
             Returns an enumerator that iterates through the collection.
            </summary>
      <returns>Returns the enumerator of option elements</returns>
    </member>
    <member name="P:Aspose.Html.Forms.OptionCollection.Count">
      <summary>
            The number of Option in the list.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.OptionCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Html.Forms.OptionElement" /> at the specified index.
            </summary>
      <param name="index">The index.</param>
      <returns>The <see cref="T:Aspose.Html.Forms.OptionElement" />.</returns>
    </member>
    <member name="T:Aspose.Html.Forms.OptionElement">
      <summary>
            The OptionElement represents a wrapper that is associated with the HTMLOptionElement
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.OptionElement.Disabled">
      <summary>
            The control is unavailable in this context. See the disabled attribute definition in HTML 4.01.
            </summary>
      <value>
        <c>true</c> if disabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Forms.OptionElement.Label">
      <summary>
            Option label for use in hierarchical menus. See the label attribute definition in HTML 4.01.
            </summary>
      <value>
            The label value.
            </value>
    </member>
    <member name="P:Aspose.Html.Forms.OptionElement.Selected">
      <summary>
            Represents the current state of the corresponding form control, in an interactive user agent. Changing this attribute changes the state of the form control, but does not change the value of the HTML selected attribute of the element.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.OptionElement.Text">
      <summary>
            This attribute represents the text content of this node and its descendants.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.OptionElement.Value">
      <summary>
            The current form control value. See the value attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.Forms.SelectElement">
      <summary>
            The SelectElement represents a wrapper that is associated with the HTMLSelectElement
            </summary>
    </member>
    <member name="M:Aspose.Html.Forms.SelectElement.SelectItems(System.Int32[])">
      <summary>
            This methods allows to select multiple options by their indexes.
            </summary>
      <param name="indexes">An array of indexes for parameter selection.</param>
    </member>
    <member name="M:Aspose.Html.Forms.SelectElement.SelectItems(System.String[])">
      <summary>
            This methods allows to select multiple options by their values.
            </summary>
      <param name="values">An array of values for parameter selection.</param>
    </member>
    <member name="P:Aspose.Html.Forms.SelectElement.Value">
      <summary>
            On getting, must return the value of the first option element in the list of options in tree order that has its selectedness set to true, if any.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.SelectElement.Name">
      <summary>
            Represent the name attribute of the input element.
            </summary>
      <value>
            The name of the element.
            </value>
    </member>
    <member name="P:Aspose.Html.Forms.SelectElement.Id">
      <summary>
            Represents the Id attribute of the input element.
            </summary>
      <value>
            The identifier of the element.
            </value>
    </member>
    <member name="P:Aspose.Html.Forms.SelectElement.Type">
      <summary>
            The type of this form control. This is the string "select-multiple" when the multiple attribute is <c>true</c> and the string "select-one" when <c>false</c>.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.SelectElement.Multiple">
      <summary>
            If true, multiple <c>OPTION</c> elements may be selected in this <c>SELECT</c>. See the multiple attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.SelectElement.SelectedOptions">
      <summary>
            Returns a list of selected options
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.SelectElement.Options">
      <summary>
            Returns a list of options
            </summary>
    </member>
    <member name="T:Aspose.Html.Forms.SubmissionResult">
      <summary>
            This class represents the result of the submitting form data to the server.
            </summary>
    </member>
    <member name="M:Aspose.Html.Forms.SubmissionResult.LoadDocument">
      <summary>
            This method loads the new document based on response message.
            </summary>
      <returns>The HTML document created based response message.</returns>
    </member>
    <member name="M:Aspose.Html.Forms.SubmissionResult.Dispose">
      <summary>
            Releases unmanaged and managed resources.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.SubmissionResult.ResponseMessage">
      <summary>
            Gets the message represented the result of the submitting data to the server.
            </summary>
      <value>
            The response message.
            </value>
    </member>
    <member name="P:Aspose.Html.Forms.SubmissionResult.Content">
      <summary>
            Gets the content of the response message.
            </summary>
      <value>
            The content.
            </value>
    </member>
    <member name="P:Aspose.Html.Forms.SubmissionResult.IsSuccess">
      <summary>
            Gets a value indicating whether this result is success.
            </summary>
    </member>
    <member name="T:Aspose.Html.Forms.TextAreaElement">
      <summary>
            The TextAreaElement represents a wrapper that is associated with the HTMLTextAreaElement
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.TextAreaElement.Name">
      <summary>
            Represent the name attribute of the input element.
            </summary>
      <value>
            The name of the element.
            </value>
    </member>
    <member name="P:Aspose.Html.Forms.TextAreaElement.Value">
      <summary>
            Represents the string value of the input element that is directly mapped to the 'value' attribute.
            </summary>
    </member>
    <member name="P:Aspose.Html.Forms.TextAreaElement.Type">
      <summary>
            The type of this form control.
            </summary>
    </member>
    <member name="T:Aspose.Html.License">
      <summary>
            Provides methods to license the component.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            </code></ms><java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code></java></example>
    </member>
    <member name="M:Aspose.Html.License.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            </code></ms><java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code></java></example>
    </member>
    <member name="M:Aspose.Html.License.SetLicense(System.String)">
      <summary>
            Licenses the component.
            </summary>
      <remarks>
        <p>Tries to find the license in the following locations:</p>
        <p>1. Explicit path.</p>
        <ms>
          <p>2. The folder that contains the Aspose component assembly.</p>
          <p>3. The folder that contains the client's calling assembly.</p>
          <p>4. The folder that contains the entry (startup) assembly.</p>
          <p>5. An embedded resource in the client's calling assembly.</p>
          <p>
            <b>Note:</b>On the .NET Compact Framework, tries to find the license only in these locations:</p>
          <p>1. Explicit path.</p>
          <p>2. An embedded resource in the client's calling assembly.</p>
        </ms>
        <java>
          <p>2. The folder that contains the Aspose component JAR file.</p>
          <p>3. The folder that contains the client's calling JAR file.</p>
        </java>
      </remarks>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            </code></ms><java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code></java></example>
      <param name="licenseName">Can be a full or short file name<ms> or name of an embedded resource</ms>.
            Use an empty string to switch to evaluation mode.</param>
    </member>
    <member name="M:Aspose.Html.License.SetLicense(System.IO.Stream)">
      <summary>
            Licenses the component.
            </summary>
      <param name="stream">A stream that contains the license.</param>
      <remarks>
        <p>Use this method to load a license from a stream.</p>
      </remarks>
      <example>
        <ms>
          <code>
            [C#]
            
            License license = new License();
            license.SetLicense(myStream);
            </code>
        </ms>
      </example>
    </member>
    <member name="T:Aspose.Html.Metered">
      <summary>
            Provides methods to set metered key.
            </summary>
      <example>
            In this example, an attempt will be made to set metered public and private key
            
            <ms><code>
            [C#]
            
            Metered matered = new Metered();
            matered.SetMeteredKey("PublicKey", "PrivateKey");
            
            
            [Visual Basic]
            
            Dim matered As Metered = New Metered
            matered.SetMeteredKey("PublicKey", "PrivateKey")
            </code></ms><java>
            the component jar file:
            <code>
            Metered matered = new Metered();
            matered.setMeteredKey("PublicKey", "PrivateKey");
            </code></java></example>
    </member>
    <member name="M:Aspose.Html.Metered.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Metered.SetMeteredKey(System.String,System.String)">
      <summary>
            Sets metered public and private key.
            If you purchase metered license, when start application, this API should be called, normally, this is enough. 
            However, if always fail to upload consumption data and exceed 24 hours, the license will be set to evaluation status, 
            to avoid such case, you should regularly check the license status, if it is evaluation status, call this API again.
            </summary>
      <param name="publicKey">public key</param>
      <param name="privateKey">private key</param>
    </member>
    <member name="M:Aspose.Html.Metered.GetConsumptionQuantity">
      <summary>
            Gets consumption file size
            </summary>
      <returns>consumption quantity</returns>
    </member>
    <member name="M:Aspose.Html.Metered.GetConsumptionCredit">
      <summary>
            Gets consumption credit
            </summary>
      <returns>consumption quantity</returns>
    </member>
    <member name="T:Aspose.Html.Rendering.Device`2">
      <summary>
            Represents base class for implementation particular rendering devices.
            </summary>
      <typeparam name="TGraphicContext">Graphic context that holds current graphics control parameters</typeparam>
      <typeparam name="TRenderingOptions">Rendering options</typeparam>
    </member>
    <member name="T:Aspose.Html.Rendering.Device`2.DeviceConfiguration">
      <summary>
            Represents configuration object for devices. 
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Device`2.DeviceConfiguration.PageWritingStrategy">
      <summary>
            Gets or sets the page writing strategy.
            </summary>
      <value>
            The page writing strategy.
            </value>
    </member>
    <member name="T:Aspose.Html.Rendering.Device`2.PageWritingStrategy">
      <summary>
            Specifies types of strategies for writing pages into output stream\streams. 
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Device`2.PageWritingStrategy.SingleStream">
      <summary>
            Writes all pages into one output stream.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Device`2.PageWritingStrategy.MultipleStreams">
      <summary>
            Writes every page into its own stream.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.#ctor(`1,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Device`2" /> class by rendering options and stream provider.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="streamProvider">Object that implements the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.#ctor(`1,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Device`2" /> class by rendering options and output file name.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="file">The output file name.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.#ctor(`1,System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Device`2" /> class by rendering options and output stream.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="stream">The output stream.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.Initialize">
      <summary>
            Initializes context stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.SaveGraphicContext">
      <summary>
            Pushes a copy of the entire graphics context onto the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.RestoreGraphicContext">
      <summary>
            Restores the entire graphics context to its former value by popping it from the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.GetExtension">
      <summary>
            Gets extension of the output file.
            </summary>
      <returns>The file extension.</returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.BeginDocument(Aspose.Html.Dom.Document)">
      <summary>
            Begins rendering of the document.
            </summary>
      <param name="document">The document.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.EndDocument">
      <summary>
            Ends rendering of the document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.BeginPage(System.Drawing.SizeF)">
      <summary>
            Begins rendering of the new page.
            </summary>
      <param name="size">Size of the page.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.EndPage">
      <summary>
            Ends rendering of the current page.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.Flush">
      <summary>
            Flushes all data to output stream.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.BeginElement(Aspose.Html.Dom.Element,System.Drawing.RectangleF)">
      <summary>
            Begins rendering of the node.
            </summary>
      <param name="element">The <see cref="T:Aspose.Html.Dom.Element" />.</param>
      <param name="rect">Bounding box of the node.</param>
      <returns>Returns [true] if element should be processed.</returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.EndElement(Aspose.Html.Dom.Element)">
      <summary>
            Ends rendering of the node.
            </summary>
      <param name="element">The <see cref="T:Aspose.Html.Dom.Element" />.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.ClosePath">
      <summary>
            Closes the current subpath by appending a straight line segment from the current point to the starting point of the subpath. 
            If the current subpath is already closed, "ClosePath" does nothing.
            This operator terminates the current subpath. Appending another segment to the current path begins a new subpath, 
            even if the new segment begins at the endpoint reached by the "ClosePath" method.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.MoveTo(System.Drawing.PointF)">
      <summary>
            Begins a new subpath by moving the current point to coordinates of the parameter pt, omitting any connecting line segment. 
            If the previous path construction method in the current path was also "MoveTo", the new "MoveTo" overrides it; 
            no vestige of the previous "MoveTo" operation remains in the path.
            </summary>
      <param name="pt">Point of where to move the path to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.LineTo(System.Drawing.PointF)">
      <summary>
            Appends a straight line segment from the current point to the point (pt). The new current point is pt.
            </summary>
      <param name="pt">Point of where to create the line to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.AddRect(System.Drawing.RectangleF)">
      <summary>
            Appends a rectangle to the current path as a complete subpath.
            </summary>
      <param name="rect">A rectangle to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.CubicBezierTo(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Appends a cubic Bézier curve to the current path. The curve extends from the current point to the point pt2,
            using pt1 and pt2 as the Bézier control points. The new current point is pt3.
            </summary>
      <param name="pt1">Coordinates of first point</param>
      <param name="pt2">Coordinates of second point</param>
      <param name="pt3">Coordinates of third point</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.Stroke">
      <summary> 
            Strokes a line along the current path. The stroked line follows each straight or curved segment in the path, 
            centered on the segment with sides parallel to it. Each of the path’s subpaths is treated separately. 
            This method terminates current path. 
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.Fill(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Fills the entire region enclosed by the current path. 
            If the path consists of several disconnected subpaths, it fills the insides of all subpaths, 
            considered together. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.Clip(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Modifies the current clipping path by intersecting it with the current path, using the FillMode rule to determine the region to fill. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is clipped</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.StrokeAndFill(System.Drawing.Drawing2D.FillMode)">
      <summary>
            Strokes and fill current path.
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.FillText(System.String,System.Drawing.PointF)">
      <summary>
            Fills the specified text string at the specified location.
            </summary>
      <param name="text">String to fill.</param>
      <param name="pt">Point that specifies the coordinates of the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.StrokeText(System.String,System.Drawing.PointF)">
      <summary>
            Strokes the specified text string at the specified location.
            </summary>
      <param name="text">String to stroke.</param>
      <param name="pt">Point that specifies the coordinates where to start the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.DrawImage(System.Byte[],Aspose.Html.Rendering.ImageType,System.Drawing.RectangleF)">
      <summary>
            Draws the specified image.
            </summary>
      <param name="data">An array of bytes representing the image.</param>
      <param name="type">Image type.</param>
      <param name="rect">A rectangel which determines position and size to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="P:Aspose.Html.Rendering.Device`2.Options">
      <summary>
            Gets rendering options.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Device`2.Configuration">
      <summary>
            Gets device configuration.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Device`2.GraphicContext">
      <summary>
            Gets the graphic context
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Device`2.StreamProvider">
      <summary>
            Gets the stream provider object.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Device`2.OutputStream">
      <summary>
            Sets and gets the output stream.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Device`2.PageIndex">
      <summary>
            Sets or gets the index of the current page
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Renderer">
      <summary>
            Represents a base class for all renderers and implemnts IDisposable interface.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Renderer.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Renderer.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="T:Aspose.Html.Rendering.Renderer`1">
      <summary>
            Represents an abstract class for the all renderers.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="M:Aspose.Html.Rendering.Renderer`1.Render(Aspose.Html.Rendering.IDevice,`0)">
      <summary>
            Defines method for rendering <see cref="!:TDocument" /> into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            </summary>
      <param name="device">The output device.</param>
      <param name="document">The document.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Renderer`1.Render(Aspose.Html.Rendering.IDevice,`0,System.TimeSpan)">
      <summary>
            Defines method for rendering <see cref="!:TDocument" /> into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            The rendering will be performed once there are no any network operations for loading resources, active timers, animation tasks or specified timeout is elapsed.
            </summary>
      <param name="device">The output device.</param>
      <param name="document">The document.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 millisecond to wait indefinitely.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Renderer`1.Render(Aspose.Html.Rendering.IDevice,`0,System.Int32)">
      <summary>
            Defines method for rendering <see cref="!:TDocument" /> into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            The rendering will be performed once there are no any network operations for loading resources, active timers, animation tasks or specified timeout is elapsed.
            </summary>
      <param name="device">The output device.</param>
      <param name="document">The document.</param>
      <param name="timeout">A number of milliseconds that represents the number of milliseconds to wait, or -1 millisecond to wait indefinitely.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Renderer`1.Render(Aspose.Html.Rendering.IDevice,`0[])">
      <summary>
            Defines method for rendering multiple <see cref="!:TDocument" />s into specific <see cref="T:Aspose.Html.Rendering.IDevice" />.
            </summary>
      <param name="device">The output device.</param>
      <param name="documents">The documents to render.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Renderer`1.Render(Aspose.Html.Rendering.IDevice,System.Int32,`0[])">
      <summary>
            Defines method for rendering multiple <see cref="!:TDocument" />s into specific <see cref="T:Aspose.Html.Rendering.IDevice" />.
            The rendering will be performed once there are no any network operations for loading resources, active timers, animation tasks or specified timeout is elapsed.
            </summary>
      <param name="device">The output device.</param>
      <param name="timeout">A number of milliseconds that represents the number of milliseconds to wait, or -1 millisecond to wait indefinitely.</param>
      <param name="documents">The documents to render.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Renderer`1.Render(Aspose.Html.Rendering.IDevice,System.TimeSpan,`0[])">
      <summary>
            Defines method for rendering multiple <see cref="!:TDocument" />s into specific <see cref="T:Aspose.Html.Rendering.IDevice" />.
            The rendering will be performed once there are no any network operations for loading resources, active timers, animation tasks or specified timeout is elapsed.
            </summary>
      <param name="device">The output device.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 millisecond to wait indefinitely.</param>
      <param name="documents">The documents to render.</param>
    </member>
    <member name="T:Aspose.Html.Rendering.Doc.DocDevice">
      <summary>
            Represents rendering to a DOCX document.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Doc.DocDevice.DocGraphicContext">
      <summary>
            Holds current graphics control parameters for the DocDevice.
            These parameters define the global framework within which the graphics operators execute.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.DocGraphicContext.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>
            Modify the current transformation matrix by multiplying the specified matrix.
            </summary>
      <param name="matrix">Transformation matrix.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.DocGraphicContext.Clone">
      <summary>
            Creates a new instance of a <see cref="T:Aspose.Html.Rendering.GraphicContext" /> class with the same property values as an existing instance.
            </summary>
      <returns>Instance of a <see cref="T:Aspose.Html.Rendering.GraphicContext" />.</returns>
    </member>
    <member name="P:Aspose.Html.Rendering.Doc.DocDevice.DocGraphicContext.TransformationMatrix">
      <summary>
            Sets or gets transformation matrix.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.#ctor(Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Doc.DocDevice" /> class.
            </summary>
      <param name="streamProvider">Object that implements the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.#ctor(Aspose.Html.Rendering.Doc.DocRenderingOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Doc.DocDevice" /> class by rendering options and stream provider.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="streamProvider">Object that implements the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Doc.DocDevice" /> class by output file name.
            </summary>
      <param name="file">The output file name</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.#ctor(Aspose.Html.Rendering.Doc.DocRenderingOptions,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Doc.DocDevice" /> class by rendering options and output file name.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="file">The output file name</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Doc.DocDevice" /> class by output stream.
            </summary>
      <param name="stream">The output stream</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.#ctor(Aspose.Html.Rendering.Doc.DocRenderingOptions,System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Doc.DocDevice" /> class by rendering options and output stream. 
            </summary>
      <param name="options">Rendering options.</param>
      <param name="stream">The output stream</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.Initialize">
      <summary>
            Initializes context stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.BeginDocument(Aspose.Html.Dom.Document)">
      <summary>
            Begins rendering of the document.
            </summary>
      <param name="document">The document.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.GetExtension">
      <summary>
            Gets extension of the output file.
            </summary>
      <returns>The file extension.</returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.BeginPage(System.Drawing.SizeF)">
      <summary>
            Begins rendering of the new page.
            </summary>
      <param name="size">Size of the page.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.EndPage">
      <summary>
            Ends rendering of the current page.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.Flush">
      <summary>
            Flushes all data to output stream.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.BeginElement(Aspose.Html.Dom.Element,System.Drawing.RectangleF)">
      <summary>
            Begins rendering of the html node.
            </summary>
      <param name="element">The html element.</param>
      <param name="rect">Bounding box of the node.</param>
      <returns>Returns [true] if element should be processed.</returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.EndElement(Aspose.Html.Dom.Element)">
      <summary>
            Ends rendering of the html node.
            </summary>
      <param name="element">The html element.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.AddRect(System.Drawing.RectangleF)">
      <summary>
            Appends a rectangle to the current path as a complete subpath.
            </summary>
      <param name="rect">A rectangle to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.Clip(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Modifies the current clipping path by intersecting it with the current path, using the FillMode rule to determine the region to fill. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is clipped</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.SaveGraphicContext">
      <summary>
            Pushes a copy of the entire graphics context onto the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.RestoreGraphicContext">
      <summary>
            Restores the entire graphics context to its former value by popping it from the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.LineTo(System.Drawing.PointF)">
      <summary>
            Appends a straight line segment from the current point to the point (pt). The new current point is pt.
            </summary>
      <param name="pt">Point of where to create the line to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.MoveTo(System.Drawing.PointF)">
      <summary>
            Begins a new subpath by moving the current point to coordinates of the parameter pt, omitting any connecting line segment. 
            If the previous path construction method in the current path was also "MoveTo", the new "MoveTo" overrides it; 
            no vestige of the previous "MoveTo" operation remains in the path.
            </summary>
      <param name="pt">Point of where to move the path to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.ClosePath">
      <summary>
            Closes the current subpath by appending a straight line segment from the current point to the starting point of the subpath. 
            If the current subpath is already closed, "ClosePath" does nothing.
            This operator terminates the current subpath. Appending another segment to the current path begins a new subpath, 
            even if the new segment begins at the endpoint reached by the "ClosePath" method.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.CubicBezierTo(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Appends a cubic Bézier curve to the current path. The curve extends from the current point to the point pt2,
            using pt1 and pt2 as the Bézier control points. The new current point is pt3.
            </summary>
      <param name="pt1">Coordinates of first point</param>
      <param name="pt2">Coordinates of second point</param>
      <param name="pt3">Coordinates of third point</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.Stroke">
      <summary> 
            Strokes a line along the current path. The stroked line follows each straight or curved segment in the path, 
            centered on the segment with sides parallel to it. Each of the path’s subpaths is treated separately. 
            This method terminates current path. 
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.StrokeAndFill(System.Drawing.Drawing2D.FillMode)">
      <summary>
            Strokes and fill current path.
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.Fill(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Fills the entire region enclosed by the current path. 
            If the path consists of several disconnected subpaths, it fills the insides of all subpaths, 
            considered together. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.FillText(System.String,System.Drawing.PointF)">
      <summary>
            Fills the specified text string at the specified location.
            </summary>
      <param name="text">String to fill.</param>
      <param name="pt">Point that specifies the coordinates of the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.StrokeText(System.String,System.Drawing.PointF)">
      <summary>
            Strokes the specified text string at the specified location.
            </summary>
      <param name="text">String to stroke.</param>
      <param name="pt">Point that specifies the coordinates where to start the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.DrawImage(System.Byte[],Aspose.Html.Rendering.ImageType,System.Drawing.RectangleF)">
      <summary>
            Draws the specified image.
            </summary>
      <param name="data">An array of bytes representing the image.</param>
      <param name="type">Image type.</param>
      <param name="rect">A rectangel which determines position and size to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocDevice.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="T:Aspose.Html.Rendering.Doc.DocRenderingOptions">
      <summary>
            Represents the rendering options for <see cref="T:Aspose.Html.Rendering.Doc.DocDevice" />.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocRenderingOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Doc.DocRenderingOptions" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Doc.DocRenderingOptions.#ctor(Aspose.Html.Rendering.Doc.FontEmbeddingRule)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Doc.DocRenderingOptions" /> class with the specified font embedding rule.
            </summary>
      <param name="fontEmbeddingRule">The font embedding rule.</param>
    </member>
    <member name="P:Aspose.Html.Rendering.Doc.DocRenderingOptions.FontEmbeddingRule">
      <summary>
            Gets or sets the font embedding rule. The default value is <see cref="F:Aspose.Html.Rendering.Doc.FontEmbeddingRule.None" />.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Doc.DocRenderingOptions.DocumentFormat">
      <summary>
            Gets or sets the file format of the output document. The default value is <see cref="F:Aspose.Html.Rendering.Doc.DocumentFormat.DOCX" />.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Doc.DocumentFormat">
      <summary>
            Represents the file format of the output document.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Doc.DocumentFormat.DOCX">
      <summary>
            The XML-based document format.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Doc.FontEmbeddingRule">
      <summary>
            Represents the font embedding rules.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Doc.FontEmbeddingRule.Full">
      <summary>
            All the used fonts will be embedded as-is. Be aware that some font could be licensed, this will make the resulting document uneditable. Also the embedded font files could significantly increase the size of the resulting document.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Doc.FontEmbeddingRule.None">
      <summary>
            Fonts won't be embedded.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Doc.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Rendering.Doc</b> namespace provides
            specific device class as well as few rendering
            options classes responsible for rendering to a DOCX document.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.EpubRenderer">
      <summary>
            Represents a EPub document renderer.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.EpubRenderer.Render(Aspose.Html.Rendering.IDevice,System.TimeSpan,System.IO.Stream[])">
      <summary>
            Defines method for rendering multiple EPub <see cref="T:System.IO.Stream" />s into specific <see cref="T:Aspose.Html.Rendering.IDevice" />.
            The rendering will be performed once there are no any network operations for loading resources, active timers, animation tasks or specified timeout is elapsed.
            </summary>
      <param name="device">The output device.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 millisecond to wait indefinitely.</param>
      <param name="documents">The documents to render.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.EpubRenderer.Render(Aspose.Html.Rendering.IDevice,System.IO.Stream,Aspose.Html.Configuration)">
      <summary>
            Renders EPub document into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            </summary>
      <param name="device">The device.</param>
      <param name="document">The document.</param>
      <param name="configuration">The configuration.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.EpubRenderer.Render(Aspose.Html.Rendering.IDevice,System.IO.Stream,Aspose.Html.Configuration,System.TimeSpan)">
      <summary>
            Renders EPub document into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            The rendering will be performed once there are no any network operations for loading resources, active timers, animation tasks or specified timeout is elapsed.
            </summary>
      <param name="device">The device.</param>
      <param name="document">The document.</param>
      <param name="configuration">The configuration.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 millisecond to wait indefinitely.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.EpubRenderer.Render(Aspose.Html.Rendering.IDevice,System.Collections.Generic.IList{System.IO.Stream},Aspose.Html.Configuration)">
      <summary>
            Renders multiple EPub documents into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            </summary>
      <param name="device">The device.</param>
      <param name="documents">The <see cref="T:System.Collections.Generic.IList`1" /> of documents to render.</param>
      <param name="configuration">The configuration.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.EpubRenderer.Render(Aspose.Html.Rendering.IDevice,System.Collections.Generic.IList{System.IO.Stream},Aspose.Html.Configuration,System.TimeSpan)">
      <summary>
            Renders multiple EPub documents into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            The rendering will be performed once there are no any network operations for loading resources, active timers, animation tasks or specified timeout is elapsed.
            </summary>
      <param name="device">The device.</param>
      <param name="documents">The <see cref="T:System.Collections.Generic.IList`1" /> of documents to render.</param>
      <param name="configuration">The configuration.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 millisecond to wait indefinitely.</param>
    </member>
    <member name="T:Aspose.Html.Rendering.HtmlRenderer">
      <summary>
            Represents an HTML document renderer.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Document" />
    </member>
    <member name="M:Aspose.Html.Rendering.HtmlRenderer.Render(Aspose.Html.Rendering.IDevice,System.TimeSpan,Aspose.Html.Dom.Document[])">
      <summary>
            Defines method for rendering multiple <see cref="T:Aspose.Html.Dom.Document" />s into specific <see cref="T:Aspose.Html.Rendering.IDevice" />.
            The rendering will be performed once there are no any network operations for loading resources, active timers, animation tasks or specified timeout is elapsed.
            </summary>
      <param name="device">The output device.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 millisecond to wait indefinitely.</param>
      <param name="documents">The documents to render.</param>
    </member>
    <member name="T:Aspose.Html.Rendering.Image.Compression">
      <summary>
            Specifies the possible compression schemes for Tagged Image File Format (TIFF) bitmap images.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Image.Compression.LZW">
      <summary>
            The LZW compression schema is used.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Image.Compression.CCITT3">
      <summary>
            The CCITT3 compression schema is used.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Image.Compression.CCITT4">
      <summary>
            The CCITT4 compression schema is used.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Image.Compression.Rle">
      <summary>
            The RLE compression schema is used.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Image.Compression.None">
      <summary>
            The Tagged Image File Format (TIFF) image is not compressed.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Image.ImageDevice">
      <summary>
            Represents rendering to raster formats: jpeg, png, bmp, gif, tiff.
            </summary>
      <seealso cref="T:Aspose.Html.Rendering.Image.ImageDevice.ImageGraphicContext" />
    </member>
    <member name="T:Aspose.Html.Rendering.Image.ImageDevice.ImageGraphicContext">
      <summary>
            Holds current graphics control parameters for the <see cref="T:Aspose.Html.Rendering.Image.ImageDevice" />.
            These parameters define the global framework within which the graphics operators execute.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.ImageGraphicContext.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>
            Modify the current transformation matrix by multiplying the specified matrix.
            </summary>
      <param name="matrix">Transformation matrix.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.ImageGraphicContext.Clone">
      <summary>
            Creates a new instance of a GdiGraphicContext class with the same property values as an existing instance.
            </summary>
      <returns>Instance of a GdiGraphicContext</returns>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageDevice.ImageGraphicContext.TransformationMatrix">
      <summary>
            Sets or gets transformation matrix.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.#ctor(Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Image.ImageDevice" /> class.
            </summary>
      <param name="streamProvider">The stream provider.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.#ctor(Aspose.Html.Rendering.Image.ImageRenderingOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Image.ImageDevice" /> class by rendering options and stream provider.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="streamProvider">Object that implements the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Image.ImageDevice" /> class.
            </summary>
      <param name="file">The output file name.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.#ctor(Aspose.Html.Rendering.Image.ImageRenderingOptions,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Image.ImageDevice" /> class by rendering options and output file name.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="file">The output file name.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Image.ImageDevice" /> class.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.#ctor(Aspose.Html.Rendering.Image.ImageRenderingOptions,System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Image.ImageDevice" /> class by rendering options and output stream.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="stream">The output stream.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.Initialize">
      <summary>
            Initializes context stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.Flush">
      <summary>
            Flushes all data to output stream.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.BeginDocument(Aspose.Html.Dom.Document)">
      <summary>
            Begins rendering of the document.
            </summary>
      <param name="document">The document.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.EndDocument">
      <summary>
            Ends rendering of the document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.SaveGraphicContext">
      <summary>
            Pushes a copy of the entire graphics context onto the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.RestoreGraphicContext">
      <summary>
            Restores the entire graphics context to its former value by popping it from the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.BeginElement(Aspose.Html.Dom.Element,System.Drawing.RectangleF)">
      <summary>
            Begins rendering of the element.
            </summary>
      <param name="element">The <see cref="T:Aspose.Html.Dom.Element" />.</param>
      <param name="rect">Bounding box of the node.</param>
      <returns>
            Returns [true] if element should be processed.
            </returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.EndElement(Aspose.Html.Dom.Element)">
      <summary>
            Ends rendering of the element.
            </summary>
      <param name="element">The <see cref="T:Aspose.Html.Dom.Element" />.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.ClosePath">
      <summary>
            Closes the current subpath by appending a straight line segment from the current point to the starting point of the subpath. 
            If the current subpath is already closed, "ClosePath" does nothing.
            This operator terminates the current subpath. Appending another segment to the current path begins a new subpath, 
            even if the new segment begins at the endpoint reached by the "ClosePath" method.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.MoveTo(System.Drawing.PointF)">
      <summary>
            Begins a new subpath by moving the current point to coordinates of the parameter pt, omitting any connecting line segment. 
            If the previous path construction method in the current path was also "MoveTo", the new "MoveTo" overrides it; 
            no vestige of the previous "MoveTo" operation remains in the path.
            </summary>
      <param name="pt">Point of where to move the path to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.LineTo(System.Drawing.PointF)">
      <summary>
            Appends a straight line segment from the current point to the point (pt). The new current point is pt.
            </summary>
      <param name="pt">Point of where to create the line to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.AddRect(System.Drawing.RectangleF)">
      <summary>
            Appends a rectangle to the current path as a complete subpath.
            </summary>
      <param name="rect">A rectangle to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.CubicBezierTo(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Appends a cubic Bézier curve to the current path. The curve extends from the current point to the point pt2,
            using pt1 and pt2 as the Bézier control points. The new current point is pt3.
            </summary>
      <param name="pt1">Coordinates of first point</param>
      <param name="pt2">Coordinates of second point</param>
      <param name="pt3">Coordinates of third point</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.Stroke">
      <summary> 
            Strokes a line along the current path. The stroked line follows each straight or curved segment in the path, 
            centered on the segment with sides parallel to it. Each of the path’s subpaths is treated separately. 
            This method terminates current path. 
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.Fill(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Fills the entire region enclosed by the current path. 
            If the path consists of several disconnected subpaths, it fills the insides of all subpaths, 
            considered together. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.Clip(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Modifies the current clipping path by intersecting it with the current path, using the FillMode rule to determine the region to fill. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is clipped</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.StrokeAndFill(System.Drawing.Drawing2D.FillMode)">
      <summary>
            Strokes and fill current path.
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.FillText(System.String,System.Drawing.PointF)">
      <summary>
            Fills the specified text string at the specified location.
            </summary>
      <param name="text">String to fill.</param>
      <param name="pt">Point that specifies the coordinates of the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.StrokeText(System.String,System.Drawing.PointF)">
      <summary>
            Strokes the specified text string at the specified location.
            </summary>
      <param name="text">String to stroke.</param>
      <param name="pt">Point that specifies the coordinates where to start the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.DrawImage(System.Byte[],Aspose.Html.Rendering.ImageType,System.Drawing.RectangleF)">
      <summary>
            Draws the specified image.
            </summary>
      <param name="data">An array of bytes representing the image.</param>
      <param name="type">Image type.</param>
      <param name="rect">A rectangel which determines position and size to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.GetExtension">
      <summary>
            Gets extension of the output file.
            </summary>
      <returns>The file extension.</returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.BeginPage(System.Drawing.SizeF)">
      <summary>
            Begins rendering of the new page.
            </summary>
      <param name="size">Size of the page.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.EndPage">
      <summary>
            Ends rendering of the current page.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageDevice.Configuration">
      <summary>
            Gets device configuration.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageDevice.Graphics">
      <summary>
            Gets the instance of Graphics.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Image.ImageFormat">
      <summary>
            Specifies the file format of the image.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Image.ImageFormat.Jpeg">
      <summary>
            The Joint Photographic Experts Group (JPEG) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Image.ImageFormat.Png">
      <summary>
            The W3C Portable Network Graphics (PNG) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Image.ImageFormat.Bmp">
      <summary>
            The bitmap (BMP) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Image.ImageFormat.Gif">
      <summary>
            The Graphics Interchange Format (GIF) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Image.ImageFormat.Tiff">
      <summary>
            The Tagged Image File Format (TIFF) image format.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Image.ImageRenderingOptions">
      <summary>
            Represents rendering options for <see cref="T:Aspose.Html.Rendering.Image.ImageDevice" />. This options is used to specify output image format, compression, resolution etc.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageRenderingOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Image.ImageRenderingOptions" /> class; <see cref="F:Aspose.Html.Rendering.Image.ImageFormat.Png" /> will be used as default image format.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageRenderingOptions.#ctor(Aspose.Html.Rendering.Image.ImageFormat)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Image.ImageRenderingOptions" /> class with specified image format.
            </summary>
      <param name="format">The output image format.</param>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageRenderingOptions.HorizontalResolution">
      <summary>
            Sets or gets horizontal resolution for output and internal (which are used during filters processing) images, in pixels per inch. By default this property is 300 dpi.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageRenderingOptions.VerticalResolution">
      <summary>
            Sets or gets vertical resolution for output and internal (which are used during filters processing) images, in pixels per inch. By default this property is 300 dpi.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageRenderingOptions.Format">
      <summary>
            Sets or gets <see cref="T:Aspose.Html.Rendering.Image.ImageFormat" />. By default this property is <see cref="F:Aspose.Html.Rendering.Image.ImageFormat.Png" />.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageRenderingOptions.Compression">
      <summary>
            Sets or gets Tagged Image File Format (TIFF) <see cref="T:Aspose.Html.Rendering.Image.Compression" />. By default this property is <see cref="F:Aspose.Html.Rendering.Image.Compression.LZW" />.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageRenderingOptions.Text">
      <summary>
            Gets a <see cref="T:Aspose.Html.Rendering.Image.TextOptions" /> object which is used for configuration of text rendering.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Rendering.Image.TextOptions" /> object.
            </value>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageRenderingOptions.SmoothingMode">
      <summary>
            Gets or sets the rendering quality for this Graphics.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Image.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Rendering.Image</b> namespace provides
            specific device class as well as few rendering options
            classes responsible for rendering to raster formats: jpeg, png, bmp, gif, tiff.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Image.TextOptions">
      <summary>
            Represents text rendering options for <see cref="T:Aspose.Html.Rendering.Image.ImageDevice" />.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.TextOptions.TextRenderingHint">
      <summary>
            Sets or gets <see cref="T:System.Drawing.Text.TextRenderingHint" /> which influences text rendering quality. By default this property is <see cref="F:System.Drawing.Text.TextRenderingHint.SystemDefault" />.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.MhtmlRenderer">
      <summary>
            Represents a MHTML document renderer.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.MhtmlRenderer.Render(Aspose.Html.Rendering.IDevice,System.TimeSpan,System.IO.Stream[])">
      <summary>
            Renders multiple MHTML documents into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            The rendering will be performed once there are no any network operations for loading resources, active timers, animation tasks or specified timeout is elapsed.
            </summary>
      <param name="device">The device.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 millisecond to wait indefinitely.</param>
      <param name="documents">The documents to render.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.MhtmlRenderer.Render(Aspose.Html.Rendering.IDevice,System.IO.Stream,Aspose.Html.Configuration)">
      <summary>
            Renders MHTML document into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            </summary>
      <param name="device">The device.</param>
      <param name="document">The document.</param>
      <param name="configuration">The configuration.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.MhtmlRenderer.Render(Aspose.Html.Rendering.IDevice,System.IO.Stream,Aspose.Html.Configuration,System.TimeSpan)">
      <summary>
            Renders MHTML document into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            The rendering will be performed once there are no any network operations for loading resources, active timers, animation tasks or specified timeout is elapsed.
            </summary>
      <param name="device">The device.</param>
      <param name="document">The document.</param>
      <param name="configuration">The configuration.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 millisecond to wait indefinitely.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.MhtmlRenderer.Render(Aspose.Html.Rendering.IDevice,System.Collections.Generic.IList{System.IO.Stream},Aspose.Html.Configuration)">
      <summary>
            Renders multiple MHTML documents into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            </summary>
      <param name="device">The device.</param>
      <param name="documents">The <see cref="T:System.Collections.Generic.IList`1" /> of documents to render.</param>
      <param name="configuration">The configuration.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.MhtmlRenderer.Render(Aspose.Html.Rendering.IDevice,System.Collections.Generic.IList{System.IO.Stream},Aspose.Html.Configuration,System.TimeSpan)">
      <summary>
            Renders multiple MHTML documents into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            The rendering will be performed once there are no any network operations for loading resources, active timers, animation tasks or specified timeout is elapsed.
            </summary>
      <param name="device">The device.</param>
      <param name="documents">The <see cref="T:System.Collections.Generic.IList`1" /> of documents to render.</param>
      <param name="configuration">The configuration.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 millisecond to wait indefinitely.</param>
    </member>
    <member name="T:Aspose.Html.Rendering.Pdf.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Rendering.Pdf</b> namespace provides
            specific device class as well as few rendering options classes
            responsible for rendering to a pdf document.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Pdf.NamespaceGroupDoc">
      <summary>
            This namespace group contains namespaces related to PDF document rendering
            and additional namespace for providing encryption details specific to
            PDF document generation.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Pdf.PdfDevice">
      <summary>
            Represents rendering to a pdf document.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext">
      <summary>
            Holds current graphics control parameters for the PdfDevice.
            These parameters define the global framework within which the graphics operators execute.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>
            Modify the current transformation matrix by multiplying the specified matrix.
            </summary>
      <param name="matrix">Transformation matrix.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.Clone">
      <summary>
            Creates a new instance of a class with the same property values as an existing instance.
            </summary>
      <returns>
            Instance of a GraphicContext
            </returns>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.FillBrush">
      <summary>
            Sets or gets the brush object that is used to fill the interiors of paths.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.LineCap">
      <summary>
            Sets or gets the code specifying the shape of the endpoints for any open path that is stroked.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.LineJoin">
      <summary>
            Sets or gets the code specifying the shape of joints between connected segments of a stroked path.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.LineWidth">
      <summary>
            Sets or gets the thickness of paths to be stroked.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.MiterLimit">
      <summary>
            Sets or gets the maximum length of mitered line joins for stroked paths. 
            This parameter limits the length of "spikes" produced when line segments join at sharp angles.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.StrokeBrush">
      <summary>
            Sets or gets the brush object that is used for stroked paths.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.TransformationMatrix">
      <summary>
            Sets or gets transformation matrix.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.#ctor(Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Pdf.PdfDevice" /> class.
            </summary>
      <param name="streamProvider">The stream provider.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.#ctor(Aspose.Html.Rendering.Pdf.PdfRenderingOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Pdf.PdfDevice" /> class by rendering options and stream provider.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="streamProvider">Object that implements the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Pdf.PdfDevice" /> class.
            </summary>
      <param name="file">The output file name.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.#ctor(Aspose.Html.Rendering.Pdf.PdfRenderingOptions,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Pdf.PdfDevice" /> class by rendering options and output file name.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="file">The output file name.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Pdf.PdfDevice" /> class.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.#ctor(Aspose.Html.Rendering.Pdf.PdfRenderingOptions,System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Pdf.PdfDevice" /> class by rendering options and output stream.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="stream">The output stream.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.SaveGraphicContext">
      <summary>
            Pushes a copy of the entire graphics context onto the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.RestoreGraphicContext">
      <summary>
            Restores the entire graphics context to its former value by popping it from the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.AddRect(System.Drawing.RectangleF)">
      <summary>
            Appends a rectangle to the current path as a complete subpath.
            </summary>
      <param name="rect">A rectangle to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.Initialize">
      <summary>
            Initializes context stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.BeginDocument(Aspose.Html.Dom.Document)">
      <summary>
            Begins rendering of the document.
            </summary>
      <param name="document">The document.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.BeginElement(Aspose.Html.Dom.Element,System.Drawing.RectangleF)">
      <summary>
            Begins rendering of the element.
            </summary>
      <param name="element">The <see cref="T:Aspose.Html.Dom.Element" />.</param>
      <param name="rect">Bounding box of the node.</param>
      <returns>
            Returns [true] if element should be processed.
            </returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.BeginPage(System.Drawing.SizeF)">
      <summary>
            Begins rendering of the new page.
            </summary>
      <param name="size">Size of the page.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.Clip(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Modifies the current clipping path by intersecting it with the current path, using the FillMode rule to determine the region to fill. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is clipped</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.ClosePath">
      <summary>
            Closes the current subpath by appending a straight line segment from the current point to the starting point of the subpath. 
            If the current subpath is already closed, "ClosePath" does nothing.
            This operator terminates the current subpath. Appending another segment to the current path begins a new subpath, 
            even if the new segment begins at the endpoint reached by the "ClosePath" method.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.CubicBezierTo(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Appends a cubic Bézier curve to the current path. The curve extends from the current point to the point pt2,
            using pt1 and pt2 as the Bézier control points. The new current point is pt3.
            </summary>
      <param name="pt1">Coordinates of first point</param>
      <param name="pt2">Coordinates of second point</param>
      <param name="pt3">Coordinates of third point</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.DrawImage(System.Byte[],Aspose.Html.Rendering.ImageType,System.Drawing.RectangleF)">
      <summary>
            Draws the specified image.
            </summary>
      <param name="data">An array of bytes representing the image.</param>
      <param name="type">Image type.</param>
      <param name="rect">A rectangel which determines position and size to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.EndDocument">
      <summary>
            Ends rendering of the document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.Flush">
      <summary>
            Flushes all data to output stream.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.EndElement(Aspose.Html.Dom.Element)">
      <summary>
            Ends rendering of the element.
            </summary>
      <param name="element">The <see cref="T:Aspose.Html.Dom.Element" />.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.EndPage">
      <summary>
            Ends rendering of the current page.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.Fill(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Fills the entire region enclosed by the current path. 
            If the path consists of several disconnected subpaths, it fills the insides of all subpaths, 
            considered together. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.FillText(System.String,System.Drawing.PointF)">
      <summary>
            Fills the specified text string at the specified location.
            </summary>
      <param name="text">String to fill.</param>
      <param name="pt">Point that specifies the coordinates of the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.LineTo(System.Drawing.PointF)">
      <summary>
            Appends a straight line segment from the current point to the point (pt). The new current point is pt.
            </summary>
      <param name="pt">Point of where to create the line to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.MoveTo(System.Drawing.PointF)">
      <summary>
            Begins a new subpath by moving the current point to coordinates of the parameter pt, omitting any connecting line segment. 
            If the previous path construction method in the current path was also "MoveTo", the new "MoveTo" overrides it; 
            no vestige of the previous "MoveTo" operation remains in the path.
            </summary>
      <param name="pt">Point of where to move the path to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.Stroke">
      <summary> 
            Strokes a line along the current path. The stroked line follows each straight or curved segment in the path, 
            centered on the segment with sides parallel to it. Each of the path’s subpaths is treated separately. 
            This method terminates current path. 
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.StrokeAndFill(System.Drawing.Drawing2D.FillMode)">
      <summary>
            Strokes and fill current path.
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.StrokeText(System.String,System.Drawing.PointF)">
      <summary>
            Strokes the specified text string at the specified location.
            </summary>
      <param name="text">String to stroke.</param>
      <param name="pt">Point that specifies the coordinates where to start the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.GetExtension">
      <summary>
            Gets extension of the output file.
            </summary>
      <returns>The file extension.</returns>
    </member>
    <member name="T:Aspose.Html.Rendering.Pdf.PdfDocumentInfo">
      <summary>
            Represents the information about the PDF document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDocumentInfo.Title">
      <summary>
            The document's title.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDocumentInfo.Author">
      <summary>
            The name of the person who created the document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDocumentInfo.Subject">
      <summary>
            The subject of the document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDocumentInfo.Keywords">
      <summary>
            Keywords associated with the document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDocumentInfo.Creator">
      <summary>
            The name of the product that created the original document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDocumentInfo.Producer">
      <summary>
            The name of the product that converted the document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDocumentInfo.CreationDate">
      <summary>
            Gets or sets the document's creation date specified as the Coordinated Universal Time (UTC).
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDocumentInfo.ModificationDate">
      <summary>
            Gets or sets the document's modification date specified as the Coordinated Universal Time (UTC).
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Pdf.PdfRenderingOptions">
      <summary>
            Represents rendering options for <see cref="T:Aspose.Html.Rendering.Pdf.PdfDevice" />.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfRenderingOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Pdf.PdfRenderingOptions" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfRenderingOptions.DocumentInfo">
      <summary>
            Contains information about the output PDF document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfRenderingOptions.JpegQuality">
      <summary>
            Specifies the quality of JPEG compression for images (if JPEG compression is used).
            Default is 95.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfRenderingOptions.Encryption">
      <summary>
            Gets or sets a encryption details. If not set, then no encryption will be performed.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Pdf.Encryption.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Rendering.Pdf.Encryption</b> namespace contains
            data classes describing pdf encryption details like password,
            encryption algorithm and so on.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionAlgorithm">
      <summary>
            Encryption mode enum. Describe using algorithm and key length.
            This enum is extended in order to be able to further increase functionality.
            This enum implements "Base-to-Core" pattern.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionAlgorithm.RC4_40">
      <summary>
            Algorithm, with an RC4 encryption key length of 40 bits;
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionAlgorithm.RC4_128">
      <summary>
            Algorithm, with an RC4 encryption key length of 128 bits and advanced permission set;
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionInfo">
      <summary>
            Contains details for a pdf encryption.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionInfo.#ctor(System.String,System.String,Aspose.Html.Rendering.Pdf.Encryption.PdfPermissions,Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionAlgorithm)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionInfo" /> class.
            </summary>
      <param name="userPassword">The user password.</param>
      <param name="ownerPassword">The owner password.</param>
      <param name="permissions">The permissions.</param>
      <param name="encryptionAlgorithm">The encryption algorithm.</param>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionInfo.UserPassword">
      <summary>
            Gets or sets the User password.
            </summary>
      <value>
            The user password.
            </value>
      <remarks>
            Opening the document with the correct user password (or opening a document
            that does not have a user password) allows additional operations to be
            performed according to the user access permissions specified in the document’s
            encryption dictionary.
            </remarks>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionInfo.OwnerPassword">
      <summary>
            Gets or sets the Owner password.
            </summary>
      <value>
            The owner password.
            </value>
      <remarks>
            Opening the document with the correct owner password (assuming it is not the
            same as the user password) allows full (owner) access to the document. This
            unlimited access includes the ability to change the document’s passwords and
            access permissions.
            </remarks>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionInfo.Permissions">
      <summary>
            Gets or sets the permissions.
            </summary>
      <value>
            The permissions.
            </value>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionInfo.EncryptionAlgorithm">
      <summary>
            Gets or sets the encryption mode.
            </summary>
      <value>
            The encryption algorithm.
            </value>
    </member>
    <member name="T:Aspose.Html.Rendering.Pdf.Encryption.PdfPermissions">
      <summary>
            This enum represents user's permissions for a pdf.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Pdf.Encryption.PdfPermissions.PrintDocument">
      <summary>
            (Security handlers of revision 2) Print the document. 
            (Security handlers of revision 3 or greater) Print the document (possibly not at the highest quality level, depending on whether PrintingQuality is also set).
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Pdf.Encryption.PdfPermissions.ModifyContent">
      <summary>
            Modify the contents of the document by operations other than those controlled by ModifyTextAnnotations, FillForm, and 11.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Pdf.Encryption.PdfPermissions.ExtractContent">
      <summary>
            Security handlers of revision 2) Copy or otherwise extract text and graphics from the document,
             including extracting text and graphics (in support of accessibility to users with disabilities or for other purposes).
            (Security handlers of revision 3 or greater) Copy or otherwise extract text and graphics from the document by operations other than that controlled by
             ExtractContentWithDisabilities.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Pdf.Encryption.PdfPermissions.ModifyTextAnnotations">
      <summary>
            Add or modify text annotations, fill in interactive form fields, and, if ModifyContent is also set, create or modify interactive form fields (including signature fields).
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Pdf.Encryption.PdfPermissions.FillForm">
      <summary>
            (Security handlers of revision 3 or greater) Fill in existing interactive form fields (including signature fields), even if ModifyTextAnnotations is clear.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Pdf.Encryption.PdfPermissions.ExtractContentWithDisabilities">
      <summary>
            (Security handlers of revision 3 or greater) Extract text and graphics (in support of accessibility to users with disabilities or for other purposes).
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Pdf.Encryption.PdfPermissions.AssembleDocument">
      <summary>
            (Security handlers of revision 3 or greater) Assemble the document (insert, rotate, or delete pages and create bookmarks or thumbnail images), even if ModifyContent is clear.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Pdf.Encryption.PdfPermissions.PrintingQuality">
      <summary>
            (Security handlers of revision 3 or greater) Print the document to a representation from which a faithful digital copy of the PDF content could be generated.
            When this bit is clear (and bit 3 is set), printing is limited to a low-level representation of the appearance, possibly of degraded quality.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.SvgRenderer">
      <summary>
            Represents SVG document renderer.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGDocument" />
    </member>
    <member name="M:Aspose.Html.Rendering.SvgRenderer.Render(Aspose.Html.Rendering.IDevice,System.TimeSpan,Aspose.Html.Dom.Svg.SVGDocument[])">
      <summary>
            Defines method for rendering multiple <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" />s into specific <see cref="T:Aspose.Html.Rendering.IDevice" />.
            The rendering will be performed once there are no any network operations for loading resources, active timers, animation tasks or specified timeout is elapsed.
            </summary>
      <param name="device">The output device.</param>
      <param name="timeout">A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 millisecond to wait indefinitely.</param>
      <param name="documents">The documents to render.</param>
    </member>
    <member name="T:Aspose.Html.Rendering.Xps.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Rendering.Xps</b> namespace provides
            specific device class as well as few rendering
            options classes responsible for rendering to a xps document.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Xps.XpsDevice">
      <summary>
            Represents rendering to a xps document.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Xps.XpsDevice.XpsGraphicContext">
      <summary>
            Holds current graphics control parameters for the XpsDevice.
            These parameters define the global framework within which the graphics operators execute.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.XpsGraphicContext.Clone">
      <summary>
            Creates a new instance of a XpsGraphicContext class with the same property values as an existing instance.
            </summary>
      <returns>Instance of a XpsGraphicContext</returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.#ctor(Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Xps.XpsDevice" /> class.
            </summary>
      <param name="streamProvider">The stream provider.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.#ctor(Aspose.Html.Rendering.Xps.XpsRenderingOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Xps.XpsDevice" /> class by rendering options and stream provider.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="streamProvider">Object that implements the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Xps.XpsDevice" /> class.
            </summary>
      <param name="file">The output file name.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.#ctor(Aspose.Html.Rendering.Xps.XpsRenderingOptions,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Xps.XpsDevice" /> class by rendering options and output file name.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="file">The output file name.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Xps.XpsDevice" /> class.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.#ctor(Aspose.Html.Rendering.Xps.XpsRenderingOptions,System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Xps.XpsDevice" /> class by rendering options and output stream.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="stream">The output stream.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.RestoreGraphicContext">
      <summary>
            Restores the entire graphics context to its former value by popping it from the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.LineTo(System.Drawing.PointF)">
      <summary>
            Appends a straight line segment from the current point to the point (pt). The new current point is pt.
            </summary>
      <param name="pt">Point of where to create the line to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.MoveTo(System.Drawing.PointF)">
      <summary>
            Begins a new subpath by moving the current point to coordinates of the parameter pt, omitting any connecting line segment. 
            If the previous path construction method in the current path was also "MoveTo", the new "MoveTo" overrides it; 
            no vestige of the previous "MoveTo" operation remains in the path.
            </summary>
      <param name="pt">Point of where to move the path to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.CubicBezierTo(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Appends a cubic Bézier curve to the current path. The curve extends from the current point to the point pt2,
            using pt1 and pt2 as the Bézier control points. The new current point is pt3.
            </summary>
      <param name="pt1">Coordinates of first point</param>
      <param name="pt2">Coordinates of second point</param>
      <param name="pt3">Coordinates of third point</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.AddRect(System.Drawing.RectangleF)">
      <summary>
            Appends a rectangle to the current path as a complete subpath.
            </summary>
      <param name="rect">A rectangle to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.ClosePath">
      <summary>
            Closes the current subpath by appending a straight line segment from the current point to the starting point of the subpath. 
            If the current subpath is already closed, "ClosePath" does nothing.
            This operator terminates the current subpath. Appending another segment to the current path begins a new subpath, 
            even if the new segment begins at the endpoint reached by the "ClosePath" method.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.Clip(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Modifies the current clipping path by intersecting it with the current path, using the FillMode rule to determine the region to fill. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is clipped</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.Fill(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Fills the entire region enclosed by the current path. 
            If the path consists of several disconnected subpaths, it fills the insides of all subpaths, 
            considered together. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.StrokeAndFill(System.Drawing.Drawing2D.FillMode)">
      <summary>
            Strokes and fill current path.
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.Stroke">
      <summary> 
            Strokes a line along the current path. The stroked line follows each straight or curved segment in the path, 
            centered on the segment with sides parallel to it. Each of the path’s subpaths is treated separately. 
            This method terminates current path. 
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.FillText(System.String,System.Drawing.PointF)">
      <summary>
            Fills the specified text string at the specified location.
            </summary>
      <param name="text">String to fill.</param>
      <param name="pt">Point that specifies the coordinates of the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.StrokeText(System.String,System.Drawing.PointF)">
      <summary>
            Strokes the specified text string at the specified location.
            </summary>
      <param name="text">String to stroke.</param>
      <param name="pt">Point that specifies the coordinates where to start the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.BeginDocument(Aspose.Html.Dom.Document)">
      <summary>
            Begins rendering of the document.
            </summary>
      <param name="document">The document.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.BeginElement(Aspose.Html.Dom.Element,System.Drawing.RectangleF)">
      <summary>
            Begins rendering of the element.
            </summary>
      <param name="element">The <see cref="T:Aspose.Html.Dom.Element" />.</param>
      <param name="rect">Bounding box of the node.</param>
      <returns>
            Returns [true] if element should be processed.
            </returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.BeginPage(System.Drawing.SizeF)">
      <summary>
            Begins rendering of the new page.
            </summary>
      <param name="size">Size of the page.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.EndPage">
      <summary>
            Ends rendering of the current page.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.Flush">
      <summary>
            Flushes all data to output stream.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.EndElement(Aspose.Html.Dom.Element)">
      <summary>
            Ends rendering of the element.
            </summary>
      <param name="element">The <see cref="T:Aspose.Html.Dom.Element" />.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.DrawImage(System.Byte[],Aspose.Html.Rendering.ImageType,System.Drawing.RectangleF)">
      <summary>
            Draws the specified image.
            </summary>
      <param name="data">An array of bytes representing the image.</param>
      <param name="type">Image type.</param>
      <param name="rect">A rectangel which determines position and size to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.GetExtension">
      <summary>
            Gets extension of the output file.
            </summary>
      <returns>The file extension.</returns>
    </member>
    <member name="T:Aspose.Html.Rendering.Xps.XpsRenderingOptions">
      <summary>
            Represents rendering options for <see cref="T:Aspose.Html.Rendering.Xps.XpsDevice" />.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.ISVGAnimatedPoints">
      <summary>
            The SVGAnimatedPoints interface supports elements which have a ‘points’ attribute which holds a list of coordinate values and which support the ability to animate that attribute.
            Additionally, the ‘points’ attribute on the original element accessed via the XML DOM(e.g., using the getAttribute() method call) will reflect any changes made to points.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.ISVGAnimatedPoints.Points">
      <summary>
            Provides access to the base (i.e., static) contents of the ‘points’ attribute.
            </summary>
      <value>
            The content of the ‘points’ attribute
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.ISVGAnimatedPoints.AnimatedPoints">
      <summary>
            Provides access to the current animated contents of the ‘points’ attribute. If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as points.
            </summary>
      <value>
            The animated points.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.ISVGFitToViewBox">
      <summary>
            Interface SVGFitToViewBox defines DOM attributes that apply to elements which have XML attributes ‘viewBox’ and ‘preserveAspectRatio’.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.ISVGFitToViewBox.ViewBox">
      <summary>
            Corresponds to attribute ‘viewBox’ on the given element.
            </summary>
      <value>
            The ‘viewBox’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.ISVGFitToViewBox.PreserveAspectRatio">
      <summary>
            Corresponds to attribute ‘preserveAspectRatio’ on the given element.
            </summary>
      <value>
            The ‘preserveAspectRatio’ of the given element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.ISVGRenderingIntent">
      <summary>
            The SVGRenderingIntent interface defines the enumerated list of possible values for ‘rendering-intent’ attributes or descriptors.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.ISVGTests">
      <summary>
            Interface SVGTests defines an interface which applies to all elements which have attributes ‘requiredFeatures’, ‘requiredExtensions’ and ‘systemLanguage’.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.ISVGTests.RequiredFeatures">
      <summary>
            Corresponds to attribute ‘requiredFeatures’ on the given element.
            </summary>
      <value>
            The required features.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.ISVGTests.RequiredExtensions">
      <summary>
            Corresponds to attribute ‘requiredExtensions’ on the given element.
            </summary>
      <value>
            The required extensions.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.ISVGTests.SystemLanguage">
      <summary>
            Corresponds to attribute ‘systemLanguage’ on the given element.
            </summary>
      <value>
            The system language.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.ISVGUnitTypes">
      <summary>
            The SVGUnitTypes interface defines a commonly used set of constants and is a base interface used by SVGGradientElement, SVGPatternElement, SVGClipPathElement, SVGMaskElement and SVGFilterElement.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.ISVGURIReference">
      <summary>
            Interface SVGURIReference defines an interface which applies to all elements which have the collection of XLink attributes, such as ‘xlink:href’, which define a URI reference.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.ISVGURIReference.Href">
      <summary>
            Corresponds to attribute ‘xlink:href’ on the given element.
            </summary>
      <value>
            The ‘xlink:href’ of the given element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.ISVGZoomAndPan">
      <summary>
            The SVGZoomAndPan interface defines attribute zoomAndPan and associated constants.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.ISVGZoomAndPan.ZoomAndPan">
      <summary>
            Corresponds to attribute ‘zoomAndPan’ on the given element. The value must be one of the SVG_ZOOMANDPAN_* constants defined on this interface.
            </summary>
      <value>
            The zoom and pan.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.NamespaceDoc">
      <summary>
            All classes in <b>Aspose.Html.Dom.Svg</b> namespace are based on
            w3c SVG2 recommendations. Using this namespace, you can load,
            navigate or render the SVG file as per your requirements.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.NamespaceGroupDoc">
      <summary>
            This namespace group contains namespaces which are
            specific to SVG document processing. It includes namespaces
            responsible for special collections, data types as well as filtering, saving and others.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGAElement">
      <summary>
            The SVGAElement interface corresponds to the ‘a’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGraphicsElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGURIReference" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGAElement.Href">
      <summary>
            Corresponds to attribute ‘xlink:href’ on the given element.
            </summary>
      <value>
            The ‘xlink:href’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGAElement.Target">
      <summary>
            Corresponds to attribute ‘target’ on the given ‘a’ element.
            </summary>
      <value>
            The attribute ‘target’ of the given ‘a’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGAnimateElement">
      <summary>
            The SVGAnimateElement interface corresponds to the ‘animate’ element.
            Object-oriented access to the attributes of the ‘animate’ element via the SVG DOM is not available.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGAnimationElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGAnimateMotionElement">
      <summary>
            The SVGAnimateMotionElement interface corresponds to the ‘animateMotion’ element.
            Object-oriented access to the attributes of the ‘animateMotion’ element via the SVG DOM is not available.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGAnimationElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGAnimateTransformElement">
      <summary>
            The SVGAnimateTransformElement interface corresponds to the ‘animateTransform’ element.
            Object-oriented access to the attributes of the ‘animateTransform’ element via the SVG DOM is not available.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGAnimationElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGAnimationElement">
      <summary>
            The SVGAnimationElement interface is the base interface for all of the animation element interfaces: SVGAnimateElement, SVGSetElement, SVGAnimateColorElement, SVGAnimateMotionElement and SVGAnimateTransformElement.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGTests" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGAnimationElement.RequiredFeatures">
      <summary>
            Corresponds to attribute ‘requiredFeatures’ on the given element.
            </summary>
      <value>
            The required features.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGAnimationElement.RequiredExtensions">
      <summary>
            Corresponds to attribute ‘requiredExtensions’ on the given element.
            </summary>
      <value>
            The required extensions.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGAnimationElement.SystemLanguage">
      <summary>
            Corresponds to attribute ‘systemLanguage’ on the given element.
            </summary>
      <value>
            The system language.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGAnimationElement.TargetElement">
      <summary>
            The element which is being animated.
            </summary>
      <value>
            The target element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGCircleElement">
      <summary>
            The SVGCircleElement interface corresponds to the ‘circle’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGeometryElement" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGCircleElement.Cx">
      <summary>
            Corresponds to attribute ‘cx’ on the given ‘circle’ element.
            </summary>
      <value>
            The attribute ‘cx’ of the given ‘circle’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGCircleElement.Cy">
      <summary>
            Corresponds to attribute ‘cy’ on the given ‘circle’ element.
            </summary>
      <value>
            The attribute ‘cy’ of the given ‘circle’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGCircleElement.R">
      <summary>
            Corresponds to attribute ‘r’ on the given ‘circle’ element.
            </summary>
      <value>
            The attribute ‘r’ of the given ‘circle’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGClipPathElement">
      <summary>
            The SVGClipPathElement interface corresponds to the ‘clipPath’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGraphicsElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGUnitTypes" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGClipPathElement.ClipPathUnits">
      <summary>
            Corresponds to attribute ‘clipPathUnits’ on the given ‘clipPath’ element. Takes one of the constants defined in SVGUnitTypes.
            </summary>
      <value>
            The attribute ‘clipPathUnits’ of the given ‘clipPath’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGClipPathElement.Transform">
      <summary>
            Corresponds to attribute ‘transform’ on the given element.
            </summary>
      <value>
            The element transform.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement">
      <summary>
            This interface defines a base interface used by the component transfer function interfaces.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN">
      <summary>
            The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY">
      <summary>
            Corresponds to value 'identity'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_TABLE">
      <summary>
            Corresponds to value 'table'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE">
      <summary>
            Corresponds to value 'discrete'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_LINEAR">
      <summary>
            Corresponds to value 'linear'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement.SVG_FECOMPONENTTRANSFER_TYPE_GAMMA">
      <summary>
            Corresponds to value 'gamma'.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement.Type">
      <summary>
            Corresponds to attribute ‘type’ on the given element. Takes one of the SVG_FECOMPONENTTRANSFER_TYPE_* constants defined on this interface.
            </summary>
      <value>
            The attribute ‘type’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement.TableValues">
      <summary>
            Corresponds to attribute ‘tableValues’ on the given element.
            </summary>
      <value>
            The attribute ‘type’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement.Slope">
      <summary>
            Corresponds to attribute ‘slope’ on the given element.
            </summary>
      <value>
            The attribute ‘slope’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement.Intercept">
      <summary>
            Corresponds to attribute ‘intercept’ on the given element.
            </summary>
      <value>
            The attribute ‘intercept’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement.Amplitude">
      <summary>
            Corresponds to attribute ‘amplitude’ on the given element.
            </summary>
      <value>
            The attribute ‘amplitude’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement.Exponent">
      <summary>
            Corresponds to attribute ‘exponent’ on the given element.
            </summary>
      <value>
            The attribute ‘exponent’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement.Offset">
      <summary>
            Corresponds to attribute ‘offset’ on the given element.
            </summary>
      <value>
            The attribute ‘offset’ of the given element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGCursorElement">
      <summary>
            The SVGCursorElement interface corresponds to the ‘cursor’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGURIReference" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGTests" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGCursorElement.Href">
      <summary>
            Corresponds to attribute ‘xlink:href’ on the given element.
            </summary>
      <value>
            The ‘xlink:href’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGCursorElement.RequiredFeatures">
      <summary>
            Corresponds to attribute ‘requiredFeatures’ on the given element.
            </summary>
      <value>
            The required features.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGCursorElement.RequiredExtensions">
      <summary>
            Corresponds to attribute ‘requiredExtensions’ on the given element.
            </summary>
      <value>
            The required extensions.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGCursorElement.SystemLanguage">
      <summary>
            Corresponds to attribute ‘systemLanguage’ on the given element.
            </summary>
      <value>
            The system language.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGCursorElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘cursor’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘cursor’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGCursorElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘cursor’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘cursor’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGDefsElement">
      <summary>
            The SVGDefsElement interface corresponds to the ‘defs’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGraphicsElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGDescElement">
      <summary>
            The SVGDescElement interface corresponds to the ‘desc’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGDocument">
      <summary>
            An <c>SVGDocument</c> is the root of the SVG hierarchy and holds the entire content. Besides providing access to the hierarchy, it also provides some convenience methods for accessing certain sets of information from the document.
            When an ‘svg’ element is embedded inline as a component of a document from another namespace, such as when an ‘svg’ element is embedded inline within an XHTML document [XHTML], then an SVGDocument object will not exist; instead, the root object in the document object hierarchy will be a Document object of a different type, such as an HTMLDocument object.
            However, an SVGDocument object will indeed exist when the root element of the XML document hierarchy is an ‘svg’ element, such as when viewing a stand-alone SVG file(i.e., a file with MIME type "image/svg+xml"). In this case, the SVGDocument object will be the root object of the document object model hierarchy.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Document" />
      <seealso cref="T:Aspose.Html.Dom.Events.IDocumentEvent" />
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor(Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class.
            </summary>
      <param name="configuration">The configuration.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.String)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="address">The document address. It will be combined with the current directory path to form an absolute URL.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor(Aspose.Html.Url)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(Aspose.Html.Url)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="url">The document URL.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor(System.String,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.String)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="address">The document address. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The configuration.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor(Aspose.Html.Url,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(Aspose.Html.Url)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The configuration.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor(System.IO.Stream,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.IO.Stream,System.String)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            Document loading starts from the current position in the stream.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor(System.IO.Stream,System.String,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.IO.Stream,System.String)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            Document loading starts from the current position in the stream.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor(System.IO.Stream,Aspose.Html.Url)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.IO.Stream,Aspose.Html.Url)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            Document loading starts from the current position in the stream.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor(System.IO.Stream,Aspose.Html.Url,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.IO.Stream,Aspose.Html.Url)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            Document loading starts from the current position in the stream.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document.</param>
      <param name="configuration">The configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.String,System.String)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor(System.String,System.String,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.String,System.String)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document. It will be combined with the current directory path to form an absolute URL.</param>
      <param name="configuration">The configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor(System.String,Aspose.Html.Url)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.String,Aspose.Html.Url)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor(System.String,Aspose.Html.Url,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(System.String,Aspose.Html.Url)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document.</param>
      <param name="configuration">The configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <c>baseUri</c> is <c>null</c>.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor(Aspose.Html.Net.RequestMessage)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(Aspose.Html.Net.RequestMessage)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="request">The request.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.#ctor(Aspose.Html.Net.RequestMessage,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGDocument" /> class. Constructor works synchronously, it waits for loading of all the external resources (images, scripts, etc.).
            To load document asynchronously use method <see cref="M:Aspose.Html.Dom.Document.Navigate(Aspose.Html.Net.RequestMessage)" /> or its overloads.
            Or you can disable loading of some external resources by setting appropriate flags in <see cref="P:Aspose.Html.Dom.IBrowsingContext.Security" />.
            </summary>
      <param name="request">The request.</param>
      <param name="configuration">The configuration.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.Save(Aspose.Html.Url)">
      <summary>
            Saves the document to local file specified by <c>url</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="url">Local URL to output file.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>url</c> is not a valid local file URL.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.Save(System.String)">
      <summary>
            Saves the document to local file specified by <c>path</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="path">Local path to output file.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>path</c> is not a valid local file path.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.Save(Aspose.Html.IO.IOutputStorage)">
      <summary>
            Saves the document content and resources to the output storage.
            </summary>
      <param name="outputStorage">The output storage <see cref="T:Aspose.Html.IO.IOutputStorage" />.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.Save(System.String,Aspose.Html.Dom.Svg.Saving.SVGSaveFormat)">
      <summary>
            Saves the document to local file specified by <c>path</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="path">Local path to output file.</param>
      <param name="saveFormat">Format in which document is saved.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>path</c> is not a valid local file path.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.Save(Aspose.Html.IO.IOutputStorage,Aspose.Html.Dom.Svg.Saving.SVGSaveFormat)">
      <summary>
            Saves the document content and resources to the output storage.
            </summary>
      <param name="outputStorage">The output storage <see cref="T:Aspose.Html.IO.IOutputStorage" />.</param>
      <param name="saveFormat">Format in which document is saved.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.Save(System.String,Aspose.Html.Dom.Svg.Saving.SVGSaveOptions)">
      <summary>
            Saves the document to local file specified by <c>path</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="path">Local path to output file.</param>
      <param name="saveOptions">SVG save options.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>path</c> is not a valid local file path.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.Save(Aspose.Html.IO.IOutputStorage,Aspose.Html.Dom.Svg.Saving.SVGSaveOptions)">
      <summary>
            Saves the document content and resources to the output storage.
            </summary>
      <param name="outputStorage">The output storage <see cref="T:Aspose.Html.IO.IOutputStorage" />.</param>
      <param name="saveOptions">SVG save options.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.Save(Aspose.Html.Url,Aspose.Html.Dom.Svg.Saving.SVGSaveFormat)">
      <summary>
            Saves the document to local file specified by <c>url</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="url">Local URL to output file.</param>
      <param name="saveFormat">Format in which document is saved.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>url</c> is not a valid local file URL.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.Save(Aspose.Html.Url,Aspose.Html.Dom.Svg.Saving.SVGSaveOptions)">
      <summary>
            Saves the document to local file specified by <c>url</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="url">Local URL to output file.</param>
      <param name="saveOptions">SVG save options.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>url</c> is not a valid local file URL.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.RenderTo(Aspose.Html.Rendering.IDevice)">
      <summary>
            This method is used to print the contents of the current document to the specified device.
            </summary>
      <param name="device">The user device.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGDocument.GetOverrideStyle(Aspose.Html.Dom.Element,System.String)">
      <summary>
            This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element.
             </summary>
      <param name="elt">The element whose style is to be modified. This parameter cannot be null.</param>
      <param name="pseudoElt">The pseudo-element or null if none.</param>
      <returns>The override style declaration</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGDocument.Title">
      <summary>
            The title of a document as specified by the ‘title’ sub-element of the ‘svg’ root element (i.e., <svg><title>Here is the title</title>...</svg>)
            </summary>
      <value>
            The title of a document.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGDocument.Referrer">
      <summary>
            Returns the URI of the page that linked to this page. The value is an empty string if the user navigated to the page directly (not through a link, but, for example, via a bookmark).
            </summary>
      <value>
            The referrer.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGDocument.Domain">
      <summary>
            The domain name of the server that served the document, or a null string if the server cannot be identified by a domain name.
            </summary>
      <value>
            The domain.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGDocument.URL">
      <summary>
            The complete URI of the document.
            </summary>
      <value>
            The URL.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGDocument.RootElement">
      <summary>
            The root ‘svg’ in the document hierarchy.
            </summary>
      <value>
            The root element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGElement">
      <summary>
            All of the SVG DOM interfaces that correspond directly to elements in the SVG language (such as the SVGPathElement interface for the ‘path’ element) derive from the SVGElement interface.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Element" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGElement.Id">
      <summary>
            The value of the ‘id’ attribute on the given element, or the empty string if ‘id’ is not present.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">Code NO_MODIFICATION_ALLOWED_ERR. Raised on an attempt to change the value of a read only attribute.</exception>
      <value>
            The identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGElement.OwnerSVGElement">
      <summary>
            The nearest ancestor ‘svg’ element. Null if the given element is the outermost svg element.
            </summary>
      <value>
            The owner SVG element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGElement.ViewportElement">
      <summary>
            The element which established the current viewport. Often, the nearest ancestor ‘svg’ element. Null if the given element is the outermost svg element.
            </summary>
      <value>
            The viewport element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGElement.ClassName">
      <summary>
            Corresponds to attribute ‘class’ on the given element.
            </summary>
      <value>
            The name of the class.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGElement.Style">
      <summary>
            Corresponds to attribute ‘style’ on the given element. If the user agent does not support styling with CSS, then this attribute must always have the value of null.
            </summary>
      <value>
            The style.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGElementInstance">
      <summary>
            The root object of each use-element shadow tree implements the SVGUseElementShadowRoot interface. This interface does not currently define any extensions to the properties and methods defined for the ShadowRoot interface and DocumentOrShadowRoot mixin. However, the tree rooted at this node is entirely read-only from the perspective of author scripts.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGEllipseElement">
      <summary>
            The SVGEllipseElement interface corresponds to the ‘ellipse’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGeometryElement" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGEllipseElement.Cx">
      <summary>
            Corresponds to attribute ‘cx’ on the given ‘circle’ element.
            </summary>
      <value>
            The attribute ‘cx’ of the given ‘circle’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGEllipseElement.Cy">
      <summary>
            Corresponds to attribute ‘cy’ on the given ‘circle’ element.
            </summary>
      <value>
            The attribute ‘cy’ of the given ‘circle’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGEllipseElement.Rx">
      <summary>
            Corresponds to attribute ‘cx’ on the given ‘circle’ element.
            </summary>
      <value>
            The attribute ‘rx’ of the given ‘circle’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGEllipseElement.Ry">
      <summary>
            Corresponds to attribute ‘ry’ on the given ‘circle’ element.
            </summary>
      <value>
            The attribute ‘ry’ of the given ‘circle’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGException">
      <summary>
            This exception is raised when a specific SVG operation is impossible to perform.
            </summary>
      <seealso cref="T:System.Exception" />
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGException.SVG_WRONG_TYPE_ERR">
      <summary>
            Raised when an object of the wrong type is passed to an operation.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGException.SVG_INVALID_VALUE_ERR">
      <summary>
            Raised when an invalid value is passed to an operation or assigned to an attribute.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGException.SVG_MATRIX_NOT_INVERTABLE">
      <summary>
            Raised when an attempt is made to invert a matrix that is not invertible.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGException.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.SVGException" /> class.
            </summary>
      <param name="code">The error code.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGException.Code">
      <summary>
            A code identifying the reason why the requested operation could not be performed. The value of this member will be one of the constants in the SVGException code group.
            </summary>
      <value>
            The error code.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGFilterElement">
      <summary>
            The SVGFilterElement interface corresponds to the ‘filter’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGURIReference" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGUnitTypes" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGFilterElement.Href">
      <summary>
            Corresponds to attribute ‘xlink:href’ on the given element.
            </summary>
      <value>
            The ‘xlink:href’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGFilterElement.FilterUnits">
      <summary>
            Corresponds to attribute ‘filterUnits’ on the given ‘filter’ element. Takes one of the constants defined in SVGUnitTypes.
            </summary>
      <value>
            The attribute ‘filterUnits’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGFilterElement.PrimitiveUnits">
      <summary>
            Corresponds to attribute ‘primitiveUnits’ on the given ‘filter’ element. Takes one of the constants defined in SVGUnitTypes.
            </summary>
      <value>
            The attribute ‘primitiveUnits’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGFilterElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGFilterElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGFilterElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGFilterElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGForeignObjectElement">
      <summary>
            The SVGForeignObjectElement interface corresponds to the ‘foreignObject’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGraphicsElement" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGForeignObjectElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘foreignObject’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘foreignObject’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGForeignObjectElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘foreignObject’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘foreignObject’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGForeignObjectElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘foreignObject’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘foreignObject’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGForeignObjectElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘foreignObject’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘foreignObject’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGGElement">
      <summary>
            The SVGGElement interface corresponds to the ‘g’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGraphicsElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGGeometryElement">
      <summary>
            Interface SVGGeometryElement represents SVG elements whose rendering is defined by geometry with an equivalent path, and which can be filled and stroked. This includes paths and the basic shapes.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGraphicsElement" />
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGGeometryElement.GetEquivalentPath">
      <summary>
            Returns a new instance instance of the <see cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegList" /> which represents <see cref="T:Aspose.Html.Dom.Svg.SVGGeometryElement" /> as path segments.
            </summary>
      <returns>A new instance instance of the <see cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegList" />.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGGeometryElement.GetTotalLength">
      <summary>
            Returns the user agent's computed value for the total length of the path using the user agent's distance-along-a-path algorithm, as a distance in the current user coordinate system.
            </summary>
      <returns>The total length of the path.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGGeometryElement.GetPointAtLength(System.Single)">
      <summary>
            Returns the (x,y) coordinate in user space which is distance units along the path, utilizing the user agent's distance-along-a-path algorithm.
            </summary>
      <param name="distance">The distance along the path, relative to the start of the path, as a distance in the current user coordinate system.</param>
      <returns>The returned point in user space.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGGeometryElement.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGGeometryElement.PathLength">
      <summary>
            Corresponds to attribute pathLength on the given element.
            </summary>
      <value>
            The attribute pathLength on the given element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGGradientElement">
      <summary>
            The SVGGradientElement interface is a base interface used by SVGLinearGradientElement and SVGRadialGradientElement.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGURIReference" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGUnitTypes" />
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGGradientElement.SVG_SPREADMETHOD_UNKNOWN">
      <summary>
            The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGGradientElement.SVG_SPREADMETHOD_PAD">
      <summary>
            Corresponds to value 'pad'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGGradientElement.SVG_SPREADMETHOD_REFLECT">
      <summary>
            Corresponds to value 'reflect'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGGradientElement.SVG_SPREADMETHOD_REPEAT">
      <summary>
            Corresponds to value 'repeat'.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGGradientElement.Href">
      <summary>
            Corresponds to attribute ‘xlink:href’ on the given element.
            </summary>
      <value>
            The ‘xlink:href’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGGradientElement.GradientUnits">
      <summary>
            Corresponds to attribute ‘gradientUnits’ on the given element. Takes one of the constants defined in SVGUnitTypes.
            </summary>
      <value>
            The attribute ‘gradientUnits’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGGradientElement.GradientTransform">
      <summary>
            Corresponds to attribute ‘gradientTransform’ on the given element.
            </summary>
      <value>
            The attribute ‘gradientTransform’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGGradientElement.SpreadMethod">
      <summary>
            Corresponds to attribute ‘spreadMethod’ on the given element. One of the Spread Method Types defined on this interface.
            </summary>
      <value>
            The attribute ‘spreadMethod’ of the given element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGGraphicsElement">
      <summary>
            The SVGGraphicsElement interface represents SVG elements whose primary purpose is to directly render graphics into a group.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGTests" />
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGGraphicsElement.GetBBox">
      <summary>
            Returns the tight bounding box in current user space (i.e., after application of the ‘transform’ attribute, if any) on the geometry of all contained graphics elements, exclusive of stroking, clipping, masking and filter effects). Note that getBBox must return the actual bounding box at the time the method was called, even in case the element has not yet been rendered.
            </summary>
      <returns>An SVGRect object that defines the bounding box.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGGraphicsElement.GetCTM">
      <summary>
            Returns the transformation matrix from current user units (i.e., after application of the ‘transform’ attribute, if any) to the viewport coordinate system for the nearestViewportElement.
            </summary>
      <returns>An SVGMatrix object that defines the CTM.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGGraphicsElement.GetScreenCTM">
      <summary>
            Returns the transformation matrix from current user units (i.e., after application of the ‘transform’ attribute, if any) to the parent user agent's notice of a "pixel". For display devices, ideally this represents a physical screen pixel. For other devices or environments where physical pixel sizes are not known, then an algorithm similar to the CSS2 definition of a "pixel" can be used instead. Note that null is returned if this element is not hooked into the document tree. This method would have been more aptly named as getClientCTM, but the name getScreenCTM is kept for historical reasons.
            </summary>
      <returns>An SVGMatrix object that defines the given transformation matrix.</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGGraphicsElement.NearestViewportElement">
      <summary>
            The element which established the current viewport. Often, the nearest ancestor ‘svg’ element. Null if the current element is the outermost svg element.
            </summary>
      <value>
            The nearest viewport element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGGraphicsElement.FarthestViewportElement">
      <summary>
            The farthest ancestor ‘svg’ element. Null if the current element is the outermost svg element.
            </summary>
      <value>
            The farthest viewport element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGGraphicsElement.Transform">
      <summary>
            Corresponds to attribute ‘transform’ on the given element.
            </summary>
      <value>
            The element transform.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGGraphicsElement.RequiredFeatures">
      <summary>
            Corresponds to attribute ‘requiredFeatures’ on the given element.
            </summary>
      <value>
            The required features.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGGraphicsElement.RequiredExtensions">
      <summary>
            Corresponds to attribute ‘requiredExtensions’ on the given element.
            </summary>
      <value>
            The required extensions.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGGraphicsElement.SystemLanguage">
      <summary>
            Corresponds to attribute ‘systemLanguage’ on the given element.
            </summary>
      <value>
            The system language.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGImageElement">
      <summary>
            The SVGImageElement interface corresponds to the ‘image’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGraphicsElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGURIReference" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGImageElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘image’ element.
            </summary>
      <value>
            Corresponds to attribute ‘x’ on the given ‘image’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGImageElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘image’ element.
            </summary>
      <value>
            Corresponds to attribute ‘y’ on the given ‘image’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGImageElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘image’ element.
            </summary>
      <value>
            Corresponds to attribute ‘width’ on the given ‘image’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGImageElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘image’ element.
            </summary>
      <value>
            Corresponds to attribute ‘height’ on the given ‘image’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGImageElement.PreserveAspectRatio">
      <summary>
            Corresponds to attribute ‘preserveAspectRatio’ on the given ‘image’ element.
            </summary>
      <value>
            The preserve aspect ratio.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGImageElement.Href">
      <summary>
            Corresponds to attribute ‘xlink:href’ on the given element.
            </summary>
      <value>
            The ‘xlink:href’ of the given element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGLinearGradientElement">
      <summary>
            The SVGLinearGradientElement interface corresponds to the ‘linearGradient’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGradientElement" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGLinearGradientElement.X1">
      <summary>
            Corresponds to attribute ‘x1’ on the given ‘linearGradient’ element.
            </summary>
      <value>
            The attribute ‘x1’ of the given ‘linearGradient’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGLinearGradientElement.Y1">
      <summary>
            Corresponds to attribute ‘y1’ on the given ‘linearGradient’ element.
            </summary>
      <value>
            The attribute ‘y1’ of the given ‘linearGradient’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGLinearGradientElement.X2">
      <summary>
            Corresponds to attribute ‘x2’ on the given ‘linearGradient’ element.
            </summary>
      <value>
            The attribute ‘x2’ of the given ‘linearGradient’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGLinearGradientElement.Y2">
      <summary>
            Corresponds to attribute ‘y2’ on the given ‘linearGradient’ element.
            </summary>
      <value>
            The attribute ‘y2’ of the given ‘linearGradient’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGLineElement">
      <summary>
            The SVGLineElement interface corresponds to the ‘line’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGeometryElement" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGLineElement.X1">
      <summary>
            Corresponds to attribute ‘x1’ on the given ‘line’ element.
            </summary>
      <value>
            The attribute ‘x1’ of the given ‘line’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGLineElement.Y1">
      <summary>
            Corresponds to attribute ‘y1’ on the given ‘line’ element.
            </summary>
      <value>
            The attribute ‘y1’ of the given ‘line’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGLineElement.X2">
      <summary>
            Corresponds to attribute ‘x2’ on the given ‘line’ element.
            </summary>
      <value>
            The attribute ‘x2’ of the given ‘line’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGLineElement.Y2">
      <summary>
            Corresponds to attribute ‘y2’ on the given ‘line’ element.
            </summary>
      <value>
            The attribute ‘y2’ of the given ‘line’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGMarkerElement">
      <summary>
            The SVGMarkerElement interface corresponds to the ‘marker’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGFitToViewBox" />
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGMarkerElement.SVG_MARKERUNITS_UNKNOWN">
      <summary>
            The marker unit type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGMarkerElement.SVG_MARKERUNITS_USERSPACEONUSE">
      <summary>
            The value of attribute ‘markerUnits’ is 'userSpaceOnUse'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGMarkerElement.SVG_MARKERUNITS_STROKEWIDTH">
      <summary>
            The value of attribute ‘markerUnits’ is 'strokeWidth'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGMarkerElement.SVG_MARKER_ORIENT_UNKNOWN">
      <summary>
            The marker orientation is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGMarkerElement.SVG_MARKER_ORIENT_AUTO">
      <summary>
            Attribute ‘orient’ has value 'auto'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGMarkerElement.SVG_MARKER_ORIENT_ANGLE">
      <summary>
            Attribute ‘orient’ has an angle value.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGMarkerElement.SetOrientToAuto">
      <summary>
            Sets the value of attribute ‘orient’ to 'auto'.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGMarkerElement.SetOrientToAngle(Aspose.Html.Dom.Svg.DataTypes.SVGAngle)">
      <summary>
            Sets the value of attribute ‘orient’ to the given angle.
            </summary>
      <param name="angle">The angle value to use for attribute ‘orient’.</param>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMarkerElement.ViewBox">
      <summary>
            Corresponds to attribute ‘viewBox’ on the given element.
            </summary>
      <value>
            The ‘viewBox’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMarkerElement.PreserveAspectRatio">
      <summary>
            Corresponds to attribute ‘preserveAspectRatio’ on the given element.
            </summary>
      <value>
            The ‘preserveAspectRatio’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMarkerElement.RefX">
      <summary>
            Corresponds to attribute ‘refX’ on the given ‘marker’ element.
            </summary>
      <value>
            The attribute ‘refX’ of the given ‘marker’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMarkerElement.RefY">
      <summary>
            Corresponds to attribute ‘refY’ on the given ‘marker’ element.
            </summary>
      <value>
            The attribute ‘refY’ of the given ‘marker’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMarkerElement.MarkerUnits">
      <summary>
            Corresponds to attribute ‘markerUnits’ on the given ‘marker’ element. One of the Marker Unit Types defined on this interface.
            </summary>
      <value>
            The attribute ‘markerUnits’ of the given ‘marker’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMarkerElement.MarkerWidth">
      <summary>
            Corresponds to attribute ‘markerWidth’ on the given ‘marker’ element.
            </summary>
      <value>
            The attribute ‘markerWidth’ of the given ‘marker’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMarkerElement.MarkerHeight">
      <summary>
            Corresponds to attribute ‘markerHeight’ on the given ‘marker’ element.
            </summary>
      <value>
            The attribute ‘markerHeight’ of the given ‘marker’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMarkerElement.OrientType">
      <summary>
            Corresponds to attribute ‘orient’ on the given ‘marker’ element. One of the Marker Orientation Types defined on this interface.
            </summary>
      <value>
            The attribute ‘orient’ of the given ‘marker’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMarkerElement.OrientAngle">
      <summary>
            Corresponds to attribute ‘orient’ on the given ‘marker’ element. If markerUnits is SVG_MARKER_ORIENT_ANGLE, the angle value for attribute ‘orient’; otherwise, it will be set to zero.
            </summary>
      <value>
            The attribute ‘orient’ of the given ‘marker’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGMaskElement">
      <summary>
            The SVGMaskElement interface corresponds to the ‘mask’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGTests" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGUnitTypes" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMaskElement.RequiredFeatures">
      <summary>
            Corresponds to attribute ‘requiredFeatures’ on the given element.
            </summary>
      <value>
            The required features.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMaskElement.RequiredExtensions">
      <summary>
            Corresponds to attribute ‘requiredExtensions’ on the given element.
            </summary>
      <value>
            The required extensions.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMaskElement.SystemLanguage">
      <summary>
            Corresponds to attribute ‘systemLanguage’ on the given element.
            </summary>
      <value>
            The system language.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMaskElement.MaskUnits">
      <summary>
            Corresponds to attribute ‘maskUnits’ on the given ‘mask’ element. Takes one of the constants defined in SVGUnitTypes.
            </summary>
      <value>
            The attribute ‘maskUnits’ of the given ‘mask’ element. 
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMaskElement.MaskContentUnits">
      <summary>
            Corresponds to attribute ‘maskContentUnits’ on the given ‘mask’ element. Takes one of the constants defined in SVGUnitTypes.
            </summary>
      <value>
            The attribute ‘maskContentUnits’ of the given ‘mask’ element. 
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMaskElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘mask’ element. Takes one of the constants defined in SVGUnitTypes.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘mask’ element. 
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMaskElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘mask’ element. Takes one of the constants defined in SVGUnitTypes.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘mask’ element. 
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMaskElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘mask’ element. Takes one of the constants defined in SVGUnitTypes.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘mask’ element. 
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMaskElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘mask’ element. Takes one of the constants defined in SVGUnitTypes.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘mask’ element. 
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGMetadataElement">
      <summary>
            The SVGMetadataElement interface corresponds to the ‘metadata’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGMPathElement">
      <summary>
            The SVGMPathElement interface corresponds to the ‘mpath’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGURIReference" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGMPathElement.Href">
      <summary>
            Corresponds to attribute ‘xlink:href’ on the given element.
            </summary>
      <value>
            The ‘xlink:href’ of the given element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGPathElement">
      <summary>
            The SVGPathElement interface corresponds to the ‘path’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGeometryElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.ISVGAnimatedPathData" />
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegClosePath">
      <summary>
            Returns a stand-alone, parentless SVGPathSegClosePath object.
            </summary>
      <returns>A stand-alone, parentless SVGPathSegClosePath object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegMovetoAbs(System.Single,System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegMovetoAbs object.
            </summary>
      <param name="x">The absolute X coordinate for the end point of this path segment.</param>
      <param name="y">The absolute Y coordinate for the end point of this path segment.</param>
      <returns>A stand-alone, parentless SVGPathSegMovetoAbs object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegMovetoRel(System.Single,System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegMovetoRel object.
            </summary>
      <param name="x">The relative X coordinate for the end point of this path segment.</param>
      <param name="y">The relative Y coordinate for the end point of this path segment.</param>
      <returns>A stand-alone, parentless SVGPathSegMovetoRel object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegLinetoAbs(System.Single,System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegLinetoAbs object.
            </summary>
      <param name="x">The absolute X coordinate for the end point of this path segment.</param>
      <param name="y">The absolute Y coordinate for the end point of this path segment.</param>
      <returns>A stand-alone, parentless SVGPathSegLinetoAbs object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegLinetoRel(System.Single,System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegLinetoRel object.
            </summary>
      <param name="x">The relative X coordinate for the end point of this path segment.</param>
      <param name="y">The relative Y coordinate for the end point of this path segment.</param>
      <returns>A stand-alone, parentless SVGPathSegLinetoRel object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegCurvetoCubicAbs(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegCurvetoCubicAbs object.
            </summary>
      <param name="x">The absolute X coordinate for the end point of this path segment.</param>
      <param name="y">The absolute Y coordinate for the end point of this path segment.</param>
      <param name="x1">The absolute X coordinate for the first control point.</param>
      <param name="y1">The absolute Y coordinate for the first control point.</param>
      <param name="x2">The absolute X coordinate for the second control point.</param>
      <param name="y2">The absolute Y coordinate for the second control point.</param>
      <returns>A stand-alone, parentless SVGPathSegCurvetoCubicAbs object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegCurvetoCubicRel(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegCurvetoCubicRel object.
            </summary>
      <param name="x">The relative X coordinate for the end point of this path segment.</param>
      <param name="y">The relative Y coordinate for the end point of this path segment.</param>
      <param name="x1">The relative X coordinate for the first control point.</param>
      <param name="y1">The relative Y coordinate for the first control point.</param>
      <param name="x2">The relative X coordinate for the second control point.</param>
      <param name="y2">The relative Y coordinate for the second control point.</param>
      <returns>A stand-alone, parentless SVGPathSegCurvetoCubicRel object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegCurvetoQuadraticAbs(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegCurvetoQuadraticAbs object.
            </summary>
      <param name="x">The absolute X coordinate for the end point of this path segment.</param>
      <param name="y">The absolute Y coordinate for the end point of this path segment.</param>
      <param name="x1">The absolute X coordinate for the first control point.</param>
      <param name="y1">The absolute Y coordinate for the first control point.</param>
      <returns>
            A stand-alone, parentless SVGPathSegCurvetoQuadraticAbs object.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegCurvetoQuadraticRel(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegCurvetoQuadraticRel object.
            </summary>
      <param name="x">The relative X coordinate for the end point of this path segment.</param>
      <param name="y">The relative Y coordinate for the end point of this path segment.</param>
      <param name="x1">The relative X coordinate for the first control point.</param>
      <param name="y1">The relative Y coordinate for the first control point.</param>
      <returns>
            A stand-alone, parentless SVGPathSegCurvetoQuadraticRel object.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegArcAbs(System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegArcAbs object.
            </summary>
      <param name="x">The absolute X coordinate for the end point of this path segment.</param>
      <param name="y">The absolute Y coordinate for the end point of this path segment.</param>
      <param name="r1">The x-axis radius for the ellipse (i.e., r1).</param>
      <param name="r2">The y-axis radius for the ellipse (i.e., r2).</param>
      <param name="angle">The rotation angle in degrees for the ellipse's x-axis relative to the x-axis of the user coordinate system.</param>
      <param name="largeArcFlag">The value of the large-arc-flag parameter.</param>
      <param name="sweepFlag">The value of the large-arc-flag parameter.</param>
      <returns>A stand-alone, parentless SVGPathSegArcAbs object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegArcRel(System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegArcRel object.
            </summary>
      <param name="x">The relative X coordinate for the end point of this path segment.</param>
      <param name="y">The relative Y coordinate for the end point of this path segment.</param>
      <param name="r1">The x-axis radius for the ellipse (i.e., r1).</param>
      <param name="r2">The y-axis radius for the ellipse (i.e., r2).</param>
      <param name="angle">The rotation angle in degrees for the ellipse's x-axis relative to the x-axis of the user coordinate system.</param>
      <param name="largeArcFlag">The value of the large-arc-flag parameter.</param>
      <param name="sweepFlag">The value of the large-arc-flag parameter.</param>
      <returns>A stand-alone, parentless SVGPathSegArcRel object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegLinetoHorizontalAbs(System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegLinetoHorizontalAbs object.
            </summary>
      <param name="x">The absolute X coordinate for the end point of this path segment.</param>
      <returns>A stand-alone, parentless SVGPathSegLinetoHorizontalAbs object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegLinetoHorizontalRel(System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegLinetoHorizontalRel object.
            </summary>
      <param name="x">The relative X coordinate for the end point of this path segment.</param>
      <returns>A stand-alone, parentless SVGPathSegLinetoHorizontalRel object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegLinetoVerticalAbs(System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegLinetoVerticalAbs object.
            </summary>
      <param name="y">The absolute Y coordinate for the end point of this path segment.</param>
      <returns>A stand-alone, parentless SVGPathSegLinetoVerticalAbs object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegLinetoVerticalRel(System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegLinetoVerticalRel object.
            </summary>
      <param name="y">The relative Y coordinate for the end point of this path segment.</param>
      <returns>A stand-alone, parentless SVGPathSegLinetoVerticalRel object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegCurvetoCubicSmoothAbs(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegCurvetoCubicSmoothAbs object.
            </summary>
      <param name="x">The absolute X coordinate for the end point of this path segment.</param>
      <param name="y">The absolute Y coordinate for the end point of this path segment.</param>
      <param name="x2">The absolute X coordinate for the second control point.</param>
      <param name="y2">The absolute Y coordinate for the second control point.</param>
      <returns>A stand-alone, parentless SVGPathSegCurvetoCubicSmoothAbs object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegCurvetoCubicSmoothRel(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegCurvetoCubicSmoothRel object.
            </summary>
      <param name="x">The relative X coordinate for the end point of this path segment.</param>
      <param name="y">The relative Y coordinate for the end point of this path segment.</param>
      <param name="x2">The relative X coordinate for the second control point.</param>
      <param name="y2">The relative Y coordinate for the second control point.</param>
      <returns>A stand-alone, parentless SVGPathSegCurvetoCubicSmoothRel object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegCurvetoQuadraticSmoothAbs(System.Single,System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegCurvetoQuadraticSmoothAbs object.
            </summary>
      <param name="x">The absolute X coordinate for the end point of this path segment.</param>
      <param name="y">The absolute Y coordinate for the end point of this path segment.</param>
      <returns>A stand-alone, parentless SVGPathSegCurvetoQuadraticSmoothAbs object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGPathElement.CreateSVGPathSegCurvetoQuadraticSmoothRel(System.Single,System.Single)">
      <summary>
            Returns a stand-alone, parentless SVGPathSegCurvetoQuadraticSmoothRel object.
            </summary>
      <param name="x">The relative X coordinate for the end point of this path segment.</param>
      <param name="y">The relative Y coordinate for the end point of this path segment.</param>
      <returns>A stand-alone, parentless SVGPathSegCurvetoQuadraticSmoothRel object.</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPathElement.PathSegList">
      <summary>
            Provides access to the base (i.e., static) contents of the ‘d’ attribute in a form which matches one-for-one with SVG's syntax. 
            Thus, if the ‘d’ attribute has an "absolute moveto (M)" and an "absolute arcto (A)" command, then pathSegList will have two entries: a SVG_PATHSEG_MOVETO_ABS and a SVG_PATHSEG_ARC_ABS.
            </summary>
      <value>
            The path segment list.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPathElement.AnimatedPathSegList">
      <summary>
            Provides access to the current animated contents of the ‘d’ attribute in a form which matches one-for-one with SVG's syntax. If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are read only. If the given attribute or property is not currently being animated, contains the same value as pathSegList.
            </summary>
      <value>
            The animated path segment list.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGPatternElement">
      <summary>
            The SVGPatternElement interface corresponds to the ‘pattern’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGURIReference" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGTests" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGFitToViewBox" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGUnitTypes" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPatternElement.Href">
      <summary>
            Corresponds to attribute ‘xlink:href’ on the given element.
            </summary>
      <value>
            The ‘xlink:href’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPatternElement.RequiredFeatures">
      <summary>
            Corresponds to attribute ‘requiredFeatures’ on the given element.
            </summary>
      <value>
            The required features.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPatternElement.RequiredExtensions">
      <summary>
            Corresponds to attribute ‘requiredExtensions’ on the given element.
            </summary>
      <value>
            The required extensions.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPatternElement.SystemLanguage">
      <summary>
            Corresponds to attribute ‘systemLanguage’ on the given element.
            </summary>
      <value>
            The system language.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPatternElement.ViewBox">
      <summary>
            Corresponds to attribute ‘viewBox’ on the given element.
            </summary>
      <value>
            The ‘viewBox’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPatternElement.PreserveAspectRatio">
      <summary>
            Corresponds to attribute ‘preserveAspectRatio’ on the given element.
            </summary>
      <value>
            The ‘preserveAspectRatio’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPatternElement.PatternUnits">
      <summary>
            Corresponds to attribute ‘patternUnits’ on the given ‘pattern’ element. Takes one of the constants defined in SVGUnitTypes.
            </summary>
      <value>
            The attribute ‘patternUnits’ of the given ‘pattern’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPatternElement.PatternContentUnits">
      <summary>
            Corresponds to attribute ‘patternContentUnits’ on the given ‘pattern’ element. Takes one of the constants defined in SVGUnitTypes.
            </summary>
      <value>
            The attribute ‘patternContentUnits’ of the given ‘pattern’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPatternElement.PatternTransform">
      <summary>
            Corresponds to attribute ‘patternTransform’ on the given ‘pattern’ element.
            </summary>
      <value>
            The attribute ‘patternTransform’ of the given ‘pattern’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPatternElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘pattern’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘pattern’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPatternElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘pattern’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘pattern’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPatternElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘pattern’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘pattern’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPatternElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘pattern’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘pattern’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGPolygonElement">
      <summary>
            The SVGPolygonElement interface corresponds to the ‘polygon’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGeometryElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGAnimatedPoints" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPolygonElement.Points">
      <summary>
            Provides access to the base (i.e., static) contents of the ‘points’ attribute.
            </summary>
      <value>
            The content of the ‘points’ attribute
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPolygonElement.AnimatedPoints">
      <summary>
            Provides access to the current animated contents of the ‘points’ attribute. If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as points.
            </summary>
      <value>
            The animated points.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGPolylineElement">
      <summary>
            The SVGPolylineElement interface corresponds to the ‘polyline’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGeometryElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGAnimatedPoints" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPolylineElement.Points">
      <summary>
            Provides access to the base (i.e., static) contents of the ‘points’ attribute.
            </summary>
      <value>
            The content of the ‘points’ attribute
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGPolylineElement.AnimatedPoints">
      <summary>
            Provides access to the current animated contents of the ‘points’ attribute. If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as points.
            </summary>
      <value>
            The animated points.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGRadialGradientElement">
      <summary>
            The SVGRadialGradientElement interface corresponds to the ‘radialGradient’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGradientElement" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGRadialGradientElement.Cx">
      <summary>
            Corresponds to attribute ‘cx’ on the given ‘radialGradient’ element.
            </summary>
      <value>
            The attribute ‘cx’ of the given ‘radialGradient’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGRadialGradientElement.Cy">
      <summary>
            Corresponds to attribute ‘cy’ on the given ‘radialGradient’ element.
            </summary>
      <value>
            The attribute ‘cy’ of the given ‘radialGradient’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGRadialGradientElement.R">
      <summary>
            Corresponds to attribute ‘r’ on the given ‘radialGradient’ element.
            </summary>
      <value>
            The attribute ‘r’ of the given ‘radialGradient’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGRadialGradientElement.Fx">
      <summary>
            Corresponds to attribute ‘fx’ on the given ‘radialGradient’ element.
            </summary>
      <value>
            The attribute ‘fx’ of the given ‘radialGradient’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGRadialGradientElement.Fy">
      <summary>
            Corresponds to attribute ‘fy’ on the given ‘radialGradient’ element.
            </summary>
      <value>
            The attribute ‘fy’ of the given ‘radialGradient’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGRadialGradientElement.Fr">
      <summary>
            Corresponds to attribute ‘fr’ on the given ‘radialGradient’ element.
            </summary>
      <value>
            The attribute ‘fr’ of the given ‘radialGradient’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGRectElement">
      <summary>
            The SVGRectElement interface corresponds to the ‘rect’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGeometryElement" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGRectElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘rect’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘rect’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGRectElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘rect’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘rect’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGRectElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘rect’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘rect’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGRectElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘rect’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘rect’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGRectElement.Rx">
      <summary>
            Corresponds to attribute ‘rx’ on the given ‘rect’ element.
            </summary>
      <value>
            The attribute ‘rx’ of the given ‘rect’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGRectElement.Ry">
      <summary>
            Corresponds to attribute ‘ry’ on the given ‘rect’ element.
            </summary>
      <value>
            The attribute ‘ry’ of the given ‘rect’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGRenderingIntent">
      <summary>
            The SVGRenderingIntent enumeration defines the enumerated list of possible values for ‘rendering-intent’ attributes or descriptors.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGRenderingIntent.RENDERING_INTENT_UNKNOWN">
      <summary>
            The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGRenderingIntent.RENDERING_INTENT_AUTO">
      <summary>
            Corresponds to a value of 'auto'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGRenderingIntent.RENDERING_INTENT_PERCEPTUAL">
      <summary>
            Corresponds to a value of 'perceptual'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGRenderingIntent.RENDERING_INTENT_RELATIVE_COLORIMETRIC">
      <summary>
            Corresponds to a value of 'relative-colorimetric'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGRenderingIntent.RENDERING_INTENT_SATURATION">
      <summary>
            Corresponds to a value of 'saturation'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGRenderingIntent.RENDERING_INTENT_ABSOLUTE_COLORIMETRIC">
      <summary>
            Corresponds to a value of 'absolute-colorimetric'.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGScriptElement">
      <summary>
            The SVGScriptElement interface corresponds to the ‘script’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGURIReference" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGScriptElement.Href">
      <summary>
            Corresponds to attribute ‘xlink:href’ on the given element.
            </summary>
      <value>
            The ‘xlink:href’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGScriptElement.Type">
      <summary>
            Corresponds to attribute ‘type’ on the given ‘script’ element.
            </summary>
      <value>
            The attribute ‘type’ of the given ‘script’ element.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGScriptElement.CrossOrigin">
      <summary>
            Corresponds to attribute ‘crossorigin’ on the given ‘script’ element.
            </summary>
      <value>
            The attribute ‘crossorigin’ of the given ‘script’ element.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGSetElement">
      <summary>
            The SVGSetElement interface corresponds to the ‘set’ element.
            Object-oriented access to the attributes of the ‘set’ element via the SVG DOM is not available.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGAnimationElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGStopElement">
      <summary>
            The SVGStopElement interface corresponds to the ‘stop’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGStopElement.Offset">
      <summary>
            Corresponds to attribute ‘offset’ on the given ‘radialGradient’ element.
            </summary>
      <value>
            The attribute ‘offset’ of the given ‘radialGradient’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGStyleElement">
      <summary>
            The SVGStyleElement interface corresponds to the ‘style’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGStyleElement.Type">
      <summary>
            Corresponds to attribute ‘type’ on the given element.
            </summary>
      <value>
            The attribute ‘type’ on the given element.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGStyleElement.Media">
      <summary>
            Corresponds to attribute ‘media’ on the given element.
            </summary>
      <value>
            The attribute ‘media’ on the given element.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGStyleElement.Title">
      <summary>
            Corresponds to attribute ‘title’ on the given element.
            </summary>
      <value>
            The attribute ‘title’ on the given element.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGStyleElement.Sheet">
      <summary>
            Gets the associated style sheet.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGSVGElement">
      <summary>
            A key interface definition is the SVGSVGElement interface, which is the interface that corresponds to the ‘svg’ element. This interface contains various miscellaneous commonly-used utility methods, such as matrix operations and the ability to control the time of redraw on visual rendering devices.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGraphicsElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGFitToViewBox" />
      <seealso cref="T:Aspose.Html.Dom.Events.IDocumentEvent" />
      <seealso cref="T:Aspose.Html.Dom.Css.IViewCSS" />
      <seealso cref="T:Aspose.Html.Dom.Css.IDocumentCSS" />
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGSVGElement.PauseAnimations">
      <summary>
            Suspends (i.e., pauses) all currently running animations that are defined within the SVG document fragment corresponding to this ‘svg’ element, causing the animation clock corresponding to this document fragment to stand still until it is unpaused.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGSVGElement.UnpauseAnimations">
      <summary>
            Unsuspends (i.e., unpauses) currently running animations that are defined within the SVG document fragment, causing the animation clock to continue from the time at which it was suspended.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGSVGElement.AnimationsPaused">
      <summary>
            Returns true if this SVG document fragment is in a paused state.
            </summary>
      <returns>Boolean indicating whether this SVG document fragment is in a paused state.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGSVGElement.GetCurrentTime">
      <summary>
            Returns the current time in seconds relative to the start time for the current SVG document fragment. If getCurrentTime is called before the document timeline has begun (for example, by script running in a ‘script’ element before the document's SVGLoad event is dispatched), then 0 is returned.
            </summary>
      <returns>The current time in seconds, or 0 if the document timeline has not yet begun.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGSVGElement.SetCurrentTime(System.Single)">
      <summary>
            Adjusts the clock for this SVG document fragment, establishing a new current time. If setCurrentTime is called before the document timeline has begun (for example, by script running in a ‘script’ element before the document's SVGLoad event is dispatched), then the value of seconds in the last invocation of the method gives the time that the document will seek to once the document timeline has begun.
            </summary>
      <param name="seconds">The new current time in seconds relative to the start time for the current SVG document fragment.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGSVGElement.CreateSVGNumber">
      <summary>
            Creates an SVGNumber object outside of any document trees. The object is initialized to a value of zero.
            </summary>
      <returns>An SVGNumber object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGSVGElement.CreateSVGLength">
      <summary>
            Creates an SVGLength object outside of any document trees. The object is initialized to the value of 0 user units.
            </summary>
      <returns>An SVGLength object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGSVGElement.CreateSVGAngle">
      <summary>
            Creates an SVGAngle object outside of any document trees. The object is initialized to the value 0 degrees (unitless).
            </summary>
      <returns>An SVGAngle object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGSVGElement.CreateSVGPoint">
      <summary>
            Creates an SVGPoint object outside of any document trees. The object is initialized to the point (0,0) in the user coordinate system.
            </summary>
      <returns>An SVGPoint object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGSVGElement.CreateSVGMatrix">
      <summary>
            Creates an SVGMatrix object outside of any document trees. The object is initialized to the identity matrix.
            </summary>
      <returns>An SVGMatrix object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGSVGElement.CreateSVGRect">
      <summary>
            Creates an SVGRect object outside of any document trees. The object is initialized such that all values are set to 0 user units.
            </summary>
      <returns>An SVGRect object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGSVGElement.CreateSVGTransform">
      <summary>
            Creates an SVGTransform object outside of any document trees. The object is initialized to an identity matrix transform (SVG_TRANSFORM_MATRIX).
            </summary>
      <returns>An SVGTransform object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGSVGElement.CreateSVGTransformFromMatrix(Aspose.Html.Dom.Svg.DataTypes.SVGMatrix)">
      <summary>
            Creates an SVGTransform object outside of any document trees. The object is initialized to the given matrix transform (i.e., SVG_TRANSFORM_MATRIX). The values from the parameter matrix are copied, the matrix parameter is not adopted as SVGTransform::matrix.
            </summary>
      <param name="matrix">The transform matrix.</param>
      <returns>An SVGTransform object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGSVGElement.GetElementById(System.String)">
      <summary>
            Searches this SVG document fragment (i.e., the search is restricted to a subset of the document tree) for an Element whose id is given by elementId. If an Element is found, that Element is returned. If no such element exists, returns null. Behavior is not defined if more than one element has this id.
            </summary>
      <param name="elementId">The unique id value for an element.</param>
      <returns>The matching element.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGSVGElement.CreateEvent(System.String)">
      <summary>
                Creates an <see cref="T:Aspose.Html.Dom.Events.Event" /> of a type supported by the implementation.
            </summary>
      <param name="eventType">
                The eventType parameter specifies the type of <see cref="T:Aspose.Html.Dom.Events.Event" /> interface to be created.
                <remarks>
                    If the <see cref="T:Aspose.Html.Dom.Events.Event" /> interface specified is supported by the implementation this method will return a new
                    <see cref="T:Aspose.Html.Dom.Events.Event" /> of the interface type requested.
                    If the <see cref="T:Aspose.Html.Dom.Events.Event" /> is to be dispatched via the <see cref="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> method the appropriate
                    <see cref="M:Aspose.Html.Dom.Events.Event.InitEvent(System.String,System.Boolean,System.Boolean)" /> method must be called after creation in order to initialize the <see cref="T:Aspose.Html.Dom.Events.Event" />'s values.
                    <para>
                        The <see cref="M:Aspose.Html.Dom.Events.IDocumentEvent.CreateEvent(System.String)" /> method is used in creating <see cref="T:Aspose.Html.Dom.Events.Event" />s when it is either inconvenient
                        or unnecessary for the user to create an <see cref="T:Aspose.Html.Dom.Events.Event" /> themselves.
                        In cases where the implementation provided <see cref="T:Aspose.Html.Dom.Events.Event" /> is insufficient, users may supply their own
                        <see cref="T:Aspose.Html.Dom.Events.Event" /> implementations for use with the <see cref="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> method.
                    </para></remarks></param>
      <returns>
                The newly created <see cref="T:Aspose.Html.Dom.Events.Event" /></returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
                NOT_SUPPORTED_ERR: Raised if the implementation does not support the type of <see cref="T:Aspose.Html.Dom.Events.Event" /> interface requested
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGSVGElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘svg’ element.
            </summary>
      <value>
            Corresponds to attribute ‘x’ on the given ‘svg’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGSVGElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘svg’ element.
            </summary>
      <value>
            Corresponds to attribute ‘y’ on the given ‘svg’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGSVGElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘svg’ element.
            </summary>
      <value>
            Corresponds to attribute ‘width’ on the given ‘svg’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGSVGElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘svg’ element.
            </summary>
      <value>
            Corresponds to attribute ‘height’ on the given ‘svg’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGSVGElement.CurrentScale">
      <summary>
            On an outermost svg element, this attribute indicates the current scale factor relative to the initial view to take into account user magnification and panning operations, as described under Magnification and panning. DOM attributes currentScale and currentTranslate are equivalent to the 2x3 matrix [a b c d e f] = [currentScale 0 0 currentScale currentTranslate.x currentTranslate.y]. If "magnification" is enabled (i.e., zoomAndPan="magnify"), then the effect is as if an extra transformation were placed at the outermost level on the SVG document fragment (i.e., outside the outermost svg element).
            When accessed on an ‘svg’ element that is not an outermost svg element, it is undefined what behavior this attribute has.
            </summary>
      <value>
            The current scale.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGSVGElement.CurrentTranslate">
      <summary>
            On an outermost svg element, the corresponding translation factor that takes into account user "magnification".
            When accessed on an ‘svg’ element that is not an outermost svg element, it is undefined what behavior this attribute has.
            </summary>
      <value>
            The current translate.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGSVGElement.ViewBox">
      <summary>
            Corresponds to attribute ‘viewBox’ on the given element.
            </summary>
      <value>
            The ‘viewBox’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGSVGElement.PreserveAspectRatio">
      <summary>
            Corresponds to attribute ‘preserveAspectRatio’ on the given element.
            </summary>
      <value>
            The ‘preserveAspectRatio’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGSVGElement.ZoomAndPan">
      <summary>
            Corresponds to attribute ‘zoomAndPan’ on the given element. The value must be one of the SVG_ZOOMANDPAN_* constants defined on this interface.
            </summary>
      <value>
            The zoom and pan.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGSwitchElement">
      <summary>
            The SVGSwitchElement interface corresponds to the ‘switch’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGraphicsElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGSymbolElement">
      <summary>
            The SVGSymbolElement interface corresponds to the ‘symbol’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGFitToViewBox" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGSymbolElement.ViewBox">
      <summary>
            Corresponds to attribute ‘viewBox’ on the given element.
            </summary>
      <value>
            The ‘viewBox’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGSymbolElement.PreserveAspectRatio">
      <summary>
            Corresponds to attribute ‘preserveAspectRatio’ on the given element.
            </summary>
      <value>
            The ‘preserveAspectRatio’ of the given element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGTextContentElement">
      <summary>
            The SVGTextContentElement is inherited by various text-related interfaces, such as SVGTextElement, SVGTSpanElement, SVGTRefElement, SVGAltGlyphElement and SVGTextPathElement.
            For the methods on this interface that refer to an index to a character or a number of characters, these references are to be interpreted as an index to a UTF-16 code unit or a number of UTF-16 code units, respectively. This is for consistency with DOM Level 2 Core, where methods on the CharacterData interface use UTF-16 code units as indexes and counts within the character data.Thus for example, if the text content of a ‘text’ element is a single non-BMP character, such as U+10000, then invoking getNumberOfChars on that element will return 2 since there are two UTF-16 code units(the surrogate pair) used to represent that one character.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGTextContentElement.LENGTHADJUST_UNKNOWN">
      <summary>
            The enumeration was set to a value that is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGTextContentElement.LENGTHADJUST_SPACING">
      <summary>
            Corresponds to value 'spacing'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGTextContentElement.LENGTHADJUST_SPACINGANDGLYPHS">
      <summary>
            Corresponds to value 'spacingAndGlyphs'.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGTextContentElement.GetNumberOfChars">
      <summary>
            Returns the total number of characters available for rendering within the current element, which includes referenced characters from ‘tref’ reference, regardless of whether they will be rendered. Effectively, this is equivalent to the length of the Node::textContent attribute from DOM Level 3 Core ([DOM3], section 1.4), if that attribute also expanded ‘tref’ elements.
            </summary>
      <returns>Total number of characters.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.SVGTextContentElement.GetComputedTextLength">
      <summary>
            The total sum of all of the advance values from rendering all of the characters within this element, including the advance value on the glyphs (horizontal or vertical), the effect of properties ‘kerning’, ‘letter-spacing’ and ‘word-spacing’ and adjustments due to attributes ‘dx’ and ‘dy’ on ‘tspan’ elements. For non-rendering environments, the user agent shall make reasonable assumptions about glyph metrics.
            </summary>
      <returns>The text advance distance.</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGTextContentElement.TextLength">
      <summary>
            Corresponds to attribute ‘textLength’ on the given element.
            </summary>
      <value>
            The attribute ‘textLength’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGTextContentElement.LengthAdjust">
      <summary>
            Corresponds to attribute ‘lengthAdjust’ on the given element. The value must be one of the length adjust constants defined on this interface.
            </summary>
      <value>
            The attribute ‘lengthAdjust’ of the given element
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGTextElement">
      <summary>
            The SVGTextElement interface corresponds to the ‘text’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGTextPositioningElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGTextPathElement">
      <summary>
            The SVGTextPathElement interface corresponds to the ‘textPath’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGTextContentElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGURIReference" />
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGTextPathElement.TEXTPATH_METHODTYPE_UNKNOWN">
      <summary>
            The enumeration was set to a value that is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGTextPathElement.TEXTPATH_METHODTYPE_ALIGN">
      <summary>
            Corresponds to value 'align'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGTextPathElement.TEXTPATH_METHODTYPE_STRETCH">
      <summary>
            Corresponds to value 'stretch'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGTextPathElement.TEXTPATH_SPACINGTYPE_UNKNOWN">
      <summary>
            The enumeration was set to a value that is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGTextPathElement.TEXTPATH_SPACINGTYPE_AUTO">
      <summary>
            Corresponds to value 'auto'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGTextPathElement.TEXTPATH_SPACINGTYPE_EXACT">
      <summary>
            Corresponds to value 'exact'.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGTextPathElement.Href">
      <summary>
            Corresponds to attribute ‘xlink:href’ on the given element.
            </summary>
      <value>
            The ‘xlink:href’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGTextPathElement.StartOffset">
      <summary>
            Corresponds to attribute ‘startOffset’ on the given ‘textPath’ element.
            </summary>
      <value>
            The attribute ‘startOffset’ of the given ‘textPath’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGTextPathElement.Method">
      <summary>
            Corresponds to attribute ‘method’ on the given ‘textPath’ element.
            </summary>
      <value>
            The attribute ‘method’ of the given ‘textPath’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGTextPathElement.Spacing">
      <summary>
            Corresponds to attribute ‘spacing’ on the given ‘textPath’ element.
            </summary>
      <value>
            The attribute ‘spacing’ of the given ‘textPath’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGTextPositioningElement">
      <summary>
            The SVGTextPositioningElement interface is inherited by text-related interfaces: SVGTextElement, SVGTSpanElement, SVGTRefElement and SVGAltGlyphElement.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGTextContentElement" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGTextPositioningElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given element.
            </summary>
      <value>
            The attribute ‘x’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGTextPositioningElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given element.
            </summary>
      <value>
            The attribute ‘y’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGTextPositioningElement.Dx">
      <summary>
            Corresponds to attribute ‘dx’ on the given element.
            </summary>
      <value>
            The attribute ‘dx’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGTextPositioningElement.Dy">
      <summary>
            Corresponds to attribute ‘dy’ on the given element.
            </summary>
      <value>
            The attribute ‘dy’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGTextPositioningElement.Rotate">
      <summary>
            Corresponds to attribute ‘rotate’ on the given element.
            </summary>
      <value>
            The attribute ‘rotate’ of the given element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGTitleElement">
      <summary>
            The SVGTitleElement interface corresponds to the ‘title’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGTSpanElement">
      <summary>
            The SVGTSpanElement interface corresponds to the ‘tspan’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGTextPositioningElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGUnitTypes">
      <summary>
            The SVGUnitTypes enumeration defines a commonly used set of constants and is a base interface used by SVGGradientElement, SVGPatternElement, SVGClipPathElement, SVGMaskElement and SVGFilterElement.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGUnitTypes.SVG_UNIT_TYPE_UNKNOWN">
      <summary>
            The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGUnitTypes.SVG_UNIT_TYPE_USERSPACEONUSE">
      <summary>
            Corresponds to value 'userSpaceOnUse'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGUnitTypes.SVG_UNIT_TYPE_OBJECTBOUNDINGBOX">
      <summary>
            Corresponds to value 'objectBoundingBox'.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGUseElement">
      <summary>
            The SVGUseElement interface corresponds to the ‘use’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGGraphicsElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGURIReference" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGUseElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘use’ element.
            </summary>
      <value>
            Corresponds to attribute ‘x’ on the given ‘use’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGUseElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘use’ element.
            </summary>
      <value>
            Corresponds to attribute ‘y’ on the given ‘use’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGUseElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘use’ element.
            </summary>
      <value>
            Corresponds to attribute ‘width’ on the given ‘use’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGUseElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘use’ element.
            </summary>
      <value>
            Corresponds to attribute ‘height’ on the given ‘use’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGUseElement.Href">
      <summary>
            Corresponds to attribute ‘xlink:href’ on the given element.
            </summary>
      <value>
            The ‘xlink:href’ of the given element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGViewElement">
      <summary>
            The SVGViewElement interface corresponds to the ‘view’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGFitToViewBox" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGZoomAndPan" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGViewElement.ViewBox">
      <summary>
            Corresponds to attribute ‘viewBox’ on the given element.
            </summary>
      <value>
            The ‘viewBox’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGViewElement.PreserveAspectRatio">
      <summary>
            Corresponds to attribute ‘preserveAspectRatio’ on the given element.
            </summary>
      <value>
            The ‘preserveAspectRatio’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGViewElement.ZoomAndPan">
      <summary>
            Corresponds to attribute ‘zoomAndPan’ on the given element. The value must be one of the SVG_ZOOMANDPAN_* constants defined on this interface.
            </summary>
      <value>
            The zoom and pan.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.SVGViewElement.ViewTarget">
      <summary>
            Corresponds to attribute ‘viewTarget’ on the given ‘view’ element. A list of DOMString values which contain the names listed in the ‘viewTarget’ attribute. Each of the DOMString values can be associated with the corresponding element using the getElementById() method call.
            </summary>
      <value>
            The attribute ‘viewTarget’ of the given ‘view’ element. 
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.SVGZoomAndPan">
      <summary>
            The SVGZoomAndPan enumeration defines attribute zoomAndPan and associated constants.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGZoomAndPan.SVG_ZOOMANDPAN_UNKNOWN">
      <summary>
            The enumeration was set to a value that is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGZoomAndPan.SVG_ZOOMANDPAN_DISABLE">
      <summary>
            Corresponds to value 'disable'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.SVGZoomAndPan.SVG_ZOOMANDPAN_MAGNIFY">
      <summary>
            Corresponds to value 'magnify'.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Saving.NamespaceDoc">
      <summary>
        <b>Aspose.Html.Dom.Svg.Saving</b> contains secondary role classes to
            specify saving process. For example, save options and
            format in which document is saved.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Saving.SVGSaveFormat">
      <summary>
            Specifies format in which document is saved.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Saving.SVGSaveFormat.SVG">
      <summary>
            Document will be saved as SVG.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Saving.SVGSaveOptions">
      <summary>
            Represents SVG save options.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Saving.SVGSaveOptions.VectorizeText">
      <summary>
            Gets or sets whether text elements are replaced with paths.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.ISVGAnimatedPathData">
      <summary>
            he SVGAnimatedPathData interface supports elements which have a ‘d’ attribute which holds SVG path data, and supports the ability to animate that attribute.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.ISVGAnimatedPathData.PathSegList">
      <summary>
            Provides access to the base (i.e., static) contents of the ‘d’ attribute in a form which matches one-for-one with SVG's syntax. 
            Thus, if the ‘d’ attribute has an "absolute moveto (M)" and an "absolute arcto (A)" command, then pathSegList will have two entries: a SVG_PATHSEG_MOVETO_ABS and a SVG_PATHSEG_ARC_ABS.
            </summary>
      <value>
            The path segment list.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.ISVGAnimatedPathData.AnimatedPathSegList">
      <summary>
            Provides access to the current animated contents of the ‘d’ attribute in a form which matches one-for-one with SVG's syntax. If the given attribute or property is being animated, contains the current animated value of the attribute or property, and both the object itself and its contents are read only. If the given attribute or property is not currently being animated, contains the same value as pathSegList.
            </summary>
      <value>
            The animated path segment list.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Dom.Svg.Paths</b> namespace describes classes for
            representation of outline of a shape which can be filled or stroked.
            A path can also be used as a clipping path, to describe animation,
            or position text.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg">
      <summary>
            The SVGPathSeg interface is a base interface that corresponds to a single command within a path data specification.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_UNKNOWN">
      <summary>
            The unit type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_CLOSEPATH">
      <summary>
            Corresponds to a "closepath" (z) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_MOVETO_ABS">
      <summary>
            Corresponds to a "absolute moveto" (M) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_MOVETO_REL">
      <summary>
            Corresponds to a "relative moveto" (m) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_LINETO_ABS">
      <summary>
            Corresponds to a "absolute lineto" (L) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_LINETO_REL">
      <summary>
            Corresponds to a "relative lineto" (l) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS">
      <summary>
            Corresponds to a "absolute cubic Bézier curveto" (C) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL">
      <summary>
            Corresponds to a "relative cubic Bézier curveto" (c) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS">
      <summary>
            Corresponds to a "absolute quadratic Bézier curveto" (Q) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL">
      <summary>
            Corresponds to a "relative quadratic Bézier curveto" (q) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_ARC_ABS">
      <summary>
            Corresponds to a "absolute arcto" (A) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_ARC_REL">
      <summary>
            Corresponds to a "relative arcto" (a) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS">
      <summary>
            Corresponds to a "absolute horizontal lineto" (H) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL">
      <summary>
            Corresponds to a "relative horizontal lineto" (h) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS">
      <summary>
            Corresponds to a "absolute vertical lineto" (V) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL">
      <summary>
            Corresponds to a "relative vertical lineto" (v) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS">
      <summary>
            Corresponds to a "absolute smooth cubic curveto" (S) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL">
      <summary>
            Corresponds to a "relative smooth cubic curveto" (s) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS">
      <summary>
            Corresponds to a "absolute smooth quadratic curveto" (T) path data command.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL">
      <summary>
            Corresponds to a "relative smooth quadratic curveto" (t) path data command.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PathSegType">
      <summary>
            The type of the path segment as specified by one of the constants defined on this interface.
            </summary>
      <value>
            The type of the path segment.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSeg.PathSegTypeAsLetter">
      <summary>
            The type of the path segment, specified by the corresponding one character command name.
            </summary>
      <value>
            The type of the path segment.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcAbs">
      <summary>
            The SVGPathSegArcAbs interface corresponds to an "absolute arcto" (A) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcAbs.X">
      <summary>
            The absolute X coordinate for the end point of this path segment.
            </summary>
      <value>
            The absolute X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcAbs.Y">
      <summary>
            The absolute Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The absolute Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcAbs.R1">
      <summary>
            The x-axis radius for the ellipse (i.e., r1).
            </summary>
      <value>
            The x-axis radius
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcAbs.R2">
      <summary>
            The y-axis radius for the ellipse (i.e., r2).
            </summary>
      <value>
            The y-axis radius
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcAbs.Angle">
      <summary>
            The rotation angle in degrees for the ellipse's x-axis relative to the x-axis of the user coordinate system.
            </summary>
      <value>
            The rotation angle
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcAbs.LargeArcFlag">
      <summary>
            The value of the large-arc-flag parameter.
            </summary>
      <value>
            The large-arc-flag parameter
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcAbs.SweepFlag">
      <summary>
            The value of the sweep-flag parameter.
            </summary>
      <value>
            The sweep-flag parameter.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcRel">
      <summary>
            The SVGPathSegArcRel interface corresponds to a "relative arcto" (a) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcRel.X">
      <summary>
            The relative X coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcRel.Y">
      <summary>
            The relative Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcRel.R1">
      <summary>
            The x-axis radius for the ellipse (i.e., r1).
            </summary>
      <value>
            The x-axis radius
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcRel.R2">
      <summary>
            The y-axis radius for the ellipse (i.e., r2).
            </summary>
      <value>
            The y-axis radius
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcRel.Angle">
      <summary>
            The rotation angle in degrees for the ellipse's x-axis relative to the x-axis of the user coordinate system.
            </summary>
      <value>
            The rotation angle
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcRel.LargeArcFlag">
      <summary>
            The value of the large-arc-flag parameter.
            </summary>
      <value>
            The large-arc-flag parameter
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegArcRel.SweepFlag">
      <summary>
            The value of the sweep-flag parameter.
            </summary>
      <value>
            The sweep-flag parameter.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegClosePath">
      <summary>
            he SVGPathSegClosePath interface corresponds to a "closepath" (z) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicAbs">
      <summary>
            The SVGPathSegCurvetoCubicAbs interface corresponds to an "absolute cubic Bézier curveto" (C) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicAbs.X">
      <summary>
            The absolute X coordinate for the end point of this path segment.
            </summary>
      <value>
            The absolute X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicAbs.Y">
      <summary>
            The absolute Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The absolute Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicAbs.X1">
      <summary>
            The absolute X coordinate for the first control point.
            </summary>
      <value>
            The absolute X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicAbs.Y1">
      <summary>
            The absolute Y coordinate for the first control point.
            </summary>
      <value>
            The absolute Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicAbs.X2">
      <summary>
            The absolute X coordinate for the second control point.
            </summary>
      <value>
            The absolute X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicAbs.Y2">
      <summary>
            The absolute Y coordinate for the second control point.
            </summary>
      <value>
            The absolute Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicRel">
      <summary>
            The SVGPathSegCurvetoCubicRel interface corresponds to a "relative cubic Bézier curveto" (c) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicRel.X">
      <summary>
            The relative X coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicRel.Y">
      <summary>
            The relative Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicRel.X1">
      <summary>
            The relative X coordinate for the first control point.
            </summary>
      <value>
            The relative X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicRel.Y1">
      <summary>
            The relative Y coordinate for the first control point.
            </summary>
      <value>
            The relative Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicRel.X2">
      <summary>
            The relative X coordinate for the second control point.
            </summary>
      <value>
            The relative X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicRel.Y2">
      <summary>
            The relative Y coordinate for the second control point.
            </summary>
      <value>
            The relative Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicSmoothAbs">
      <summary>
            The SVGPathSegCurvetoCubicSmoothAbs interface corresponds to an "absolute smooth cubic curveto" (S) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicSmoothAbs.X">
      <summary>
            The absolute X coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative Y coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicSmoothAbs.Y">
      <summary>
            The absolute Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative Y coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicSmoothAbs.X2">
      <summary>
            The absolute X coordinate for the second control point.
            </summary>
      <value>
            The absolute X coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicSmoothAbs.Y2">
      <summary>
            The absolute Y coordinate for the second control point.
            </summary>
      <value>
            The absolute Y coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicSmoothRel">
      <summary>
            The SVGPathSegCurvetoCubicSmoothRel interface corresponds to a "relative smooth cubic curveto" (s) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicSmoothRel.X">
      <summary>
            The relative X coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative Y coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicSmoothRel.Y">
      <summary>
            The relative Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative Y coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicSmoothRel.X2">
      <summary>
            The relative X coordinate for the second control point.
            </summary>
      <value>
            The relative X coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoCubicSmoothRel.Y2">
      <summary>
            The relative Y coordinate for the second control point.
            </summary>
      <value>
            The relative Y coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticAbs">
      <summary>
            The SVGPathSegCurvetoQuadraticAbs interface corresponds to an "absolute quadratic Bézier curveto" (Q) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticAbs.X">
      <summary>
            The absolute X coordinate for the end point of this path segment.
            </summary>
      <value>
            The absolute X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticAbs.Y">
      <summary>
            The absolute Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The absolute Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticAbs.X1">
      <summary>
            The absolute X coordinate for the first control point.
            </summary>
      <value>
            The absolute X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticAbs.Y1">
      <summary>
            The absolute Y coordinate for the first control point.
            </summary>
      <value>
            The absolute Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticRel">
      <summary>
            The SVGPathSegCurvetoQuadraticRel interface corresponds to a "relative quadratic Bézier curveto" (q) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticRel.X">
      <summary>
            The relative X coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticRel.Y">
      <summary>
            The relative Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticRel.X1">
      <summary>
            The relative X coordinate for the first control point.
            </summary>
      <value>
            The relative X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticRel.Y1">
      <summary>
            The relative Y coordinate for the first control point.
            </summary>
      <value>
            The relative Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticSmoothAbs">
      <summary>
            The SVGPathSegCurvetoQuadraticSmoothAbs interface corresponds to an "absolute smooth cubic curveto" (T) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticSmoothAbs.X">
      <summary>
            The absolute X coordinate for the end point of this path segment.
            </summary>
      <value>
            The absolute Y coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticSmoothAbs.Y">
      <summary>
            The absolute Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The absolute Y coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticSmoothRel">
      <summary>
            The SVGPathSegCurvetoQuadraticSmoothRel interface corresponds to a "relative smooth cubic curveto" (t) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticSmoothRel.X">
      <summary>
            The relative X coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative Y coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegCurvetoQuadraticSmoothRel.Y">
      <summary>
            The relative Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative Y coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegLinetoAbs">
      <summary>
            The SVGPathSegLinetoAbs interface corresponds to an "absolute lineto" (L) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegLinetoAbs.X">
      <summary>
            The absolute X coordinate for the end point of this path segment.
            </summary>
      <value>
            The absolute X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegLinetoAbs.Y">
      <summary>
            The absolute Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The absolute Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegLinetoHorizontalAbs">
      <summary>
            The SVGPathSegLinetoHorizontalAbs interface corresponds to an "absolute horizontal lineto" (H) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegLinetoHorizontalAbs.X">
      <summary>
            The absolute X coordinate for the end point of this path segment.
            </summary>
      <value>
            The absolute X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegLinetoHorizontalRel">
      <summary>
            The SVGPathSegLinetoHorizontalRel interface corresponds to a "relative horizontal lineto" (h) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegLinetoHorizontalRel.X">
      <summary>
            The relative X coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegLinetoRel">
      <summary>
            The SVGPathSegLinetoRel interface corresponds to a "relative lineto" (l) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegLinetoRel.X">
      <summary>
            The relative X coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegLinetoRel.Y">
      <summary>
            The relative Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegLinetoVerticalAbs">
      <summary>
            The SVGPathSegLinetoVerticalAbs interface corresponds to an "absolute vertical lineto" (V) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegLinetoVerticalAbs.Y">
      <summary>
            The absolute Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The absolute Y coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegLinetoVerticalRel">
      <summary>
            The SVGPathSegLinetoVerticalRel interface corresponds to a "relative vertical lineto" (v) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegLinetoVerticalRel.Y">
      <summary>
            The relative Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative Y coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegList">
      <summary>
            This interface defines a list of SVGPathSeg objects.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.Paths.SVGPathSegList.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegList" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.Paths.SVGPathSegList.#ctor(System.Collections.Generic.IEnumerable{Aspose.Html.Dom.Svg.Paths.SVGPathSeg})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegList" /> class.
            </summary>
      <param name="enumerable">The enumerable.</param>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegMovetoAbs">
      <summary>
            The SVGPathSegMovetoAbs interface corresponds to an "absolute moveto" (M) path data command.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegMovetoAbs.X">
      <summary>
            The absolute X coordinate for the end point of this path segment.
            </summary>
      <value>
            The absolute X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegMovetoAbs.Y">
      <summary>
            The absolute Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The absolute Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Paths.SVGPathSegMovetoRel">
      <summary>
            The SVGPathSegMovetoRel interface corresponds to a "relative moveto" (m) path data command.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Paths.SVGPathSeg" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegMovetoRel.X">
      <summary>
            The relative X coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative X coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Paths.SVGPathSegMovetoRel.Y">
      <summary>
            The relative Y coordinate for the end point of this path segment.
            </summary>
      <value>
            The relative Y coordinate
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes">
      <summary>
            This interface defines the set of DOM attributes that are common across the filter primitive interfaces.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.NamespaceDoc">
      <summary>
            The <b>Aspose.Html.Dom.Svg.Filters</b> namespace contains classes and
            interfaces related to filter effects in SVG specification.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement">
      <summary>
            The SVGFEBlendElement interface corresponds to the ‘feBlend’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_UNKNOWN">
      <summary>
            The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_NORMAL">
      <summary>
            Corresponds to value 'normal'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_MULTIPLY">
      <summary>
            Corresponds to value 'multiply'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_SCREEN">
      <summary>
            Corresponds to value 'screen'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_DARKEN">
      <summary>
            Corresponds to value 'darken'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_LIGHTEN">
      <summary>
            Corresponds to value 'lighten'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_OVERLAY">
      <summary>
            Corresponds to value 'overlay'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_COLOR_DODGE">
      <summary>
            Corresponds to value 'color_dodge'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_COLOR_BURN">
      <summary>
            Corresponds to value 'color_burn'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_HARD_LIGHT">
      <summary>
            Corresponds to value 'hard_light'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_SOFT_LIGHT">
      <summary>
            Corresponds to value 'soft_light'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_DIFFERENCE">
      <summary>
            Corresponds to value 'difference'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_EXCLUSION">
      <summary>
            Corresponds to value 'exclusion'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_HUE">
      <summary>
            Corresponds to value 'hue'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_SATURATION">
      <summary>
            Corresponds to value 'saturation'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_COLOR">
      <summary>
            Corresponds to value 'color'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.SVG_FEBLEND_MODE_LUMINOSITY">
      <summary>
            Corresponds to value 'luminosity'.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.In1">
      <summary>
            Corresponds to attribute ‘in’ on the given ‘feBlend’ element.
            </summary>
      <value>
            The attribute ‘in’ of the given ‘feBlend’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.In2">
      <summary>
            Corresponds to attribute ‘in2’ on the given ‘feBlend’ element.
            </summary>
      <value>
            The attribute ‘in2’ of the given ‘feBlend’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEBlendElement.Mode">
      <summary>
            Corresponds to attribute ‘mode’ on the given ‘feBlend’ element. Takes one of the SVG_FEBLEND_MODE_* constants defined on this interface.
            </summary>
      <value>
            The attribute ‘mode’ of the given ‘feBlend’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEColorMatrixElement">
      <summary>
            The SVGFEColorMatrixElement interface corresponds to the ‘feColorMatrix’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_UNKNOWN">
      <summary>
            The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_MATRIX">
      <summary>
            Corresponds to value 'matrix'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_SATURATE">
      <summary>
            Corresponds to value 'saturate'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_HUEROTATE">
      <summary>
            Corresponds to value 'hueRotate'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEColorMatrixElement.SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA">
      <summary>
            Corresponds to value 'luminanceToAlpha'.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEColorMatrixElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEColorMatrixElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEColorMatrixElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEColorMatrixElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEColorMatrixElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEColorMatrixElement.In1">
      <summary>
            Corresponds to attribute ‘in’ on the given ‘feColorMatrix’ element.
            </summary>
      <value>
            The attribute ‘in’ of the given ‘feColorMatrix’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEColorMatrixElement.Type">
      <summary>
            Corresponds to attribute ‘type’ on the given ‘feColorMatrix’ element. Takes one of the SVG_FECOLORMATRIX_TYPE_* constants defined on this interface.
            </summary>
      <value>
            The attribute ‘type’ of the given ‘feColorMatrix’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEColorMatrixElement.Values">
      <summary>
            Corresponds to attribute ‘values’ on the given ‘feColorMatrix’ element.
            </summary>
      <value>
            The attribute ‘values’ of the given ‘feColorMatrix’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEComponentTransferElement">
      <summary>
            The SVGFEComponentTransferElement interface corresponds to the ‘feComponentTransfer’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEComponentTransferElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEComponentTransferElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEComponentTransferElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEComponentTransferElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEComponentTransferElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEComponentTransferElement.In1">
      <summary>
            Corresponds to attribute ‘in’ on the given ‘feComponentTransfer’ element.
            </summary>
      <value>
            The attribute ‘in’ of the given ‘feComponentTransfer’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement">
      <summary>
            The SVGFECompositeElement interface corresponds to the ‘feComposite’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_UNKNOWN">
      <summary>
            The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_OVER">
      <summary>
            Corresponds to value 'over'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_IN">
      <summary>
            Corresponds to value 'in'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_OUT">
      <summary>
            Corresponds to value 'out'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_ATOP">
      <summary>
            Corresponds to value 'atop'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_XOR">
      <summary>
            Corresponds to value 'xor'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.SVG_FECOMPOSITE_OPERATOR_ARITHMETIC">
      <summary>
            Corresponds to value 'arithmetic'.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.In1">
      <summary>
            Corresponds to attribute ‘in’ on the given ‘feComposite’ element.
            </summary>
      <value>
            The attribute ‘in’ on the given ‘feComposite’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.In2">
      <summary>
            Corresponds to attribute ‘in2’ on the given ‘feComposite’ element.
            </summary>
      <value>
            The attribute ‘in2’ on the given ‘feComposite’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.Operator">
      <summary>
            Corresponds to attribute ‘operator’ on the given ‘feComposite’ element. Takes one of the SVG_FECOMPOSITE_OPERATOR_* constants defined on this interface.
            </summary>
      <value>
            The attribute ‘operator’ on the given ‘feComposite’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.K1">
      <summary>
            Corresponds to attribute ‘k1’ on the given ‘feComposite’ element.
            </summary>
      <value>
            The attribute ‘k1’ on the given ‘feComposite’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.K2">
      <summary>
            Corresponds to attribute ‘k2’ on the given ‘feComposite’ element.
            </summary>
      <value>
            The attribute ‘k2’ on the given ‘feComposite’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.K3">
      <summary>
            Corresponds to attribute ‘k3’ on the given ‘feComposite’ element.
            </summary>
      <value>
            The attribute ‘k3’ on the given ‘feComposite’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFECompositeElement.K4">
      <summary>
            Corresponds to attribute ‘k4’ on the given ‘feComposite’ element.
            </summary>
      <value>
            The attribute ‘k4’ on the given ‘feComposite’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement">
      <summary>
            The SVGFEConvolveMatrixElement interface corresponds to the ‘feConvolveMatrix’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.SVG_EDGEMODE_UNKNOWN">
      <summary>
            The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.SVG_EDGEMODE_DUPLICATE">
      <summary>
            Corresponds to value 'duplicate'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.SVG_EDGEMODE_WRAP">
      <summary>
            Corresponds to value 'wrap'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.SVG_EDGEMODE_NONE">
      <summary>
            Corresponds to value 'none'.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.In1">
      <summary>
            Corresponds to attribute ‘in’ on the given ‘feConvolveMatrix’ element.
            </summary>
      <value>
            The attribute ‘in’ of the given ‘feConvolveMatrix’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.OrderX">
      <summary>
            Corresponds to attribute ‘order’ on the given ‘feConvolveMatrix’ element.
            </summary>
      <value>
            The attribute ‘order’ of the given ‘feConvolveMatrix’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.OrderY">
      <summary>
            Corresponds to attribute ‘order’ on the given ‘feConvolveMatrix’ element.
            </summary>
      <value>
            The attribute ‘order’ of the given ‘feConvolveMatrix’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.KernelMatrix">
      <summary>
            Corresponds to attribute ‘kernelMatrix’ on the given ‘feConvolveMatrix’ element.
            </summary>
      <value>
            The attribute ‘kernelMatrix’ of the given ‘feConvolveMatrix’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.Divisor">
      <summary>
            Corresponds to attribute ‘divisor’ on the given ‘feConvolveMatrix’ element.
            </summary>
      <value>
            The attribute ‘divisor’ of the given ‘feConvolveMatrix’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.Bias">
      <summary>
            Corresponds to attribute ‘bias’ on the given ‘feConvolveMatrix’ element.
            </summary>
      <value>
            The attribute ‘bias’ of the given ‘feConvolveMatrix’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.TargetX">
      <summary>
            Corresponds to attribute ‘targetX’ on the given ‘feConvolveMatrix’ element.
            </summary>
      <value>
            The attribute ‘targetX’ of the given ‘feConvolveMatrix’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.TargetY">
      <summary>
            Corresponds to attribute ‘targetY’ on the given ‘feConvolveMatrix’ element.
            </summary>
      <value>
            The attribute ‘targetY’ of the given ‘feConvolveMatrix’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.EdgeMode">
      <summary>
            Corresponds to attribute ‘edgeMode’ on the given ‘feConvolveMatrix’ element.
            </summary>
      <value>
            The attribute ‘edgeMode’ of the given ‘feConvolveMatrix’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.KernelUnitLengthX">
      <summary>
            Corresponds to attribute ‘kernelUnitLength’ on the given ‘feConvolveMatrix’ element.
            </summary>
      <value>
            The attribute ‘kernelUnitLength’ of the given ‘feConvolveMatrix’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.KernelUnitLengthY">
      <summary>
            Corresponds to attribute ‘kernelUnitLength’ on the given ‘feConvolveMatrix’ element.
            </summary>
      <value>
            The attribute ‘kernelUnitLength’ of the given ‘feConvolveMatrix’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEConvolveMatrixElement.PreserveAlpha">
      <summary>
            Corresponds to attribute ‘preserveAlpha’ on the given ‘feConvolveMatrix’ element.
            </summary>
      <value>
            The attribute ‘preserveAlpha’ of the given ‘feConvolveMatrix’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEDiffuseLightingElement">
      <summary>
            The SVGFEDiffuseLightingElement interface corresponds to the ‘feDiffuseLighting’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDiffuseLightingElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDiffuseLightingElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDiffuseLightingElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDiffuseLightingElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDiffuseLightingElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDiffuseLightingElement.In1">
      <summary>
            Corresponds to attribute ‘in’ on the given ‘feDiffuseLighting’ element.
            </summary>
      <value>
            The attribute ‘in’ of the given ‘feDiffuseLighting’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDiffuseLightingElement.SurfaceScale">
      <summary>
            Corresponds to attribute ‘surfaceScale’ on the given ‘feDiffuseLighting’ element.
            </summary>
      <value>
            The attribute ‘surfaceScale’ of the given ‘feDiffuseLighting’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDiffuseLightingElement.DiffuseConstant">
      <summary>
            Corresponds to attribute ‘diffuseConstant’ on the given ‘feDiffuseLighting’ element.
            </summary>
      <value>
            The attribute ‘diffuseConstant’ of the given ‘feDiffuseLighting’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDiffuseLightingElement.KernelUnitLengthX">
      <summary>
            Corresponds to attribute ‘kernelUnitLength’ on the given ‘feDiffuseLighting’ element.
            </summary>
      <value>
            The attribute ‘kernelUnitLength’ of the given ‘feDiffuseLighting’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDiffuseLightingElement.KernelUnitLengthY">
      <summary>
            Corresponds to attribute ‘kernelUnitLength’ on the given ‘feDiffuseLighting’ element.
            </summary>
      <value>
            The attribute ‘kernelUnitLength’ of the given ‘feDiffuseLighting’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement">
      <summary>
            The SVGFEDisplacementMapElement interface corresponds to the ‘feDisplacementMap’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement.SVG_CHANNEL_UNKNOWN">
      <summary>
            The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement.SVG_CHANNEL_R">
      <summary>
            Corresponds to value 'R'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement.SVG_CHANNEL_G">
      <summary>
            Corresponds to value 'G'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement.SVG_CHANNEL_B">
      <summary>
            Corresponds to value 'B'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement.SVG_CHANNEL_A">
      <summary>
            Corresponds to value 'A'.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement.In1">
      <summary>
            Corresponds to attribute ‘in’ on the given ‘feDisplacementMap’ element.
            </summary>
      <value>
            The attribute ‘in’ of the given ‘feDisplacementMap’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement.In2">
      <summary>
            Corresponds to attribute ‘in2’ on the given ‘feDisplacementMap’ element.
            </summary>
      <value>
            The attribute ‘in2’ of the given ‘feDisplacementMap’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement.Scale">
      <summary>
            Corresponds to attribute ‘scale’ on the given ‘feDisplacementMap’ element.
            </summary>
      <value>
            The attribute ‘scale’ of the given ‘feDisplacementMap’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement.XChannelSelector">
      <summary>
            Corresponds to attribute ‘xChannelSelector’ on the given ‘feDisplacementMap’ element. Takes one of the SVG_CHANNEL_* constants defined on this interface.
            </summary>
      <value>
            The attribute ‘xChannelSelector’ of the given ‘feDisplacementMap’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDisplacementMapElement.YChannelSelector">
      <summary>
            Corresponds to attribute ‘yChannelSelector’ on the given ‘feDisplacementMap’ element. Takes one of the SVG_CHANNEL_* constants defined on this interface.
            </summary>
      <value>
            The attribute ‘yChannelSelector’ of the given ‘feDisplacementMap’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEDistantLightElement">
      <summary>
            The SVGFEDistantLightElement interface corresponds to the ‘feDistantLight’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDistantLightElement.Azimuth">
      <summary>
            Corresponds to attribute ‘azimuth’ on the given ‘feDistantLight’ element.
            </summary>
      <value>
            The attribute ‘azimuth’ of the given ‘feDistantLight’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDistantLightElement.Elevation">
      <summary>
            Corresponds to attribute ‘elevation’ on the given ‘feDistantLight’ element.
            </summary>
      <value>
            The attribute ‘elevation’ of the given ‘feDistantLight’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEDropShadowElement">
      <summary>
            The SVGFEDropShadowElement interface corresponds to the ‘feDropShadow’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="M:Aspose.Html.Dom.Svg.Filters.SVGFEDropShadowElement.SetStdDeviation(System.Single,System.Single)">
      <summary>
            Sets the values for attribute ‘stdDeviation’.
            </summary>
      <param name="stdDeviationX">The X component of attribute ‘stdDeviation’.</param>
      <param name="stdDeviationY">The Y component of attribute ‘stdDeviation’.</param>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDropShadowElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘feDropShadow’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘feDropShadow’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDropShadowElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘feDropShadow’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘feDropShadow’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDropShadowElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘feDropShadow’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘feDropShadow’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDropShadowElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘feDropShadow’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘feDropShadow’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDropShadowElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘feDropShadow’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘feDropShadow’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDropShadowElement.In1">
      <summary>
            Corresponds to attribute ‘in’ on the given ‘feDropShadow’ element.
            </summary>
      <value>
            The attribute ‘in’ of the given ‘feDropShadow’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDropShadowElement.Dx">
      <summary>
            Corresponds to attribute ‘dx’ on the given ‘feDropShadow’ element.
            </summary>
      <value>
            The attribute ‘dx’ of the given ‘feDropShadow’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDropShadowElement.Dy">
      <summary>
            Corresponds to attribute ‘dy’ on the given ‘feDropShadow’ element.
            </summary>
      <value>
            The attribute ‘dy’ of the given ‘feDropShadow’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDropShadowElement.StdDeviationX">
      <summary>
            Corresponds to attribute ‘stdDeviation’ on the given ‘feDropShadow’ element. Contains the X component of attribute ‘stdDeviation’.
            </summary>
      <value>
            The attribute ‘stdDeviationX’ of the given ‘feDropShadow’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEDropShadowElement.StdDeviationY">
      <summary>
            Corresponds to attribute ‘stdDeviation’ on the given ‘feDropShadow’ element. Contains the Y component (possibly computed automatically) of attribute ‘stdDeviation’.
            </summary>
      <value>
            The attribute ‘stdDeviationY’ of the given ‘feDropShadow’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEFloodElement">
      <summary>
            The SVGFEFloodElement interface corresponds to the ‘feFlood’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEFloodElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEFloodElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEFloodElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEFloodElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEFloodElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEFuncAElement">
      <summary>
            The SVGFEFuncAElement interface corresponds to the ‘feFuncA’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEFuncBElement">
      <summary>
            The SVGFEFuncBElement interface corresponds to the ‘feFuncB’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEFuncGElement">
      <summary>
            The SVGFEFuncRElement interface corresponds to the ‘feFuncG’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEFuncRElement">
      <summary>
            The SVGFEFuncRElement interface corresponds to the ‘feFuncR’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGComponentTransferFunctionElement" />
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEGaussianBlurElement">
      <summary>
            The SVGFEGaussianBlurElement interface corresponds to the �feGaussianBlur� element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="M:Aspose.Html.Dom.Svg.Filters.SVGFEGaussianBlurElement.SetStdDeviation(System.Single,System.Single)">
      <summary>
            Sets the values for attribute �stdDeviation�.
            </summary>
      <param name="stdDeviationX">The X component of attribute �stdDeviation�.</param>
      <param name="stdDeviationY">The Y component of attribute �stdDeviation�.</param>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEGaussianBlurElement.X">
      <summary>
            Corresponds to attribute �x� on the given �filter� element.
            </summary>
      <value>
            The attribute �x� of the given �filter� element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEGaussianBlurElement.Y">
      <summary>
            Corresponds to attribute �y� on the given �filter� element.
            </summary>
      <value>
            The attribute �y� of the given �filter� element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEGaussianBlurElement.Width">
      <summary>
            Corresponds to attribute �width� on the given �filter� element.
            </summary>
      <value>
            The attribute �width� of the given �filter� element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEGaussianBlurElement.Height">
      <summary>
            Corresponds to attribute �height� on the given �filter� element.
            </summary>
      <value>
            The attribute �height� of the given �filter� element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEGaussianBlurElement.Result">
      <summary>
            Corresponds to attribute �result� on the given �filter� element.
            </summary>
      <value>
            The attribute �result� of the given �filter� element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEGaussianBlurElement.In1">
      <summary>
            Corresponds to attribute �in� on the given �feGaussianBlur� element.
            </summary>
      <value>
            The attribute �in� of the given �feGaussianBlur� element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEGaussianBlurElement.StdDeviationX">
      <summary>
            Corresponds to attribute �stdDeviation� on the given �feGaussianBlur� element. Contains the X component of attribute �stdDeviation�.
            </summary>
      <value>
            The attribute �stdDeviationX� of the given �feGaussianBlur� element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEGaussianBlurElement.StdDeviationY">
      <summary>
            Corresponds to attribute �stdDeviation� on the given �feGaussianBlur� element. Contains the Y component (possibly computed automatically) of attribute �stdDeviation�.
            </summary>
      <value>
            The attribute �stdDeviationY� of the given �feGaussianBlur� element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEImageElement">
      <summary>
            The SVGFEImageElement interface corresponds to the ‘feImage’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.ISVGURIReference" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEImageElement.Href">
      <summary>
            Corresponds to attribute ‘xlink:href’ on the given element.
            </summary>
      <value>
            The ‘xlink:href’ of the given element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEImageElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEImageElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEImageElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEImageElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEImageElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEImageElement.PreserveAspectRatio">
      <summary>
            Corresponds to attribute ‘preserveAspectRatio’ on the given ‘feImage’ element.
            </summary>
      <value>
            The attribute ‘preserveAspectRatio’ of the given ‘feImage’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEMergeElement">
      <summary>
            The SVGFEMergeElement interface corresponds to the ‘feMerge’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEMergeElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEMergeElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEMergeElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEMergeElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEMergeElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEMergeNodeElement">
      <summary>
            The SVGFEMergeNodeElement interface corresponds to the ‘feMergeNode’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEMergeNodeElement.In1">
      <summary>
            Corresponds to attribute ‘in’ on the given ‘feMergeNode’ element.
            </summary>
      <value>
            The attribute ‘in’ of the given ‘feMergeNode’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEMorphologyElement">
      <summary>
            The SVGFEMorphologyElement interface corresponds to the ‘feMorphology’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEMorphologyElement.SVG_MORPHOLOGY_OPERATOR_UNKNOWN">
      <summary>
            The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEMorphologyElement.SVG_MORPHOLOGY_OPERATOR_ERODE">
      <summary>
            Corresponds to value 'erode'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFEMorphologyElement.SVG_MORPHOLOGY_OPERATOR_DILATE">
      <summary>
            Corresponds to value 'dilate'.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEMorphologyElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEMorphologyElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEMorphologyElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEMorphologyElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEMorphologyElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEMorphologyElement.In1">
      <summary>
            Corresponds to attribute ‘in’ on the given ‘feMorphology’ element.
            </summary>
      <value>
            The attribute ‘in’ of the given ‘feMorphology’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEMorphologyElement.Operator">
      <summary>
            Corresponds to attribute ‘operator’ on the given ‘feMorphology’ element. Takes one of the SVG_MORPHOLOGY_OPERATOR_* constants defined on this interface.
            </summary>
      <value>
            The attribute ‘operator’ of the given ‘feMorphology’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEMorphologyElement.RadiusX">
      <summary>
            Corresponds to attribute ‘radius’ on the given ‘feMorphology’ element.
            </summary>
      <value>
            The attribute ‘radius’ of the given ‘feMorphology’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEMorphologyElement.RadiusY">
      <summary>
            Corresponds to attribute ‘radius’ on the given ‘feMorphology’ element.
            </summary>
      <value>
            The attribute ‘radius’ of the given ‘feMorphology’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEOffsetElement">
      <summary>
            The SVGFEOffsetElement interface corresponds to the ‘feOffset’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEOffsetElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEOffsetElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEOffsetElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEOffsetElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEOffsetElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEOffsetElement.In1">
      <summary>
            Corresponds to attribute ‘in’ on the given ‘feOffset’ element.
            </summary>
      <value>
            The attribute ‘in’ of the given ‘feOffset’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEOffsetElement.Dx">
      <summary>
            Corresponds to attribute ‘dx’ on the given ‘feOffset’ element.
            </summary>
      <value>
            The attribute ‘dx’ of the given ‘feOffset’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEOffsetElement.Dy">
      <summary>
            Corresponds to attribute ‘dy’ on the given ‘feOffset’ element.
            </summary>
      <value>
            The attribute ‘dy’ of the given ‘feOffset’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFEPointLightElement">
      <summary>
            The SVGFEPointLightElement interface corresponds to the ‘fePointLight’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEPointLightElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘fePointLight’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘fePointLight’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEPointLightElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘fePointLight’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘fePointLight’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFEPointLightElement.Z">
      <summary>
            Corresponds to attribute ‘z’ on the given ‘fePointLight’ element.
            </summary>
      <value>
            The attribute ‘z’ of the given ‘fePointLight’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFESpecularLightingElement">
      <summary>
            The SVGFESpecularLightingElement interface corresponds to the ‘feSpecularLighting’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpecularLightingElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpecularLightingElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpecularLightingElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpecularLightingElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpecularLightingElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpecularLightingElement.In1">
      <summary>
            Corresponds to attribute ‘in’ on the given ‘feSpecularLighting’ element.
            </summary>
      <value>
            The attribute ‘in’ of the given ‘feSpecularLighting’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpecularLightingElement.SurfaceScale">
      <summary>
            Corresponds to attribute ‘surfaceScale’ on the given ‘feSpecularLighting’ element.
            </summary>
      <value>
            The attribute ‘surfaceScale’ of the given ‘feSpecularLighting’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpecularLightingElement.SpecularConstant">
      <summary>
            Corresponds to attribute ‘specularConstant’ on the given ‘feSpecularLighting’ element.
            </summary>
      <value>
            The attribute ‘specularConstant’ of the given ‘feSpecularLighting’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpecularLightingElement.SpecularExponent">
      <summary>
            Corresponds to attribute ‘specularExponent’ on the given ‘feSpecularLighting’ element.
            </summary>
      <value>
            The attribute ‘specularExponent’ of the given ‘feSpecularLighting’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpecularLightingElement.KernelUnitLengthX">
      <summary>
            Corresponds to attribute ‘kernelUnitLength’ on the given ‘feSpecularLighting’ element.
            </summary>
      <value>
            The attribute ‘kernelUnitLength’ of the given ‘feSpecularLighting’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpecularLightingElement.KernelUnitLengthY">
      <summary>
            Corresponds to attribute ‘kernelUnitLength’ on the given ‘feSpecularLighting’ element.
            </summary>
      <value>
            The attribute ‘kernelUnitLength’ of the given ‘feSpecularLighting’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFESpotLightElement">
      <summary>
            The SVGFESpotLightElement interface corresponds to the ‘feSpotLight’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpotLightElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘feSpotLight’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘feSpotLight’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpotLightElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘feSpotLight’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘feSpotLight’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpotLightElement.Z">
      <summary>
            Corresponds to attribute ‘z’ on the given ‘feSpotLight’ element.
            </summary>
      <value>
            The attribute ‘z’ of the given ‘feSpotLight’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpotLightElement.PointsAtX">
      <summary>
            Corresponds to attribute ‘pointsAtX’ on the given ‘feSpotLight’ element.
            </summary>
      <value>
            The attribute ‘pointsAtX’ of the given ‘feSpotLight’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpotLightElement.PointsAtY">
      <summary>
            Corresponds to attribute ‘pointsAtY’ on the given ‘feSpotLight’ element.
            </summary>
      <value>
            The attribute ‘pointsAtY’ of the given ‘feSpotLight’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpotLightElement.PointsAtZ">
      <summary>
            Corresponds to attribute ‘pointsAtZ’ on the given ‘feSpotLight’ element.
            </summary>
      <value>
            The attribute ‘pointsAtZ’ of the given ‘feSpotLight’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpotLightElement.SpecularExponent">
      <summary>
            Corresponds to attribute ‘specularExponent’ on the given ‘feSpotLight’ element.
            </summary>
      <value>
            The attribute ‘specularExponent’ of the given ‘feSpotLight’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFESpotLightElement.LimitingConeAngle">
      <summary>
            Corresponds to attribute ‘limitingConeAngle’ on the given ‘feSpotLight’ element.
            </summary>
      <value>
            The attribute ‘limitingConeAngle’ of the given ‘feSpotLight’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFETileElement">
      <summary>
            The SVGFETileElement interface corresponds to the ‘feTile’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETileElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETileElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETileElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETileElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETileElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETileElement.In1">
      <summary>
            Corresponds to attribute ‘in’ on the given ‘feTile’ element.
            </summary>
      <value>
            The attribute ‘in’ of the given ‘feTile’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement">
      <summary>
            The SVGFETurbulenceElement interface corresponds to the ‘feTurbulence’ element.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.SVGElement" />
      <seealso cref="T:Aspose.Html.Dom.Svg.Filters.ISVGFilterPrimitiveStandardAttributes" />
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.SVG_TURBULENCE_TYPE_UNKNOWN">
      <summary>
            The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.SVG_TURBULENCE_TYPE_FRACTALNOISE">
      <summary>
            Corresponds to value 'fractalNoise'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.SVG_TURBULENCE_TYPE_TURBULENCE">
      <summary>
            Corresponds to value 'turbulence'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.SVG_STITCHTYPE_UNKNOWN">
      <summary>
            The type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.SVG_STITCHTYPE_STITCH">
      <summary>
            Corresponds to value 'stitch'.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.SVG_STITCHTYPE_NOSTITCH">
      <summary>
            Corresponds to value 'noStitch'.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.X">
      <summary>
            Corresponds to attribute ‘x’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘x’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.Y">
      <summary>
            Corresponds to attribute ‘y’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘y’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.Width">
      <summary>
            Corresponds to attribute ‘width’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘width’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.Height">
      <summary>
            Corresponds to attribute ‘height’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘height’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.Result">
      <summary>
            Corresponds to attribute ‘result’ on the given ‘filter’ element.
            </summary>
      <value>
            The attribute ‘result’ of the given ‘filter’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.BaseFrequencyX">
      <summary>
            Corresponds to attribute ‘baseFrequency’ on the given ‘feTurbulence’ element. Contains the X component of the ‘baseFrequency’ attribute.
            </summary>
      <value>
            The attribute ‘baseFrequency’ of the given ‘feTurbulence’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.BaseFrequencyY">
      <summary>
            Corresponds to attribute ‘baseFrequency’ on the given ‘feTurbulence’ element. Contains the Y component of the (possibly computed automatically) ‘baseFrequency’ attribute.
            </summary>
      <value>
            The attribute ‘baseFrequency’ of the given ‘feTurbulence’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.NumOctaves">
      <summary>
            Corresponds to attribute ‘numOctaves’ on the given ‘feTurbulence’ element.
            </summary>
      <value>
            The attribute ‘numOctaves’ of the given ‘feTurbulence’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.Seed">
      <summary>
            Corresponds to attribute ‘seed’ on the given ‘feTurbulence’ element.
            </summary>
      <value>
            The attribute ‘seed’ of the given ‘feTurbulence’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.StitchTiles">
      <summary>
            Corresponds to attribute ‘stitchTiles’ on the given ‘feTurbulence’ element. Takes one of the SVG_STITCHTYPE_* constants defined on this interface.
            </summary>
      <value>
            The attribute ‘stitchTiles’ of the given ‘feTurbulence’ element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Filters.SVGFETurbulenceElement.Type">
      <summary>
            Corresponds to attribute ‘type’ on the given ‘feTurbulence’ element. Takes one of the SVG_TURBULENCE_TYPE_* constants defined on this interface.
            </summary>
      <value>
            The attribute ‘type’ of the given ‘feTurbulence’ element.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Events.NamespaceDoc">
      <summary>
            The namespace consists of
            classes for event based interactivity like time events and zooming.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Events.SVGZoomEvent">
      <summary>
            The zoom event occurs when the user initiates an action which causes the current view of the SVG document fragment to be rescaled. Event handlers are only recognized on ‘svg’ elements.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Events.Event" />
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Events.SVGZoomEvent.ZoomRectScreen">
      <summary>
            The specified zoom rectangle in screen units.
            The SVGRect object is read only.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Events.SVGZoomEvent.PreviousScale">
      <summary>
            The scale factor from previous zoom operations that was in place before the zoom operation occurred.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Events.SVGZoomEvent.PreviousTranslate">
      <summary>
            The translation values from previous zoom operations that were in place before the zoom operation occurred.
            The SVGPoint object is read only.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Events.SVGZoomEvent.NewScale">
      <summary>
            The scale factor that will be in place after the zoom operation has been processed.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Events.SVGZoomEvent.NewTranslate">
      <summary>
            The translation values that will be in place after the zoom operation has been processed.
            The SVGPoint object is read only.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Events.TimeEvent">
      <summary>
            The TimeEvent interface provides specific contextual information associated with Time events.The different types of events that can occur are: beginEvent, endEvent and repeatEvent.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Events.Event" />
    </member>
    <member name="M:Aspose.Html.Dom.Svg.Events.TimeEvent.InitTimeEvent(System.String,Aspose.Html.Dom.Views.IAbstractView,System.Int64)">
      <summary>
            The initTimeEvent method is used to initialize the value of a TimeEvent created through the DocumentEvent interface. This method may only be called before the TimeEvent has been dispatched via the dispatchEvent method, though it may be called multiple times during that phase if necessary. If called multiple times, the final invocation takes precedence.
            </summary>
      <param name="typeArg">Specifies the event type.</param>
      <param name="viewArg">Specifies the Event's AbstractView.</param>
      <param name="detailArg">Specifies the Event's detail.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Events.TimeEvent.View">
      <summary>
            The view attribute identifies the AbstractView [DOM2VIEWS] from which the event was generated.
            </summary>
      <value>
            The current view.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Events.TimeEvent.Detail">
      <summary>
            Specifies some detail information about the Event, depending on the type of the event. For this event type, indicates the repeat number for the animation.
            </summary>
      <value>
            The detail.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.NamespaceDoc">
      <summary>
            The namespace provides access to all SVG specific data types.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGAngle">
      <summary>
            The SVGAngle interface corresponds to the angle basic data type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGAngle.SVG_ANGLETYPE_UNKNOWN">
      <summary>
            The unit type is not one of predefined unit types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGAngle.SVG_ANGLETYPE_UNSPECIFIED">
      <summary>
            No unit type was provided (i.e., a unitless value was specified). For angles, a unitless value is treated the same as if degrees were specified.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGAngle.SVG_ANGLETYPE_DEG">
      <summary>
            The unit type was explicitly set to degrees.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGAngle.SVG_ANGLETYPE_RAD">
      <summary>
            The unit type is radians.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGAngle.SVG_ANGLETYPE_GRAD">
      <summary>
            The unit type is radians.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAngle.NewValueSpecifiedUnits(System.UInt16,System.Single)">
      <summary>
            Reset the value as a number with an associated unitType, thereby replacing the values for all of the attributes on the object.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NOT_SUPPORTED_ERR" />
            Raised if unitType is SVG_ANGLETYPE_UNKNOWN or not a valid unit type constant (one of the other SVG_ANGLETYPE_* constants defined on this interface).
            </exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />
            Raised when the angle corresponds to a read only attribute or when the object itself is read only.
            </exception>
      <param name="newUnitType">The unit type for the value (e.g., SVG_ANGLETYPE_DEG).</param>
      <param name="valueInSpecifiedUnits">The angle value.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAngle.ConvertToSpecifiedUnits(System.UInt16)">
      <summary>
            Preserve the same underlying stored value, but reset the stored unit identifier to the given unitType. Object attributes unitType, valueInSpecifiedUnits and valueAsString might be modified as a result of this method.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NOT_SUPPORTED_ERR" />
            Raised if unitType is SVG_ANGLETYPE_UNKNOWN or not a valid unit type constant (one of the other SVG_ANGLETYPE_* constants defined on this interface).
            </exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />
            Raised when the angle corresponds to a read only attribute or when the object itself is read only.
            </exception>
      <param name="unitType">The unit type to switch to (e.g., SVG_ANGLETYPE_DEG).</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAngle.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGAngle.UnitType">
      <summary>
            The type of the value as specified by one of the SVG_ANGLETYPE_* constants defined on this interface.
            </summary>
      <value>
            The type of the unit.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGAngle.Value">
      <summary>
            The angle value as a floating point value, in degrees. Setting this attribute will cause valueInSpecifiedUnits and valueAsString to be updated automatically to reflect this setting.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />
            Raised when the angle corresponds to a read only attribute or when the object itself is read only.
            </exception>
      <value>
            The value.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGAngle.ValueInSpecifiedUnits">
      <summary>
            The angle value as a floating point value, in the units expressed by unitType. Setting this attribute will cause value and valueAsString to be updated automatically to reflect this setting.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />
            Raised when the angle corresponds to a read only attribute or when the object itself is read only.
            </exception>
      <value>
            The value in specified units.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGAngle.ValueAsString">
      <summary>
            The angle value as a string value, in the units expressed by unitType. Setting this attribute will cause value, valueInSpecifiedUnits and unitType to be updated automatically to reflect this setting.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.SYNTAX_ERR" />
            Raised if the assigned string cannot be parsed as a valid angle.
            </exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />
            Raised when the angle corresponds to a read only attribute or when the object itself is read only.
            </exception>
      <value>
            The value as string.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedAngle">
      <summary>
            Used for attributes of basic data type angle that can be animated.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedAngle.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedBoolean">
      <summary>
            Used for attributes of type boolean which can be animated.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedBoolean.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedEnumeration">
      <summary>
            Used for attributes whose value must be a constant from a particular enumeration and which can be animated.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedEnumeration.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedInteger">
      <summary>
            Used for attributes of basic type integer which can be animated.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedInteger.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedLength">
      <summary>
            Used for attributes of basic type length which can be animated.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedLength.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedLengthList">
      <summary>
            Used for attributes of type SVGLengthList which can be animated.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedLengthList.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedNumber">
      <summary>
            Used for attributes of basic type number which can be animated.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedNumber.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedNumberList">
      <summary>
            Used for attributes which take a list of numbers and which can be animated.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedNumberList.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedPreserveAspectRatio">
      <summary>
            Used for attributes of type SVGPreserveAspectRatio which can be animated.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedPreserveAspectRatio.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedRect">
      <summary>
            Used for attributes of type SVGRect which can be animated.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedRect.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedString">
      <summary>
            Used for attributes of type DOMString which can be animated.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedString.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedTransformList">
      <summary>
            Used for the various attributes which specify a set of transformations, such as the ‘transform’ attribute which is available for many of SVG's elements, and which can be animated.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedTransformList.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedValue`1">
      <summary>
            Used for attributes of types which can be animated.
            </summary>
      <typeparam name="T">The SVG Value object.</typeparam>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedValue`1.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedValue`1.BaseVal">
      <summary>
            The base value of the given attribute before applying any animations.
            </summary>
      <value>
        <c>true</c> if [base value]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGAnimatedValue`1.AnimVal">
      <summary>
            If the given attribute or property is being animated, contains the current animated value of the attribute or property. If the given attribute or property is not currently being animated, contains the same value as baseVal.
            </summary>
      <value>
        <c>true</c> if [anim value]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGLength">
      <summary>
            The SVGLength interface corresponds to the length basic data type.
            An SVGLength object can be designated as read only, which means that attempts to modify the object will result in an exception being thrown, as described below.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGLength.SVG_LENGTHTYPE_UNKNOWN">
      <summary>
            The unit type is not one of predefined unit types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGLength.SVG_LENGTHTYPE_NUMBER">
      <summary>
            No unit type was provided (i.e., a unitless value was specified), which indicates a value in user units.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGLength.SVG_LENGTHTYPE_PERCENTAGE">
      <summary>
            A percentage value was specified.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGLength.SVG_LENGTHTYPE_EMS">
      <summary>
            A value was specified using the em units defined in CSS2.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGLength.SVG_LENGTHTYPE_EXS">
      <summary>
            A value was specified using the ex units defined in CSS2.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGLength.SVG_LENGTHTYPE_PX">
      <summary>
            A value was specified using the px units defined in CSS2.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGLength.SVG_LENGTHTYPE_CM">
      <summary>
            A value was specified using the cm units defined in CSS2.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGLength.SVG_LENGTHTYPE_MM">
      <summary>
            A value was specified using the mm units defined in CSS2.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGLength.SVG_LENGTHTYPE_IN">
      <summary>
            A value was specified using the in units defined in CSS2.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGLength.SVG_LENGTHTYPE_PT">
      <summary>
            A value was specified using the pt units defined in CSS2.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGLength.SVG_LENGTHTYPE_PC">
      <summary>
            A value was specified using the pc units defined in CSS2.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGLength.NewValueSpecifiedUnits(System.UInt16,System.Single)">
      <summary>
            Reset the value as a number with an associated unitType, thereby replacing the values for all of the attributes on the object.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NOT_SUPPORTED_ERR" />
            Raised if unitType is SVG_LENGTHTYPE_UNKNOWN or not a valid unit type constant (one of the other SVG_LENGTHTYPE_* constants defined on this interface).
            </exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />
            Raised when the length corresponds to a read only attribute or when the object itself is read only.
            </exception>
      <param name="unitType">The unit type for the value.</param>
      <param name="valueInSpecifiedUnits">The new value..</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGLength.ConvertToSpecifiedUnits(System.UInt16)">
      <summary>
            Preserve the same underlying stored value, but reset the stored unit identifier to the given unitType. Object attributes unitType, valueInSpecifiedUnits and valueAsString might be modified as a result of this method. For example, if the original value were "0.5cm" and the method was invoked to convert to millimeters, then the unitType would be changed to SVG_LENGTHTYPE_MM, valueInSpecifiedUnits would be changed to the numeric value 5 and valueAsString would be changed to "5mm".
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NOT_SUPPORTED_ERR" />
            Raised if unitType is SVG_LENGTHTYPE_UNKNOWN or not a valid unit type constant (one of the other SVG_LENGTHTYPE_* constants defined on this interface).
            </exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />
            Raised when the length corresponds to a read only attribute or when the object itself is read only.
            </exception>
      <param name="unitType">The unit type to switch to (e.g., SVG_LENGTHTYPE_MM).</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGLength.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGLength.UnitType">
      <summary>
            The type of the value as specified by one of the SVG_LENGTHTYPE_* constants defined on this interface.
            </summary>
      <value>
            The type of the unit.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGLength.Value">
      <summary>
            The value as a floating point value, in user units. Setting this attribute will cause valueInSpecifiedUnits and valueAsString to be updated automatically to reflect this setting.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />
            Raised when the length corresponds to a read only attribute or when the object itself is read only.
            </exception>
      <value>
            The value.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGLength.ValueInSpecifiedUnits">
      <summary>
            The value as a floating point value, in the units expressed by unitType. Setting this attribute will cause value and valueAsString to be updated automatically to reflect this setting.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />
            Raised when the length corresponds to a read only attribute or when the object itself is read only.
            </exception>
      <value>
            The value in specified units.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGLength.ValueAsString">
      <summary>
            The value as a string value, in the units expressed by unitType. Setting this attribute will cause value, valueInSpecifiedUnits and unitType to be updated automatically to reflect this setting.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.SYNTAX_ERR" />
            Raised if the assigned string cannot be parsed as a valid length.
            </exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />
            Raised when the length corresponds to a read only attribute or when the object itself is read only.
            </exception>
      <value>
            The value as string.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGLengthList">
      <summary>
            This interface defines a list of SVGLength objects.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Collections.SVGListBase`1" />
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGLengthList.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGMatrix">
      <summary>
            Many of SVG's graphics operations utilize 2x3 matrices of the form:
            [a c e]
            [b d f]
            which, when expanded into a 3x3 matrix for the purposes of matrix arithmetic, become:
            [a c e]
            [b d f]
            [0 0 1]
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGMatrix.Multiply(Aspose.Html.Dom.Svg.DataTypes.SVGMatrix)">
      <summary>
            Performs matrix multiplication. This matrix is post-multiplied by another matrix, returning the resulting new matrix.
            </summary>
      <param name="secondMatrix">The matrix which is post-multiplied to this matrix.</param>
      <returns>The resulting matrix.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGMatrix.Translate(System.Single,System.Single)">
      <summary>
            Post-multiplies a translation transformation on the current matrix and returns the resulting matrix.
            </summary>
      <param name="x">The distance to translate along the x-axis.</param>
      <param name="y">The distance to translate along the y-axis.</param>
      <returns>The resulting matrix.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGMatrix.Scale(System.Single)">
      <summary>
            Post-multiplies a uniform scale transformation on the current matrix and returns the resulting matrix.
            </summary>
      <param name="scaleFactor">Scale factor in both X and Y.</param>
      <returns>The resulting matrix.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGMatrix.ScaleNonUniform(System.Single,System.Single)">
      <summary>
            Post-multiplies a non-uniform scale transformation on the current matrix and returns the resulting matrix.
            </summary>
      <param name="scaleFactorX">Scale factor in X.</param>
      <param name="scaleFactorY">Scale factor in Y.</param>
      <returns>The resulting matrix.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGMatrix.Rotate(System.Single)">
      <summary>
            Post-multiplies a rotation transformation on the current matrix and returns the resulting matrix.
            </summary>
      <param name="angle">Rotation angle.</param>
      <returns>The resulting matrix.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGMatrix.SkewX(System.Single)">
      <summary>
            Post-multiplies a skewX transformation on the current matrix and returns the resulting matrix.
            </summary>
      <param name="angle">Skew angle.</param>
      <returns>The resulting matrix.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGMatrix.SkewY(System.Single)">
      <summary>
            Post-multiplies a skewY transformation on the current matrix and returns the resulting matrix.
            </summary>
      <param name="angle">The angle.</param>
      <returns>Skew angle.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGMatrix.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGMatrix.A">
      <summary>
            The A component of the matrix.
            </summary>
      <value>
            The A component of the matrix.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGMatrix.B">
      <summary>
            The B component of the matrix.
            </summary>
      <value>
            The B component of the matrix.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGMatrix.C">
      <summary>
            The C component of the matrix.
            </summary>
      <value>
            The C component of the matrix.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGMatrix.D">
      <summary>
            The D component of the matrix.
            </summary>
      <value>
            The D component of the matrix.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGMatrix.E">
      <summary>
            The E component of the matrix.
            </summary>
      <value>
            The E component of the matrix.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGMatrix.F">
      <summary>
            The F component of the matrix.
            </summary>
      <value>
            The F component of the matrix.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGNumber">
      <summary>
            Used for attributes of basic type number.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGNumber.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGNumber.Value">
      <summary>
            The value of the given attribute.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.</exception>
      <value>
            The value.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGNumberList">
      <summary>
            This interface defines a list of SVGNumber objects.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Collections.SVGListBase`1" />
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGNumberList.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGPoint">
      <summary>
            Many of the SVG DOM interfaces refer to objects of class SVGPoint. An SVGPoint is an (x, y) coordinate pair. When used in matrix operations, an SVGPoint is treated as a vector of the form:
            [x]
            [y]
            [1]
            If an SVGRect object is designated as read only, then attempting to assign to one of its attributes will result in an exception being thrown.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGPoint.MatrixTransform(Aspose.Html.Dom.Svg.DataTypes.SVGMatrix)">
      <summary>
            Applies a 2x3 matrix transformation on this SVGPoint object and returns a new, transformed SVGPoint object:
            newpoint = matrix* thispoint
            </summary>
      <param name="matrix">he matrix which is to be applied to this SVGPoint object.</param>
      <returns>A new SVGPoint object.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGPoint.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGPoint.X">
      <summary>
            The X coordinate.
            </summary>
      <value>
            The X coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised if the SVGPoint object is read only, or corresponds to a DOM attribute that is read only.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGPoint.Y">
      <summary>
            The Y coordinate.
            </summary>
      <value>
            The Y coordinate.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised if the SVGPoint object is read only, or corresponds to a DOM attribute that is read only.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGPointList">
      <summary>
            This interface defines a list of SVGPoint objects.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Collections.SVGListBase`1" />
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGPointList.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio">
      <summary>
            The SVGPreserveAspectRatio interface corresponds to the ‘preserveAspectRatio’ attribute, which is available for some of SVG's elements.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_UNKNOWN">
      <summary>
            The enumeration was set to a value that is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_NONE">
      <summary>
            Corresponds to value 'none' for attribute ‘preserveAspectRatio’.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMIN">
      <summary>
            Corresponds to value 'xMinYMin' for attribute ‘preserveAspectRatio’.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMIN">
      <summary>
            Corresponds to value 'xMidYMin' for attribute ‘preserveAspectRatio’.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMIN">
      <summary>
            Corresponds to value 'xMaxYMin' for attribute ‘preserveAspectRatio’.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMID">
      <summary>
            Corresponds to value 'XMinYMid' for attribute ‘preserveAspectRatio’.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMID">
      <summary>
            Corresponds to value 'xMidYMid' for attribute ‘preserveAspectRatio’.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMID">
      <summary>
            Corresponds to value 'xMaxYMid' for attribute ‘preserveAspectRatio’.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMINYMAX">
      <summary>
            Corresponds to value 'xMinYMax' for attribute ‘preserveAspectRatio’.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMIDYMAX">
      <summary>
            Corresponds to value 'xMidYMax' for attribute ‘preserveAspectRatio’.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.SVG_PRESERVEASPECTRATIO_XMAXYMAX">
      <summary>
            Corresponds to value 'xMaxYMax' for attribute ‘preserveAspectRatio’.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.SVG_MEETORSLICE_UNKNOWN">
      <summary>
            The enumeration was set to a value that is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.SVG_MEETORSLICE_MEET">
      <summary>
            Corresponds to value 'meet' for attribute ‘preserveAspectRatio’.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.SVG_MEETORSLICE_SLICE">
      <summary>
            Corresponds to value 'slice' for attribute ‘preserveAspectRatio’.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.Align">
      <summary>
            The type of the alignment value as specified by one of the SVG_PRESERVEASPECTRATIO_* constants defined on this interface.
            </summary>
      <value>
            The type of the alignment
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised when the object corresponds to a read only attribute or when the object itself is read only.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGPreserveAspectRatio.MeetOrSlice">
      <summary>
            The type of the meet-or-slice value as specified by one of the SVG_MEETORSLICE_* constants defined on this interface.
            </summary>
      <value>
            The type of the meet-or-slice
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised when the object corresponds to a read only attribute or when the object itself is read only.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGRect">
      <summary>
            Represents rectangular geometry. Rectangles are defined as consisting of a (x,y) coordinate pair identifying a minimum X value, a minimum Y value, and a width and height, which are usually constrained to be non-negative.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGRect.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGRect.X">
      <summary>
            The X coordinate of the rectangle, in user units.
            </summary>
      <value>
            The X coordinate of the rectangle, in user units.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />
            Raised when the rectangle corresponds to a read only attribute or when the object itself is read only.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGRect.Y">
      <summary>
            The Y coordinate of the rectangle, in user units.
            </summary>
      <value>
            The Y coordinate of the rectangle, in user units.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />
            Raised when the rectangle corresponds to a read only attribute or when the object itself is read only.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGRect.Width">
      <summary>
            The Width coordinate of the rectangle, in user units.
            </summary>
      <value>
            The Width coordinate of the rectangle, in user units.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />
            Raised when the rectangle corresponds to a read only attribute or when the object itself is read only.
            </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGRect.Height">
      <summary>
            The Height coordinate of the rectangle, in user units.
            </summary>
      <value>
            The Height coordinate of the rectangle, in user units.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />
            Raised when the rectangle corresponds to a read only attribute or when the object itself is read only.
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGStringList">
      <summary>
            SVGStringList has the same attributes and methods as other SVGxxxList interfaces. Implementers may consider using a single base class to implement the various SVGxxxList interfaces.
            </summary>
      <seealso cref="T:System.String" />
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGStringList.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.DataTypes.SVGStringList" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGStringList.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.DataTypes.SVGStringList" /> class.
            </summary>
      <param name="enumerable">The enumerable.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGStringList.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGTransform">
      <summary>
            SVGTransform is the interface for one of the component transformations within an SVGTransformList; thus, an SVGTransform object corresponds to a single component (e.g., 'scale(…)' or 'matrix(…)') within a ‘transform’ attribute specification.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.SVG_TRANSFORM_UNKNOWN">
      <summary>
            The unit type is not one of predefined types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.SVG_TRANSFORM_MATRIX">
      <summary>
            A 'matrix(…)' transformation.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.SVG_TRANSFORM_TRANSLATE">
      <summary>
            A 'translate(…)' transformation.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.SVG_TRANSFORM_SCALE">
      <summary>
            A 'scale(…)' transformation.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.SVG_TRANSFORM_ROTATE">
      <summary>
            A 'rotate(…)' transformation.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.SVG_TRANSFORM_SKEWX">
      <summary>
            A 'skewX(…)' transformation.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.SVG_TRANSFORM_SKEWY">
      <summary>
            A 'skewY(…)' transformation.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.SetMatrix(Aspose.Html.Dom.Svg.DataTypes.SVGMatrix)">
      <summary>
            Sets the transform type to SVG_TRANSFORM_MATRIX, with parameter matrix defining the new transformation. The values from the parameter matrix are copied, the matrix parameter does not replace SVGTransform::matrix.
            </summary>
      <param name="matrix">The new matrix for the transformation.</param>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.SetTranslate(System.Single,System.Single)">
      <summary>
            Sets the transform type to SVG_TRANSFORM_TRANSLATE, with parameters tx and ty defining the translation amounts.
            </summary>
      <param name="tx">The translation amount in X.</param>
      <param name="ty">The translation amount in Y.</param>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.SetScale(System.Single,System.Single)">
      <summary>
            Sets the transform type to SVG_TRANSFORM_SCALE, with parameters sx and sy defining the scale amounts.
            </summary>
      <param name="sx">The scale amount in X.</param>
      <param name="sy">The scale amount in Y.</param>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.SetRotate(System.Single,System.Single,System.Single)">
      <summary>
            Sets the transform type to SVG_TRANSFORM_ROTATE, with parameter angle defining the rotation angle and parameters cx and cy defining the optional center of rotation.
            </summary>
      <param name="angle">The rotation angle.</param>
      <param name="cx">The x coordinate of center of rotation.</param>
      <param name="cy">The y coordinate of center of rotation.</param>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.SetSkewX(System.Single)">
      <summary>
            Sets the transform type to SVG_TRANSFORM_SKEWX, with parameter angle defining the amount of skew.
            </summary>
      <param name="angle">The skew angle.</param>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.SetSkewY(System.Single)">
      <summary>
            Sets the transform type to SVG_TRANSFORM_SKEWY, with parameter angle defining the amount of skew.
            </summary>
      <param name="angle">The skew angle.</param>
      <exception cref="T:Aspose.Html.Dom.DOMException">
            Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised on an attempt to change the value of a read only attribute.
            </exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.Type">
      <summary>
            The type of the value as specified by one of the SVG_TRANSFORM_* constants defined on this interface.
            </summary>
      <value>
            The transformation type.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.Matrix">
      <summary>
            The matrix that represents this transformation. The matrix object is live, meaning that any changes made to the SVGTransform object are immediately reflected in the matrix object and vice versa. In case the matrix object is changed directly (i.e., without using the methods on the SVGTransform interface itself) then the type of the SVGTransform changes to SVG_TRANSFORM_MATRIX.
            For SVG_TRANSFORM_MATRIX, the matrix contains the a, b, c, d, e, f values supplied by the user.
            For SVG_TRANSFORM_TRANSLATE, e and f represent the translation amounts(a= 1, b= 0, c= 0 and d = 1).
            For SVG_TRANSFORM_SCALE, a and d represent the scale amounts(b= 0, c= 0, e= 0 and f = 0).
            For SVG_TRANSFORM_SKEWX and SVG_TRANSFORM_SKEWY, a, b, c and d represent the matrix which will result in the given skew(e= 0 and f = 0).
            For SVG_TRANSFORM_ROTATE, a, b, c, d, e and f together represent the matrix which will result in the given rotation.When the rotation is around the center point(0, 0), e and f will be zero.
             </summary>
      <value>
            The matrix that represents this transformation.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.DataTypes.SVGTransform.Angle">
      <summary>
            A convenience attribute for SVG_TRANSFORM_ROTATE, SVG_TRANSFORM_SKEWX and SVG_TRANSFORM_SKEWY. It holds the angle that was specified.
            For SVG_TRANSFORM_MATRIX, SVG_TRANSFORM_TRANSLATE and SVG_TRANSFORM_SCALE, angle will be zero.
            </summary>
      <value>
            The angle that was specified.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGTransformList">
      <summary>
            This interface defines a list of SVGTransform objects.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Svg.Collections.SVGListBase`1" />
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGTransformList.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.DataTypes.SVGTransformList" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGTransformList.#ctor(System.Collections.Generic.IEnumerable{Aspose.Html.Dom.Svg.DataTypes.SVGTransform})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.DataTypes.SVGTransformList" /> class.
            </summary>
      <param name="enumerable">The enumerable.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGTransformList.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.DataTypes.SVGValueType">
      <summary>
            The SVGValueType type is used to represent an base SVG value type.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGValueType.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.DataTypes.SVGValueType" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGValueType.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.DataTypes.SVGValueType.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Collections.NamespaceDoc">
      <summary>
        <b>Aspose.Html.Dom.Svg.Collections</b> provides access to
            specific generic collections.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Svg.Collections.SVGListBase`1">
      <summary>
            This interface defines a base list of all SVG lists.
            </summary>
      <typeparam name="T">Type of item stored in list.</typeparam>
      <seealso cref="T:System.Collections.Generic.IEnumerable`1" />
    </member>
    <member name="M:Aspose.Html.Dom.Svg.Collections.SVGListBase`1.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.Collections.SVGListBase`1" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.Collections.SVGListBase`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Svg.Collections.SVGListBase`1" /> class.
            </summary>
      <param name="enumerable">The enumerable.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.Collections.SVGListBase`1.Clear">
      <summary>
            Clears all existing current items from the list, with the result being an empty list.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised when the list cannot be modified.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.Collections.SVGListBase`1.Initialize(`0)">
      <summary>
            Clears all existing current items from the list and re-initializes the list to hold the single item specified by the parameter.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised when the list cannot be modified.</exception>
      <param name="newItem">The item which should become the only member of the list.</param>
      <returns>The item being inserted into the list.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.Collections.SVGListBase`1.GetItem(System.UInt64)">
      <summary>
            Returns the specified item from the list.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">Code <see cref="F:Aspose.Html.Dom.DOMException.INDEX_SIZE_ERR" />. 
            Raised if the index number is greater than or equal to numberOfItems.</exception>
      <param name="index">The index of the item from the list which is to be returned. The first item is number 0.</param>
      <returns>The selected item.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.Collections.SVGListBase`1.InsertItemBefore(`0,System.UInt64)">
      <summary>
            Inserts a new item into the list at the specified position. The first item is number 0.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised when the list cannot be modified.</exception>
      <param name="newItem">The item which is to be inserted into the list.</param>
      <param name="index">The index of the item before which the new item is to be inserted. The first item is number 0. If the index is equal to 0, then the new item is inserted at the front of the list. If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.</param>
      <returns>The inserted item.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.Collections.SVGListBase`1.ReplaceItem(`0,System.UInt64)">
      <summary>
            Replaces an existing item in the list with a new item.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised when the list cannot be modified.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">Code <see cref="F:Aspose.Html.Dom.DOMException.INDEX_SIZE_ERR" />.
            Raised if the index number is greater than or equal to numberOfItems.</exception>
      <param name="newItem">The item which is to be inserted into the list.</param>
      <param name="index">The index of the item which is to be replaced. The first item is number 0.</param>
      <returns>The inserted item.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.Collections.SVGListBase`1.RemoveItem(System.UInt64)">
      <summary>
            Removes an existing item from the list.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised when the list cannot be modified.</exception>
            /// <exception cref="T:Aspose.Html.Dom.DOMException">Code <see cref="F:Aspose.Html.Dom.DOMException.INDEX_SIZE_ERR" />. 
            Raised if the index number is greater than or equal to numberOfItems.</exception><param name="index">The index of the item which is to be removed. The first item is number 0.</param><returns>The removed item.</returns></member>
    <member name="M:Aspose.Html.Dom.Svg.Collections.SVGListBase`1.AppendItem(`0)">
      <summary>
            Inserts a new item at the end of the list.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />. 
            Raised when the list cannot be modified.</exception>
      <param name="newItem">The item which is to be inserted. The first item is number 0.</param>
      <returns>The inserted item.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.Collections.SVGListBase`1.GetEnumerator">
      <summary>
            Gets the enumerator.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Svg.Collections.SVGListBase`1.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Collections.SVGListBase`1.Item(System.UInt64)">
      <summary>
            Returns the indexth item in the list.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">Code <see cref="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR" />.
            Raised when the list cannot be modified.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">Code <see cref="F:Aspose.Html.Dom.DOMException.INDEX_SIZE_ERR" />.
            Raised if the index number is greater than or equal to numberOfItems.</exception>
      <value>
            The type of item stored in list.
            </value>
      <param name="index">Index in the list.</param>
      <returns>The stored object at the indexth position in the list.</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Collections.SVGListBase`1.Length">
      <summary>
            The number of items in the list.
            </summary>
      <value>
            The number of items.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Svg.Collections.SVGListBase`1.NumberOfItems">
      <summary>
            The number of items in the list.
            </summary>
      <value>
            The number of items.
            </value>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.AtxHeadingSyntaxNode">
      <summary>
            Represents the AtxHeadingSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.AtxHeadingSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.AtxHeadingSyntaxNode.GetOpeningTag">
      <summary>
             Defines the interface for get OpeningTag.
            </summary>
      <returns>The MarkdownSyntaxToken.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.AtxHeadingSyntaxNode.GetClosingTag">
      <summary>
            Defines the interface for get ClosingTag.
            </summary>
      <returns>The closing tag.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.AutoLinkSyntaxNode">
      <summary>
            Represents the AutoLinkSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.AutoLinkSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.AutoLinkSyntaxNode.GetUri">
      <summary>
            Get the uri.
            </summary>
      <returns>The string value of Content.Span.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.AutoLinkSyntaxNode.IsMail">
      <summary>
            Get true if is mail.
            </summary>
      <returns>The boolean.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.BlockProxy">
      <summary>
            Represents the BlockProxy.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.BlockProxy.PreInsertionValidity(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            The PreInsertionValidity.
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.BlockProxy.GetTarget">
      <summary>
            Get the target node.
            </summary>
      <returns>The MarkdownSyntaxNode.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.BlockProxy.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.BlockProxy.WriteTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the interface for Write To writer.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.BlockQuoteSyntaxNode">
      <summary>
            Represents the BlockQuoteSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.BlockQuoteSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.BlockQuoteSyntaxNode.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the interface for write component to writer.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.BlockSyntaxNode">
      <summary>
            Base implementation of the BlockSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.BlockSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree)">
      <summary>
            The BlockSyntaxNode constructor.
            </summary>
      <param name="ownerSyntaxTree">The owner syntax tree.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.BlockSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.CharacterReferenceSyntaxNode">
      <summary>
            Represents the CharacterReferenceSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.CharacterReferenceSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.CharacterReferenceSyntaxNode.Source">
      <summary>
            Get the source.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.CharacterReferenceSyntaxNode.Span">
      <summary>
            Get the span.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.CharacterReferenceSyntaxNode.Reference">
      <summary>
            Get the reference.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.CharacterReferenceSyntaxNode.Value">
      <summary>
            Get the value.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.CodeSpanSyntaxNode">
      <summary>
            Represents the CodeSpanSyntaxNode
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.CodeSpanSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.CodeSpanSyntaxNode.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the interface for write component to writer.
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.CodeSpanSyntaxNode.GetContent">
      <summary>
            Defines the interface for get Content.
            </summary>
      <returns>The string.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.ContainerBlockSyntaxNode">
      <summary>
            Base implementation of the ContainerBlockSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ContainerBlockSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree)">
      <summary>
            The ContainerBlockSyntax constructor.
            </summary>
      <param name="ownerSyntaxTree">The MarkdownSyntaxTree.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Emphasis">
      <summary>
            Represents the Emphasis.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Emphasis.Undefined">
      <summary>
            The Undefined value.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Emphasis.Strong">
      <summary>
            The Strong value.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Emphasis.Regular">
      <summary>
            The Regular value.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Emphasis.StrikeThrough">
      <summary>
            The StrikeThrough value.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.EmphasisSyntaxNode">
      <summary>
            Represents the EmphasisSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.EmphasisSyntaxNode.GetEmphasisType">
      <summary>
            Defines the interface for get Emphasis Type
            </summary>
      <returns>The Emphasis.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.EmphasisSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.EmphasisSyntaxNode.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the interface for write component to writer.
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.EmptyLineSyntaxNode">
      <summary>
            Represents the EmptyLineSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.EmptyLineSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.EscapedCharacterSyntaxNode">
      <summary>
            Implemented the escape character syntax node.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.EscapedCharacterSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The MarkdownSyntaxVisitor.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.FencedCodeBlockSyntaxNode">
      <summary>
            Represents the FencedCodeBlockSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.FencedCodeBlockSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.FencedCodeBlockSyntaxNode.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            efines the interface for write component to writer.
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.FencedCodeBlockSyntaxNode.GetOpeningTag">
      <summary>
            Defines the interface for get Opening Tag.
            </summary>
      <returns>The MarkdownSyntaxToken.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.FencedCodeBlockSyntaxNode.GetClosingTag">
      <summary>
            Defines the interface for get Closing Tag.
            </summary>
      <returns>The MarkdownSyntaxToken.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.FencedCodeBlockSyntaxNode.GetInfo">
      <summary>
            Defines the interface for get Info.
            </summary>
      <returns>The string.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.FencedCodeBlockSyntaxNode.GetContent">
      <summary>
            Defines the interface for get Content.
            </summary>
      <returns>The string.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.HardBreakSyntaxNode">
      <summary>
            Represents the HardBreakSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.HardBreakSyntaxNode.GetBreakingTag">
      <summary>
            Defines the interface for get Breaking Tag
            </summary>
      <returns>The MarkdownSyntaxToken.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.HardBreakSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.HTMLFragmentSyntax">
      <summary>
            Represents the HTMLFragmentSyntax.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.HTMLFragmentSyntax.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.HTMLFragmentSyntax.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the interface for write components to writer.
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.HTMLFragmentSyntax.GetContent">
      <summary>
            Defines the interface for get Content.
            </summary>
      <returns>The string.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.HTMLFragmentSyntax.SetContent(System.String)">
      <summary>
            Defines the interface for set Content.
            </summary>
      <param name="html">The string html value.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.IndentedCodeBlockSyntaxNode">
      <summary>
            Represents the IndentedCodeBlockSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.IndentedCodeBlockSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.IndentedCodeBlockSyntaxNode.GetContent">
      <summary>
            Defines the interface for get Content.
            </summary>
      <returns>The string.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.InlineContainerSyntaxNode">
      <summary>
            Represents the InlineContainerSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineContainerSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree)">
      <summary>
            Create the InlineContainerSyntaxNode instance.
            </summary>
      <param name="ownerSyntaxTree">The MarkdownSyntaxTree.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineContainerSyntaxNode.GetEnumerator">
      <summary>
             Returns an enumerator that iterates through the collection.
             </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
             </returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineContainerSyntaxNode.PreInsertionValidity(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Defines the interface for PreInsertionValidity.
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineContainerSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.InlineImageSyntaxNode">
      <summary>
            Represents the InlineImageSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineImageSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineImageSyntaxNode.GetDestination">
      <summary>
            Defines the interface for get destination.
            </summary>
      <returns>The LinkDestinationSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineImageSyntaxNode.GetTitle">
      <summary>
            Defines the interface for get title.
            </summary>
      <returns>The LinkTitleSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineImageSyntaxNode.GetAltText">
      <summary>
            Defines the interface for get all text.
            </summary>
      <returns>The string.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.InlineLinkSyntaxNode">
      <summary>
            Represents the InlineLinkSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineLinkSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineLinkSyntaxNode.GetDestination">
      <summary>
            Defines the interface for get destination.
            </summary>
      <returns>The LinkDestinationSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineLinkSyntaxNode.GetTitle">
      <summary>
            Defines the interface for get title.
            </summary>
      <returns>The LinkTitleSyntax.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.InlineProxy">
      <summary>
            Represents InlineProxy.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineProxy.PreInsertionValidity(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Defines the interface for PreInsertionValidity.
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineProxy.GetTarget">
      <summary>
            Defines the interface for get target.
            </summary>
      <returns>The MarkdownSyntaxNode.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineProxy.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineProxy.WriteTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Write to text writer.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.InlineSyntaxNode">
      <summary>
             Base implementation of the InlineSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree)">
      <summary>
            Base interface for create instanse.
            </summary>
      <param name="ownerSyntaxTree">The MarkdownSyntaxTree.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.InlineSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.IWritable">
      <summary>
            Base interface for IWritable.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.IWritable.WriteTo(System.IO.TextWriter)">
      <summary>
            Write to text writer.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.LeafBlockSyntaxNode">
      <summary>
            Base implementation of the LeafBlockSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.LeafBlockSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree)">
      <summary>
            The constructor of LeafBlockSyntax class.
            </summary>
      <param name="ownerSyntaxTree">The MarkdownSyntaxTree.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.LeafBlockSyntaxNode.PreInsertionValidity(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Defines the interface for pre insertion validate.
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.LineBreakSyntaxNode">
      <summary>
             Represent the LineBreakSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.LineBreakSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree,Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            The constructor of LineBreakSyntax
            </summary>
      <param name="ownerSyntaxTree">The MarkdownSyntaxTree.</param>
      <param name="source">The SourceText.</param>
      <param name="span">The TextSpan.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.LineBreakSyntaxNode.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the interface for write component to write.
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.LineBreakSyntaxNode.Source">
      <summary>
            Get the source.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.LineBreakSyntaxNode.Span">
      <summary>
            Get the span.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.LineBreakSyntaxNode.Value">
      <summary>
            Get the value.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.LinkDestinationSyntaxNode">
      <summary>
            Represent the LinkDestinationSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.LinkDestinationSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.LinkDestinationSyntaxNode.GetValue">
      <summary>
            Defines the interface for get string value.
            </summary>
      <returns>The string.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.LinkReferenceDefinitionSyntaxNode">
      <summary>
            Represent the LinkReferenceDefinitionSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.LinkReferenceDefinitionSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.LinkReferenceDefinitionSyntaxNode.GetLabel">
      <summary>
            Defines the interface for get label.
            </summary>
      <returns>The TextSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.LinkReferenceDefinitionSyntaxNode.GetDestination">
      <summary>
            Defines the interface for get destination.
            </summary>
      <returns>The LinkDestinationSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.LinkReferenceDefinitionSyntaxNode.GetTitle">
      <summary>
            Defines the interface for get title.
            </summary>
      <returns>The LinkTitleSyntax.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.LinkTitleSyntaxNode">
      <summary>
            Represent the LinkTitleSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.LinkTitleSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.LinkTitleSyntaxNode.GetValue">
      <summary>
            Defines the interface for get string value.
            </summary>
      <returns>The string.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.ListItemMarker">
      <summary>
            Base implementation of the ListItemMarker.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ListItemMarker.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree)">
      <summary>
            The ListItemMarker constructor.
            </summary>
      <param name="ownerSyntaxTree">The MarkdownSyntaxTree.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.ListItemSyntaxNode">
      <summary>
            Represent the ListItemSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ListItemSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree,Aspose.Html.Toolkit.Markdown.Syntax.ListItemMarker)">
      <summary>
            The ListItemSyntaxNode constructor.
            </summary>
      <param name="ownerSyntaxTree">The MarkdownSyntaxTree.</param>
      <param name="marker">The ListItemMarker.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ListItemSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ListItemSyntaxNode.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the interface for write component to write.
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ListItemSyntaxNode.IsTight">
      <summary>
            Get true if is tight.
            </summary>
      <returns>the boolean.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ListItemSyntaxNode.GetMarker">
      <summary>
            Get marker
            </summary>
      <returns>The ListItemMarker.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.ListSyntaxNode">
      <summary>
            Base implementation of the ListSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ListSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree)">
      <summary>
            The ListSyntax constructor.
            </summary>
      <param name="ownerSyntaxTree">The MarkdownSyntaxTree.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ListSyntaxNode.IsTight">
      <summary>
            Defines the interface for get is tight.
            </summary>
      <returns>The boolean value.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownException">
      <summary>
            The Markdown exception
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownException.#ctor(System.String)">
      <summary>
            The MarkdownException constructor.
            </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory">
      <summary>
            Creates objects using CreateInstance
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.AtxHeading(System.String)">
      <summary>
            Creates AtxHeadingSyntaxNode with text content.
            </summary>
      <param name="text">The heading text content.</param>
      <returns>The AtxHeadingSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.AtxHeading(System.String,System.Int32)">
      <summary>
            Creates AtxHeadingSyntaxNode with text content and heading level.
            </summary>
      <param name="text">The heading text content.</param>
      <param name="level">The heading level value.</param>
      <returns>The AtxHeadingSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.AtxHeading(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using AtxHeadingSyntax.CreateInstance
            </summary>
      <param name="opening">The opening token.</param>
      <param name="closing">The closing token.</param>
      <returns>The AtxHeadingSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.HTMLFragment(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Creates objects using HTMLFragmentSyntax.CreateInstance
            </summary>
      <param name="source">The SourceText.</param>
      <param name="span">The TextSpan.</param>
      <returns>The  HTMLFragmentSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.HTMLFragment">
      <summary>
            Creates objects using HTMLFragmentSyntax.CreateInstance
            </summary>
      <returns>The HTMLFragmentSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.AutoLink(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.TextSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,System.Boolean)">
      <summary>
            Creates objects using AutoLinkSyntax.CreateInstance
            </summary>
      <param name="opening">The MarkdownSyntaxToken.</param>
      <param name="content">The TextSyntax.</param>
      <param name="closing">The MarkdownSyntaxToken.</param>
      <param name="mail">The boolean flag.</param>
      <returns>The AutoLinkSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.Token(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Creates objects using MarkdownSyntaxToken.CreateInstance
            </summary>
      <param name="source">The SourceText.</param>
      <param name="span">The TextSpan.</param>
      <returns>The MarkdownSyntaxToken.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.Token(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText)">
      <summary>
            Creates objects using MarkdownSyntaxToken.CreateInstance
            </summary>
      <param name="source">The SourceText.</param>
      <returns>The MarkdownSyntaxToken.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.Text(System.String)">
      <summary>
            Creates TextSyntax
            </summary>
      <param name="text">The string value.</param>
      <returns>The TextSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.Text(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText)">
      <summary>
            Create the TextSyntax from SourceText.
            </summary>
      <param name="source">The SourceText.</param>
      <returns>The TextSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.Text(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Create the TextSyntax from SourceText and TextSpan.
            </summary>
      <param name="source">The SourceText.</param>
      <param name="span">The TextSpan.</param>
      <returns>The TextSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.EscapedCharacter(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Creates objects using EscapedCharacterSyntax.CreateEscapedCharacter
            </summary>
      <param name="source">The SourceText.</param>
      <param name="span">The TextSpan.</param>
      <returns>The TextSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.InlineProxy(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Creates objects using Syntax.InlineProxy.CreateInstance
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
      <returns>The InlineProxy.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.BlockProxy(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Creates objects using Syntax.BlockProxy.CreateInstance
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
      <returns>The InlineProxy.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.HugoYamlBasedFrontMatter(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.TextSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using HugoYamlBasedFrontMatterSyntax.CreateInstance
            </summary>
      <param name="opening">The opening MarkdownSyntaxToken.</param>
      <param name="text">The TextSyntax.</param>
      <param name="closing">The closing MarkdownSyntaxToken.</param>
      <returns>The HugoYamlBasedFrontMatterSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.HugoShortCode(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using HugoShortCodeSyntax.CreateInstance
            </summary>
      <param name="opening">The opening MarkdownSyntaxToken.</param>
      <param name="closingMark">The closing mark MarkdownSyntaxToken.</param>
      <param name="closing">The closing MarkdownSyntaxToken.</param>
      <returns>The HugoShortCodeSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.HugoShortCodeParameter(Aspose.Html.Toolkit.Markdown.Syntax.TextSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.TextSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using ShortCodeParameterSyntax.CreateInstance
            </summary>
      <param name="name">The TextSyntax.</param>
      <param name="equalSign">The equal sign.</param>
      <param name="quotationOpen">The quotationOpen.</param>
      <param name="value">The TextSyntax value.</param>
      <param name="quotationClose">The quotationClose.</param>
      <returns>The ShortCodeParameterSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.EmptyLine">
      <summary>
            Creates objects using EmptyLineSyntax.CreateInstance
            </summary>
      <returns>The EmptyLineSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.Whitespace(System.Int32)">
      <summary>
            Create the WhitespaceSyntax.
            </summary>
      <param name="count">The count of white space.</param>
      <returns>The WhitespaceSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.Whitespace(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText)">
      <summary>
            Create the WhitespaceSyntax.
            </summary>
      <param name="source">The SourceText.</param>
      <returns>The WhitespaceSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.Whitespace(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Creates objects using WhitespaceSyntax.CreateWhitespaceInstance
            </summary>
      <param name="source">The SourceText.</param>
      <param name="span">The TextSpan.</param>
      <returns>The WhitespaceSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.ReferenceLink(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.InlineContainerSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.InlineContainerSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using ReferenceLinkSyntax.CreateInstance
            </summary>
      <param name="contentOpening">The contentOpening.</param>
      <param name="content">The InlineContainerSyntax.</param>
      <param name="contentClosing">The contentClosing.</param>
      <param name="labelOpening">The labelOpening.</param>
      <param name="label">The InlineContainerSyntax.</param>
      <param name="labelClosing">The labelClosing.</param>
      <returns>The ReferenceLinkSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.CodeSpan(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using CodeSpanSyntax.CreateInstance
            </summary>
      <param name="opening">The opening token.</param>
      <param name="closing">The closing token.</param>
      <returns>The CodeSpanSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.InlineContainer">
      <summary>
            Creates objects using InlineContainerSyntax.CreateInstance
            </summary>
      <returns>The InlineContainerSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.LinkTitle(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using LinkTitleSyntax.CreateInstance.
            </summary>
      <param name="opening">The opening token.</param>
      <param name="closing">The closing token.</param>
      <returns>The LinkTitleSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.LinkDestination(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using LinkTitleSyntax.CreateInstance.
            </summary>
      <param name="opening">The opening token.</param>
      <param name="closing">The closing token.</param>
      <returns>The LinkDestinationSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.FencedCodeBlock(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.TextSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using FencedCodeBlockSyntax.CreateInstance.
            </summary>
      <param name="opening">The opening token.</param>
      <param name="info">The TextSyntax.</param>
      <param name="closing">The closing token.</param>
      <returns>The FencedCodeBlockSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.Emphasis(Aspose.Html.Toolkit.Markdown.Syntax.Emphasis)">
      <summary>
            Create the EmphasisSyntax.
            </summary>
      <param name="emphasis">The emphasis.</param>
      <returns>The EmphasisSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.Emphasis(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using EmphasisSyntax.CreateInstance.
            </summary>
      <param name="opening">The opening token.</param>
      <param name="closing">The closing token.</param>
      <returns>The EmphasisSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.EmphasisOpening(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Create the MarkdownSyntaxToken.
            </summary>
      <param name="source">The SourceText.</param>
      <param name="span">The TextSpan.</param>
      <returns>The MarkdownSyntaxToken.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.EmphasisClosing(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Create EmphasisClosing.
            </summary>
      <param name="source">The SourceText.</param>
      <param name="span">The TextSpan.</param>
      <returns>The MarkdownSyntaxToken.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.HardBreakingTag(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Create HardBreakingTag.
            </summary>
      <param name="source">The SourceText.</param>
      <param name="span">The TextSpan.</param>
      <returns>The MarkdownSyntaxToken.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.IndentedCode(System.Int32)">
      <summary>
            Creates objects using IndentedCodeBlockSyntax.CreateInstance.
            </summary>
      <param name="reservedSpaces">The reservedSpaces.</param>
      <returns>The IndentedCodeBlockSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.InlineImage(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.LinkDestinationSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.LinkTitleSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using InlineImageSyntax.CreateInstance.
            </summary>
      <param name="contentOpening">The contentOpening.</param>
      <param name="contentClosing">The contentClosing.</param>
      <param name="declarationOpening">The declarationOpening.</param>
      <param name="destination">The destination.</param>
      <param name="title">The title.</param>
      <param name="declarationClosing">The declarationClosing.</param>
      <returns>The InlineImageSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.ReferenceImage(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.InlineContainerSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using ReferenceImageSyntax.CreateInstance.
            </summary>
      <param name="contentOpening">The contentOpening.</param>
      <param name="contentClosing">The contentClosing.</param>
      <param name="labelOpening">The labelOpening.</param>
      <param name="label">The label.</param>
      <param name="labelClosing">The labelClosing.</param>
      <returns>The ReferenceImageSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.BlockQuote">
      <summary>
            Creates objects using BlockQuoteSyntax.CreateInstance.
            </summary>
      <returns>The BlockQuoteSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.InlineLink(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.LinkDestinationSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.LinkTitleSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using InlineLinkSyntax.CreateInstance.
            </summary>
      <param name="contentOpening">The contentOpening.</param>
      <param name="contentClosing">The contentClosing.</param>
      <param name="declarationOpening">The declarationOpening.</param>
      <param name="destination">The destination.</param>
      <param name="title">The title.</param>
      <param name="declarationClosing">The declarationClosing.</param>
      <returns>The InlineLinkSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.LinkReferenceDefinition(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.TextSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.LinkDestinationSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.LinkTitleSyntaxNode)">
      <summary>
            Creates objects using LinkReferenceDefinitionSyntax.CreateInstance.
            </summary>
      <param name="labelOpening">The labelOpening.</param>
      <param name="label">The label.</param>
      <param name="labelClosing">The labelClosing.</param>
      <param name="destination">The destination.</param>
      <param name="title">The title.</param>
      <returns>The LinkReferenceDefinitionSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.Paragraph(System.Boolean)">
      <summary>
            Creates objects using ParagraphSyntax.CreateInstance.
            </summary>
      <param name="endsWithLineBreak">The endsWithLineBreak</param>
      <returns>The ParagraphSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.SetextHeading(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using SetextHeadingSyntax.CreateInstance.
            </summary>
      <param name="tag">The MarkdownSyntaxToken.</param>
      <returns>The SetextHeadingSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.OrderedList">
      <summary>
             Creates objects using OrderedListSyntax.CreateInstance.
            </summary>
      <returns>The OrderedListSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.TableCell">
      <summary>
            Creates objects using TableCellSyntax.CreateInstance.
            </summary>
      <returns>The TableCellSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.TableDelimiter(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using TableDelimiterSyntax.CreateInstance.
            </summary>
      <param name="delimiter">The delimiter.</param>
      <returns>The TableDelimiterSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.TableRow">
      <summary>
            Creates objects using TableRowSyntax.CreateInstance.
            </summary>
      <returns>The TableRowSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.ListItemMarker(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using OrderedListItemMarker.CreateInstance.
            </summary>
      <param name="number">The number.</param>
      <param name="delimiter">The delimiter.</param>
      <returns>The ListItemMarker.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.ListItemMarker(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using UnorderedListItemMarker.CreateInstance.
            </summary>
      <param name="token">The token.</param>
      <returns>The ListItemMarker.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.ListItem(Aspose.Html.Toolkit.Markdown.Syntax.ListItemMarker)">
      <summary>
             Creates objects using ListItemSyntax.CreateInstance.
            </summary>
      <param name="marker">The marker.</param>
      <returns>The ListItemSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.UnorderedList">
      <summary>
            Creates objects using UnorderedListSyntax.CreateInstance.
            </summary>
      <returns>The UnorderedListSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.SoftBreak(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Creates objects using SoftBreakSyntax.CreateInstance.
            </summary>
      <param name="source">The SourceText.</param>
      <param name="span">The TextSpan.</param>
      <returns>The SoftBreakSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.Table">
      <summary>
            Creates objects using TableSyntax.CreateInstance.
            </summary>
      <returns>The TableSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.ThematicBreak(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using ThematicBreakSyntax.CreateInstance.
            </summary>
      <param name="tag">The MarkdownSyntaxToken.</param>
      <returns>The ThematicBreakSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.HardBreak(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Creates objects using HardBreakSyntax.CreateInstance.
            </summary>
      <param name="tag">The MarkdownSyntaxToken.</param>
      <param name="source">The SourceText.</param>
      <param name="span">The TextSpan.</param>
      <returns>The HardBreakSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.CharacterReference(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan,System.String)">
      <summary>
            Creates objects using CharacterReferenceSyntax.CreateInstance.
            </summary>
      <param name="source">The SourceText.</param>
      <param name="span">The TextSpan.</param>
      <param name="value">The string value.</param>
      <returns>The CharacterReferenceSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.Trivia(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Creates Whitespace.
            </summary>
      <param name="source">The SourceText.</param>
      <param name="span">The TextSpan.</param>
      <returns>The WhitespaceSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.NewLineTrivia">
      <summary>
            Creates NewLineTrivia.
            </summary>
      <returns>The WhitespaceSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.TaskListItemMarker(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Creates objects using Syntax.TaskListItemMarker.CreateInstance.
            </summary>
      <param name="opening">The opening.</param>
      <param name="label">The label.</param>
      <param name="closing">The closing.</param>
      <returns>The TaskListItemMarker.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxFactory.TaskListItem(Aspose.Html.Toolkit.Markdown.Syntax.ListItemMarker,Aspose.Html.Toolkit.Markdown.Syntax.TaskListItemMarker)">
      <summary>
            Creates objects using TaskListItemSyntax.CreateInstance.
            </summary>
      <param name="marker">The marker.</param>
      <param name="taskItemMarker">The taskItemMarker.</param>
      <returns>The TaskListItemSyntax.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode">
      <summary>
             Base implementation of the MarkdownSyntaxNode.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree)">
      <summary>
            The MarkdownSyntaxNode ctor.
            </summary>
      <param name="ownerSyntaxTree">The MarkdownSyntaxTree.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.WriteTo(System.IO.TextWriter)">
      <summary>
            Write nodes to text writer.
            </summary>
      <param name="writer">The writer.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.GetSyntaxTree">
      <summary>
            Get the syntax tree.
            </summary>
      <returns>The MarkdownSyntaxTree.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.ChildNodes">
      <summary>
            Get the child nodes collection.
            </summary>
      <returns>The NodeList.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.GetLeadingTrivia">
      <summary>
            Get the leading trivia.
            </summary>
      <returns>The TriviaCollection.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.GetTrailingTrivia">
      <summary>
            Get the Trailing trivia.
            </summary>
      <returns>The TriviaCollection.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.AppendChild(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Append child node.
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
      <returns>The MarkdownSyntaxNode.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.RemoveChild(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Remove the child.
            </summary>
      <param name="child">The child.</param>
      <returns>The MarkdownSyntaxNode.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.ReplaceChild(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Replace the child node.
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
      <param name="child">The MarkdownSyntaxNode.</param>
      <returns>The MarkdownSyntaxNode.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.InsertBefore(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Insert before node.
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
      <param name="child">The MarkdownSyntaxNode.</param>
      <returns>The MarkdownSyntaxNode.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.PreInsertionValidity(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            The base interface for PreInsertionValidity
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Accept the visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.WriteTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Write to MarkdownTextWriter.
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            The base interface for WriteComponentsTo
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.ToString">
      <summary>
            Override ToString method.
            </summary>
      <returns>The string.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.Parent">
      <summary>
            Get the parent node.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.FirstChild">
      <summary>
            Get the first child.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.LastChild">
      <summary>
            Get the last child.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.PreviousSibling">
      <summary>
            Get the previous sibling.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode.NextSibling">
      <summary>
            Get ghe next sibling.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNodeFilter">
      <summary>
            Base implementation of the MarkdownSyntaxNodeFilter.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNodeFilter.FILTER_ACCEPT">
      <summary>
            The filter accept constant.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNodeFilter.FILTER_REJECT">
      <summary>
            The filter reject constant.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNodeFilter.FILTER_SKIP">
      <summary>
            The filter skip constant.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNodeFilter.Any">
      <summary>
            The AnyMarkdownSyntaxNodeFilter. 
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNodeFilter.AcceptNode(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Defines the interface for accept node.
            </summary>
      <param name="n">The MarkdownSyntaxNode.</param>
      <returns>The short value.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken">
      <summary>
            Represent the Markdown Syntax Token.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken.GetFullText">
      <summary>
            Defines the interface for get the full text.
            </summary>
      <returns>The string.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken.Span">
      <summary>
            Get the span.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken.Source">
      <summary>
            Get the source text.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken.Text">
      <summary>
            Get the text content of span.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree">
      <summary>
            Represent the Markdown Syntax Tree.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree.#ctor(Aspose.Html.Configuration)">
      <summary>
            Creates the MarkdownSyntaxTree
            </summary>
      <param name="config">The Configuration.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree.#ctor">
      <summary>
            Created the MarkdownSyntaxTree.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree.Save(System.String)">
      <summary>
            Saves the syntax tree to the specified path.
            </summary>
      <param name="path">The string path.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree.Save(System.IO.TextWriter)">
      <summary>
            Saves the syntax tree to the specified writer.
            </summary>
      <param name="writer">The TextWriter.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree.Save(System.IO.Stream)">
      <summary>
            Saves the syntax tree to the specified stream.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for visiting nodes of the syntax tree.
            </summary>
      <param name="visitor">The MarkdownSyntaxVisitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree.CreateNodeIterator(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNodeFilter)">
      <summary>
            Defines the interface for create of the node iterator.
            </summary>
      <param name="filter">The filter.</param>
      <returns>The node iterator.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree.CreateNodeIterator(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Defines the interface for create of the node iterator.
            </summary>
      <param name="root">The MarkdownSyntaxNode.</param>
      <returns>The node iterator.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree.CreateNodeIterator(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNodeFilter)">
      <summary>
            Defines the interface for create of the node iterator.
            </summary>
      <param name="root">The MarkdownSyntaxNode.</param>
      <param name="filter">The MarkdownSyntaxNodeFilter.</param>
      <returns>The node iterator.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree.CreateTreeWalker(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNodeFilter)">
      <summary>
            Defines the interface for create the tree walker.
            </summary>
      <param name="filter">The MarkdownSyntaxNodeFilter.</param>
      <returns>The tree walker.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree.CreateTreeWalker(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Defines the interface for create the tree walker.
            </summary>
      <param name="root">The MarkdownSyntaxNode.</param>
      <returns>The tree walker.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree.CreateTreeWalker(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNodeFilter)">
      <summary>
            Defines the interface for create the tree walker.
            </summary>
      <param name="root">The MarkdownSyntaxNode.</param>
      <param name="filter">The MarkdownSyntaxNodeFilter.</param>
      <returns>The tree walker.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree.SyntaxFactory">
      <summary>
            Get the SyntaxFactory.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor">
      <summary>
            The base class for markdown syntax visitor.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.#ctor">
      <summary>
            The MarkdownSyntaxVisitor ctor.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNodeFilter)">
      <summary>
            The MarkdownSyntaxVisitor ctor.
            </summary>
      <param name="nodeFilter">The MarkdownSyntaxNodeFilter.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.Visit(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree)">
      <summary>
            Defines the interface for visit syntax tree.
            </summary>
      <param name="syntaxTree">The syntax tree.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.Visit(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Defines the interface for visit node.
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.DefaultVisit(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Defines the interface for DefaultVisit
            </summary>
      <param name="parent">The MarkdownSyntaxNode.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitBlock(Aspose.Html.Toolkit.Markdown.Syntax.BlockSyntaxNode)">
      <summary>
            Defines the interface for visit block.
            </summary>
      <param name="block">The block.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitEmptyLine(Aspose.Html.Toolkit.Markdown.Syntax.EmptyLineSyntaxNode)">
      <summary>
            Defines the interface for visit text line.
            </summary>
      <param name="textLine">The text line.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitText(Aspose.Html.Toolkit.Markdown.Syntax.TextSyntaxNode)">
      <summary>
            Defines the interface for visit text syntax.
            </summary>
      <param name="text">The text syntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitEscapedCharacter(Aspose.Html.Toolkit.Markdown.Syntax.EscapedCharacterSyntaxNode)">
      <summary>
            Defines the interface for visit escape character.
            </summary>
      <param name="character">The escape character.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitWhitespace(Aspose.Html.Toolkit.Markdown.Syntax.WhitespaceSyntaxNode)">
      <summary>
            Defines the interface for visit Whitespace Syntax.
            </summary>
      <param name="whitespace">The whitespace.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitSyntaxNode(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Defines the interface for visit node.
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitSyntaxTree(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree)">
      <summary>
            Defines the interface for visit MarkdownSyntaxTree.
            </summary>
      <param name="tree">The MarkdownSyntaxTree.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitParagraph(Aspose.Html.Toolkit.Markdown.Syntax.ParagraphSyntaxNode)">
      <summary>
            Defines the interface for visit paragraph.
            </summary>
      <param name="paragraph">The paragraph.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitAtxHeading(Aspose.Html.Toolkit.Markdown.Syntax.AtxHeadingSyntaxNode)">
      <summary>
            Defines the interface for visit AtxHeadingSyntax.
            </summary>
      <param name="heading">The AtxHeadingSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitSetextHeading(Aspose.Html.Toolkit.Markdown.Syntax.SetextHeadingSyntaxNode)">
      <summary>
            Defines the interface for visit SetextHeadingSyntax.
            </summary>
      <param name="heading">The SetextHeadingSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitThematicBreak(Aspose.Html.Toolkit.Markdown.Syntax.ThematicBreakSyntaxNode)">
      <summary>
            Defines the interface for visit ThematicBreakSyntax.
            </summary>
      <param name="heading">The ThematicBreakSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitEmphasis(Aspose.Html.Toolkit.Markdown.Syntax.EmphasisSyntaxNode)">
      <summary>
            Defines the interface for visit EmphasisSyntax.
            </summary>
      <param name="emphasis">The EmphasisSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitCodeSpan(Aspose.Html.Toolkit.Markdown.Syntax.CodeSpanSyntaxNode)">
      <summary>
            Defines the interface for visit CodeSpanSyntax.
            </summary>
      <param name="codeSpan">The  CodeSpanSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitCharacterReference(Aspose.Html.Toolkit.Markdown.Syntax.CharacterReferenceSyntaxNode)">
      <summary>
            Defines the interface for visit CharacterReferenceSyntax.
            </summary>
      <param name="characterReference">The CharacterReferenceSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitLineBreak(Aspose.Html.Toolkit.Markdown.Syntax.SoftBreakSyntaxNode)">
      <summary>
            Defines the interface for visit SoftBreakSyntax.
            </summary>
      <param name="lineBreak">The SoftBreakSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitLineBreak(Aspose.Html.Toolkit.Markdown.Syntax.HardBreakSyntaxNode)">
      <summary>
             Defines the interface for visit HardBreakSyntax.
            </summary>
      <param name="lineBreak">The HardBreakSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitList(Aspose.Html.Toolkit.Markdown.Syntax.UnorderedListSyntaxNode)">
      <summary>
            Defines the interface for visit UnorderedListSyntax.
            </summary>
      <param name="list">The UnorderedListSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitList(Aspose.Html.Toolkit.Markdown.Syntax.OrderedListSyntaxNode)">
      <summary>
            Defines the interface for visit OrderedListSyntax.
            </summary>
      <param name="list">The OrderedListSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitListItem(Aspose.Html.Toolkit.Markdown.Syntax.ListItemSyntaxNode)">
      <summary>
            Defines the interface for visit ListItemSyntax.
            </summary>
      <param name="listItem">The ListItemSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitBlockQuote(Aspose.Html.Toolkit.Markdown.Syntax.BlockQuoteSyntaxNode)">
      <summary>
            Defines the interface for visit BlockQuoteSyntax.
            </summary>
      <param name="blockQuote">The BlockQuoteSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitIndentedCodeBlock(Aspose.Html.Toolkit.Markdown.Syntax.IndentedCodeBlockSyntaxNode)">
      <summary>
            Defines the interface for visit IndentedCodeBlockSyntax.
            </summary>
      <param name="codeBlock">The IndentedCodeBlockSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitFencedCodeBlock(Aspose.Html.Toolkit.Markdown.Syntax.FencedCodeBlockSyntaxNode)">
      <summary>
            Defines the interface for visit FencedCodeBlockSyntax.
            </summary>
      <param name="codeBlock">The FencedCodeBlockSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitTable(Aspose.Html.Toolkit.Markdown.Syntax.TableSyntaxNode)">
      <summary>
            Defines the interface for visit TableSyntax.
            </summary>
      <param name="table">The TableSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitLink(Aspose.Html.Toolkit.Markdown.Syntax.InlineLinkSyntaxNode)">
      <summary>
             Defines the interface for visit InlineLinkSyntax.
            </summary>
      <param name="link">The InlineLinkSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitReferenceLink(Aspose.Html.Toolkit.Markdown.Syntax.ReferenceLinkSyntaxNode)">
      <summary>
            Defines the interface for visit ReferenceLinkSyntax.
            </summary>
      <param name="link">The ReferenceLinkSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitImage(Aspose.Html.Toolkit.Markdown.Syntax.InlineImageSyntaxNode)">
      <summary>
            Defines the interface for visit InlineImageSyntax.
            </summary>
      <param name="image">The InlineImageSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitReferenceImage(Aspose.Html.Toolkit.Markdown.Syntax.ReferenceImageSyntaxNode)">
      <summary>
            Defines the interface for visit ReferenceImageSyntax.
            </summary>
      <param name="image">The ReferenceImageSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitLinkReferenceDefinition(Aspose.Html.Toolkit.Markdown.Syntax.LinkReferenceDefinitionSyntaxNode)">
      <summary>
            Defines the interface for visit LinkReferenceDefinitionSyntax.
            </summary>
      <param name="definition">The LinkReferenceDefinitionSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitLink(Aspose.Html.Toolkit.Markdown.Syntax.AutoLinkSyntaxNode)">
      <summary>
            Defines the interface for visit AutoLinkSyntax.
            </summary>
      <param name="link">The AutoLinkSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitHtml(Aspose.Html.Toolkit.Markdown.Syntax.HTMLFragmentSyntax)">
      <summary>
            Defines the interface for visit HTMLFragmentSyntax.
            </summary>
      <param name="html">The HTMLFragmentSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor.VisitNodeList(Aspose.Html.Toolkit.Markdown.Syntax.NodeList)">
      <summary>
            Defines the interface for visit NodeList.
            </summary>
      <param name="list">The NodeList.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter">
      <summary>
            Represent the Markdown text writer
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of an MarkdownTextWriter.
            </summary>
      <param name="stream">The initial stream.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter.#ctor(System.String)">
      <summary>
            Initializes a new instance of an MarkdownTextWriter.
            </summary>
      <param name="path">The initial file path.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter.#ctor(System.String,System.Boolean)">
      <summary>
            Initializes a new instance of an MarkdownTextWriter.
            </summary>
      <param name="path">The initial file path.</param>
      <param name="append">The boolean append flag.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter.#ctor(System.IO.TextWriter)">
      <summary>
            Initializes a new instance of an MarkdownTextWriter.
            </summary>
      <param name="writer">The TextWriter.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter.Flush">
      <summary>
            Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter.Write(System.Char)">
      <summary>
            Defines the interface for write character.
            </summary>
      <param name="value">The character value.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter.Dispose(System.Boolean)">
      <summary>
            The defines the interface for Dispose
            </summary>
      <param name="disposing">The boolean disposing.</param>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter.Encoding">
      <summary>
            Get the encoding.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.MultiLineContainerBlockSyntaxNode">
      <summary>
            Base implementation of an MultiLine Container Block Syntax Node
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MultiLineContainerBlockSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree)">
      <summary>
            The MultiLineContainerBlockSyntaxNode ctor.
            </summary>
      <param name="ownerSyntaxTree">The MarkdownSyntaxTree.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.MultiLineContainerBlockSyntaxNode.GetLinesLeadingTrivia">
      <summary>
            Defines the interface for get lines leading trivia.
            </summary>
      <returns>the SyntaxNodeCollection</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.NodeIterator">
      <summary>
            The nodes iterator.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.NodeIterator.NextNode">
      <summary>
            Defines the interface for get the next node.
            </summary>
      <returns>The markdown syntax node.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.NodeIterator.PreviousNode">
      <summary>
            Defines the interface for get the previous node.
            </summary>
      <returns>The markdown syntax node.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.NodeIterator.Detach">
      <summary>
            The detach() method, when invoked, must do nothing
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.NodeIterator.Dispose(System.Boolean)">
      <summary>
            Overrides the Dispose interface
            </summary>
      <param name="disposing">The disposing.</param>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.NodeIterator.ReferenceNode">
      <summary>
            Get the reference node.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.NodeIterator.PointerBeforeReferenceNode">
      <summary>
            Return the true if pointer before reference node.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.NodeList`1">
      <summary>
            Base implementation of the NodeList.
            </summary>
      <typeparam name="T">The T type.</typeparam>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.NodeList`1.GetEnumerator">
      <summary>
            Gets the nodes in the collection.
            </summary>
      <returns>The IEnumerator.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.NodeList`1.WriteTo(System.IO.TextWriter)">
      <summary>
            Write nodes to text writer.
            </summary>
      <param name="writer">The text writer.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.NodeList`1.Get(System.Int32)">
      <summary>
            Gets the node at the given index.
            </summary>
      <param name="index">The index of the node to get.</param>
      <returns>The node at the given index.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.NodeList`1.Count">
      <summary>
            Gets the number of node in the list.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.NodeList">
      <summary>
            Base implementation of the NodeList.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.OrderedListItemMarker">
      <summary>
            Represent the ordered list item marker.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.OrderedListItemMarker.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the WriteComponentsTo interface
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.OrderedListItemMarker.GetIndex">
      <summary>
            Defines the interface for get of the get index.
            </summary>
      <returns>The index.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.OrderedListItemMarker.GetDelimiter">
      <summary>
            Defines the interface for get of the delimiter.
            </summary>
      <returns>The string delimiter.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.OrderedListSyntaxNode">
      <summary>
            Represent the Ordered list syntax.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.OrderedListSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
             Defines the interface for accept of the visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.OrderedListSyntaxNode.PreInsertionValidity(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Defines the PreInsertionValidity interface
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.OrderedListSyntaxNode.GetStart">
      <summary>
            Defines the interface for get the start index.
            </summary>
      <returns>The index.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.OrderedListSyntaxNode.GetDelimiter">
      <summary>
            Defines the interface for get of the delimiter.
            </summary>
      <returns>The string delimiter.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.ParagraphSyntaxNode">
      <summary>
            Represent the paragraph syntax node.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ParagraphSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
             Defines the interface for accept of the visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ParagraphSyntaxNode.GetContent">
      <summary>
            Defines the interface for get content.
            </summary>
      <returns>The InlineContainer syntax.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.ReferenceImageSyntaxNode">
      <summary>
            The reference image syntax.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ReferenceImageSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept of the visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ReferenceImageSyntaxNode.GetLabel">
      <summary>
            Defines the interface for get label.
            </summary>
      <returns>The string label.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ReferenceImageSyntaxNode.GetAltText">
      <summary>
            Defines the interface for get of the alternate text.
            </summary>
      <returns>The alternate text.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.ReferenceLinkSyntaxNode">
      <summary>
            Represent the reference link syntax.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ReferenceLinkSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept of the visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ReferenceLinkSyntaxNode.GetLabel">
      <summary>
            Defines the interface for get label.
            </summary>
      <returns>The InlineContainer syntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ReferenceLinkSyntaxNode.GetContent">
      <summary>
            Defines the interface for get content.
            </summary>
      <returns>The InlineContainer syntax.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.SetextHeadingSyntaxNode">
      <summary>
            Represent the Setext heading syntax node.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.SetextHeadingSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept of the visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.SetextHeadingSyntaxNode.Level">
      <summary>
            Get the level of current syntax.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.SoftBreakSyntaxNode">
      <summary>
            Represent the soft breaking syntax.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.SoftBreakSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept of the visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.SyntaxNodeCollection`1">
      <summary>
             Represents a collection of syntax nodes.
            </summary>
      <typeparam name="T">The type of the collection values.</typeparam>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.SyntaxNodeCollection`1.GetEnumerator">
      <summary>
            Gets the values in the collection.
            </summary>
      <returns>An enumerator over the values in the collection.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.SyntaxNodeCollection`1.IndexOf(`0)">
      <summary>
            Gets the index of the given item.
            </summary>
      <param name="item">The item to get the index of.</param>
      <returns>The index of the item in the collection -or- -1 if the item is not found.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.SyntaxNodeCollection`1.Insert(System.Int32,`0)">
      <summary>
            Inserts the given item at the specified index.
            </summary>
      <param name="index">The index to insert the item.</param>
      <param name="item">The item to insert.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.SyntaxNodeCollection`1.RemoveAt(System.Int32)">
      <summary>
            Removes the item at the given index.
            </summary>
      <param name="index">The index of the item to remove.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.SyntaxNodeCollection`1.Add(`0)">
      <summary>
            Adds the given item to the collection.
            </summary>
      <param name="item">The item of T type.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.SyntaxNodeCollection`1.Clear">
      <summary>
            Removes all items from the collection.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.SyntaxNodeCollection`1.Contains(`0)">
      <summary>
            Determines whether the given item exists in the collection.
            </summary>
      <param name="item">The item to look for.</param>
      <returns>True if the item exists in the collection; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.SyntaxNodeCollection`1.CopyTo(`0[],System.Int32)">
      <summary>
            Copy items in this collection to array, starting at arrayIndex
            </summary>
      <param name="array">array to add items to</param>
      <param name="arrayIndex">index to start at</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.SyntaxNodeCollection`1.Remove(`0)">
      <summary>
            Removes the item from the collection.
            </summary>
      <param name="item">The item to remove.</param>
      <returns>True if the item was found and removed; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.SyntaxNodeCollection`1.Get(System.Int32)">
      <summary>
            Gets the item at the given index.
            </summary>
      <param name="index">The index of the item to get.</param>
      <returns>The item at the given index.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.SyntaxNodeCollection`1.Item(System.Int32)">
      <summary>
              Gets or sets the value at the given index.
            </summary>
      <param name="index">The index of the value to get.</param>
      <returns>The value at the given index.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.SyntaxNodeCollection`1.Count">
      <summary>
            Gets the number of values in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.SyntaxNodeCollection`1.IsReadOnly">
      <summary>
            Get the readonly flag.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.TableCellSyntaxNode">
      <summary>
            Represent the table cell syntax node.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TableCellSyntaxNode.GetValue">
      <summary>
            Defines the interface for get string value.
            </summary>
      <returns>The string value.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.TableDelimiterSyntaxNode">
      <summary>
            Represent the table delimiter syntax node.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TableDelimiterSyntaxNode.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the interface for write component to writer.
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.TableRowSyntaxNode">
      <summary>
            The table row syntax node.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TableRowSyntaxNode.GetCells">
      <summary>
            Defines the interface for get cells.
            </summary>
      <returns>The sequence of the cells.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TableRowSyntaxNode.AppendCell(Aspose.Html.Toolkit.Markdown.Syntax.TableCellSyntaxNode)">
      <summary>
            Defines the interface for append of the cell.
            </summary>
      <param name="cell">The TableCellSyntax.</param>
      <returns>The table syntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TableRowSyntaxNode.AppendDelimiter(Aspose.Html.Toolkit.Markdown.Syntax.TableDelimiterSyntaxNode)">
      <summary>
            Defines the interface for append delimiter.
            </summary>
      <param name="delimiter">The delimiter.</param>
      <returns>The table delimiter syntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TableRowSyntaxNode.PreInsertionValidity(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Defines the interface for PreInsertionValidity
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.TableSyntaxNode">
      <summary>
            The TableSyntax class node.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TableSyntaxNode.AppendRow(Aspose.Html.Toolkit.Markdown.Syntax.TableRowSyntaxNode)">
      <summary>
            Defines the interface for append row.
            </summary>
      <param name="row">The TableRowSyntax.</param>
      <returns>The table syntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TableSyntaxNode.PreInsertionValidity(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Defines the PreInsertionValidity interface.
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TableSyntaxNode.GetHeader">
      <summary>
            Defines the interface for get table header.
            </summary>
      <returns>The table header.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TableSyntaxNode.GetBodyRows">
      <summary>
            Defines the interface for get body rows.
            </summary>
      <returns>The body rows.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TableSyntaxNode.GetAlignment">
      <summary>
            Defines the interface for get aligment.
            </summary>
      <returns>The sequence of string.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TableSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept of the visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.TaskListItemMarker">
      <summary>
            The task list item marker.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TaskListItemMarker.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the interface WriteComponentsTo
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TaskListItemMarker.IsChecked">
      <summary>
            Defines the interface for get checked status.
            </summary>
      <returns>The boolean.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.TaskListItemSyntaxNode">
      <summary>
            The task list item syntax node.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TaskListItemSyntaxNode.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the interface for write component to write.
            </summary>
      <param name="writer">The MarkdownTextWriter</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TaskListItemSyntaxNode.IsChecked">
      <summary>
            Defines the interface for get checked status.
            </summary>
      <returns>The boolean.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.TextSyntaxNode">
      <summary>
            Implemented the text syntax node.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TextSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree,Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Defines the TextSyntax constructor.
            </summary>
      <param name="ownerSyntaxTree">The MarkdownSyntaxTree.</param>
      <param name="source">The SourceText.</param>
      <param name="span">The TextSpan.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TextSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The MarkdownSyntaxVisitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TextSyntaxNode.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the interface for write component to write.
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.TextSyntaxNode.Source">
      <summary>
            Return the source text.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.TextSyntaxNode.Span">
      <summary>
            Defines the interface for get span.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.TextSyntaxNode.Value">
      <summary>
            Defines the property for get string value.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.ThematicBreakSyntaxNode">
      <summary>
            Imlemented the Thematic Break Syntax Node.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ThematicBreakSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for Accept visitor.
            </summary>
      <param name="visitor">The MarkdownSyntaxVisitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.ThematicBreakSyntaxNode.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the interface for write component to writer.
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Traversal">
      <summary>
            The abstract class Traversal
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Traversal.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNodeFilter)">
      <summary>
            Defines the Tracersal constructor.
            </summary>
      <param name="root">The MarkdownSyntaxNode.</param>
      <param name="filter">The MarkdownSyntaxNodeFilter.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Traversal.Dispose">
      <summary>
            Defines the interface for dispose.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Traversal.AcceptNode(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Defines the interface for Accept node.
            </summary>
      <param name="n">The MarkdownSyntaxNode.</param>
      <returns>The short value.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Traversal.Dispose(System.Boolean)">
      <summary>
            Defines the interface for dispose.
            </summary>
      <param name="disposing">The disposing.</param>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Traversal.Root">
      <summary>
            Defines the interface for get Root node.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Traversal.Filter">
      <summary>
            Defines the interface for get Filter.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.TreeWalker">
      <summary>
            A tree walker.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TreeWalker.ParentNode">
      <summary>
            Defines the interface for get parent node.
            </summary>
      <returns>The MarkdownSyntaxNode.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TreeWalker.FirstChild">
      <summary>
            Defines the interface for get first child node.
            </summary>
      <returns>The MarkdownSyntaxNode.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TreeWalker.LastChild">
      <summary>
            Defines the interface for get last child node.
            </summary>
      <returns>The MarkdownSyntaxNode.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TreeWalker.PreviousSibling">
      <summary>
            Defines the interface for get previous sibling node.
            </summary>
      <returns>The MarkdownSyntaxNode.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TreeWalker.NextSibling">
      <summary>
            Defines the interface for get next sibling node.
            </summary>
      <returns>The MarkdownSyntaxNode.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TreeWalker.PreviousNode">
      <summary>
            Defines the interface for get previous node.
            </summary>
      <returns>The MarkdownSyntaxNode.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.TreeWalker.NextNode">
      <summary>
            Defines the interface for get next node.
            </summary>
      <returns>The MarkdownSyntaxNode.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.TreeWalker.CurrentNode">
      <summary>
            The Current node property
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.TriviaCollection">
      <summary>
            A collection of trivia.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.UnorderedListItemMarker">
      <summary>
            Represent the unordered list item syntax.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.UnorderedListItemMarker.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the interface for write component to writer.
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.UnorderedListSyntaxNode">
      <summary>
            Represent the unordered list syntax node.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.UnorderedListSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for visiting nodes of the syntax.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.UnorderedListSyntaxNode.PreInsertionValidity(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Defines the interface for PreInsertionValidity
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.UnorderedListSyntaxNode.GetMarker">
      <summary>
            Defines the interface to get of the marker.
            </summary>
      <returns>The string value.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.WhitespaceSyntaxNode">
      <summary>
            Represent the whitespace syntax node.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.WhitespaceSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for visiting nodes of the syntax.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText">
      <summary>
            Base class implements the SourceText.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.Dispose">
      <summary>
            Defines the Dispose interface.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.From(System.String)">
      <summary>
            Define the interface for get SourceText from string.
            </summary>
      <param name="text">The string text.</param>
      <returns>The SourceText.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.From(System.String,System.Text.Encoding)">
      <summary>
            Define the interface for get SourceText from string and encoding.
            </summary>
      <param name="text">The string text.</param>
      <param name="encoding">The encoding.</param>
      <returns>The SourceText.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.From(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText[])">
      <summary>
            Define the interface for get SourceText from array of the source.
            </summary>
      <param name="source">The SourceText.</param>
      <returns>The SourceText.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)">
      <summary>
            Define the interface for get SourceText from array of the source.
            </summary>
      <param name="sourceIndex">The sourceIndex.</param>
      <param name="destination">The destination.</param>
      <param name="destinationIndex">The destinationIndex.</param>
      <param name="count">The integer count.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.GetText">
      <summary>
            Define the interface for get Text.
            </summary>
      <returns>The SourceText.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.GetText(Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Define the interface for get Text.
            </summary>
      <param name="span">The TextSpan.</param>
      <returns>The SourceText.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.GetText(System.Int32)">
      <summary>
            Define the interface for get Text.
            </summary>
      <param name="start">The int start.</param>
      <returns>The SourceText.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The index is negative -or- larger than the length.</exception>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.ToString">
      <summary>
            Override the ToString() method.
            </summary>
      <returns>The string.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.ToString(System.Int32)">
      <summary>
            Override the ToString() method.
            </summary>
      <param name="start">The integer start value.</param>
      <returns>The string result.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The index is negative -or- larger than the length.</exception>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.ToString(System.Int32,System.Int32)">
      <summary>
            Defines the interface ToString()
            </summary>
      <param name="start">The start position.</param>
      <param name="length">The length.</param>
      <returns>The string.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.ToString(Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Defines the interface ToString()
            </summary>
      <param name="span">The TextSpan.</param>
      <returns>The string.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.Dispose(System.Boolean)">
      <summary>
            Defines the base interface for Dispose
            </summary>
      <param name="disposing">The boolean disposing value.</param>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.Encoding">
      <summary>
            Get encoding.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.Length">
      <summary>
            Get the length.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.Item(System.Int32)">
      <summary>
            Gets  the value at the given index.
            </summary>
      <param name="position">The position.</param>
      <returns>The char.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.Span">
      <summary>
            Get the span.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText.Lines">
      <summary>
            Get the Lines collection.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceTextReader">
      <summary>
            Represents the SourceTextReader.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceTextReader.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText)">
      <summary>
            Create the SourceTextReader
            </summary>
      <param name="source">The source.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceTextReader.Dispose">
      <summary>
            Defines the Dispose interface.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceTextReader.Advance">
      <summary>
            Increment the position.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceTextReader.Back">
      <summary>
            The decrement position.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceTextReader.Advance(System.Int32)">
      <summary>
            The increment position on N 
            </summary>
      <param name="n">The number.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceTextReader.Next">
      <summary>
            Get the next character and advance position.
            </summary>
      <returns>The character value.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceTextReader.Peek">
      <summary>
            Get the character on position or Character.Null
            </summary>
      <returns>the character on position or Character.Null</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceTextReader.Peek(System.Int32)">
      <summary>
            Get the char.
            </summary>
      <param name="delta">The delta.</param>
      <returns>The char at the positon + delta or Character.Null</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceTextReader.Reset(System.Int32)">
      <summary>
            Reset position to index
            </summary>
      <param name="index">The index.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceTextReader.GetLineReader(System.Boolean)">
      <summary>
            Get the SourceTextReader
            </summary>
      <param name="autoSync">The autosync.</param>
      <returns>The SourceTextReader.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceTextReader.Source">
      <summary>
            Get rhe source.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceTextReader.Position">
      <summary>
            Get the position.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextLine">
      <summary>
            Represent the TextLine.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextLine.ToString">
      <summary>
            Override the ToString
            </summary>
      <returns>The string.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextLine.Text">
      <summary>
            Get the Text.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextLine.LineNumber">
      <summary>
            Get the LineNumber.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextLine.Start">
      <summary>
            Get the start position.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextLine.End">
      <summary>
            Get the end position.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextLine.LineBreakLength">
      <summary>
            Get the line break length.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextLineCollection">
      <summary>
            Represents the TextLineCollection.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextLineCollection.IndexOf(System.Int32)">
      <summary>
            Gets the index of the given position.
            </summary>
      <param name="position">The position</param>
      <returns>The index of the collection in the dictionary -or- -1 if the position is not found.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
      </exception>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan">
      <summary>
            Represents the text span.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.#ctor(System.Int32,System.Int32)">
      <summary>
            Create the TextSpan
            </summary>
      <param name="start">The start.</param>
      <param name="length">The length.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Throw if arguments is out of range.</exception>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.IsEmpty">
      <summary>
            Return true if length ==0.
            </summary>
      <returns>The boolean value.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.op_Equality(Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Override the == operator.
            </summary>
      <param name="left">The left text span.</param>
      <param name="right">The right text span.</param>
      <returns>True if the left equal the right.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.op_Inequality(Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Overrides the != operator
            </summary>
      <param name="left">The left text span.</param>
      <param name="right">The right text span.</param>
      <returns>True if the left not equal the right.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.Combine(Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Combines the text spans
            </summary>
      <param name="left">The left text span.</param>
      <param name="right">The right text span.</param>
      <returns>Combined the text span.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.Create(System.Int32,System.Int32)">
      <summary>
            Create the TextSpan
            </summary>
      <param name="start">The start position.</param>
      <param name="length">The length.</param>
      <returns>The TextSpan.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.CreateFromStartEnd(System.Int32,System.Int32)">
      <summary>
            Create the TextSpan
            </summary>
      <param name="start">The start position.</param>
      <param name="end">The end position.</param>
      <returns>The TextSpan.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.CreateEmpty">
      <summary>
            Create the empty text span.
            </summary>
      <returns>The TextSpan.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.CreateEmpty(System.Int32)">
      <summary>
            Create empty TextSpan from start position.
            </summary>
      <param name="start">The start position.</param>
      <returns>The TextSpan.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.CompareTo(Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Compare with other TextSpan
            </summary>
      <param name="other">The other TextSpan.</param>
      <returns>The start position of difference.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.Equals(Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan)">
      <summary>
            Compare with other TextSpan
            </summary>
      <param name="other">The other TextSpan</param>
      <returns>The if both TextSpan are equal.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.Equals(System.Object)">
      <summary>
            Compare with other object
            </summary>
      <param name="obj">The other object</param>
      <returns>The if both TextSpan are equal.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.GetHashCode">
      <summary>
            Get the HashCode
            </summary>
      <returns>The hashcode.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.ToString">
      <summary>
            Get ToString() override
            </summary>
      <returns>The result string.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.Start">
      <summary>
            Get the Start index.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.End">
      <summary>
            Get the End index.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan.Length">
      <summary>
            Get the length.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockClosingReason">
      <summary>
            Defines the BlockClosingReason enum.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockClosingReason.BlankLine">
      <summary>
            The BlankLine
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockClosingReason.Force">
      <summary>
            The Force value
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor">
      <summary>
            Defines the BlockSyntaxDescriptor.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor.HasAttribute(System.String)">
      <summary>
            Defines the interface for check Has Attribute
            </summary>
      <param name="name">The string name.</param>
      <returns>The boolean.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor.GetAttributeValue``1(System.String)">
      <summary>
            Defines the interface for get the Attribute
            </summary>
      <typeparam name="T">The typeparam.</typeparam>
      <param name="name">The string name.</param>
      <returns>The T type value.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor.SetAttributeValue``1(System.String,``0)">
      <summary>
            Defines the interface for set attribute.
            </summary>
      <typeparam name="T">The T type.</typeparam>
      <param name="name">The string name.</param>
      <param name="value">The T value.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor.GetAttributes">
      <summary>
            Defines the interface for get attribute.
            </summary>
      <returns>The IEnumerable.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor.AppendInline(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText)">
      <summary>
            Defines the interface for Append Inline.
            </summary>
      <param name="text">The SourceText.</param>
      <returns>The BlockSyntaxDescriptor.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor.GetContent">
      <summary>
            Defines the interface for get content.
            </summary>
      <returns>The ICollection.
            </returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor.Delete">
      <summary>
            Defines the interface for Delete.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor.Close">
      <summary>
            Defines the interface for Close.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor.ToString">
      <summary>
            Override the ToString interface.
            </summary>
      <returns>The string.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor.Block">
      <summary>
            Get the Block
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor.Parser">
      <summary>
            Get the Parser.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.DelimiterRun">
      <summary>
            Defines the DelimiterRun
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.DelimiterRun.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.Text.SourceText,Aspose.Html.Toolkit.Markdown.Syntax.Text.TextSpan,Aspose.Html.Toolkit.Markdown.Syntax.Parser.DelimiterState)">
      <summary>
            Create the DelimiterRun 
            </summary>
      <param name="source">The SourceText.</param>
      <param name="span">The TextSpan.</param>
      <param name="state">The DelimiterState.</param>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.DelimiterRun.State">
      <summary>
            Get and set the State.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.DelimiterRun.Length">
      <summary>
            Get the Length.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.DelimiterRun.Source">
      <summary>
            Get the Source.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.DelimiterRun.Span">
      <summary>
            Get and Set the Span.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.DelimiterRun.Text">
      <summary>
            Get the Text.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.DelimiterState">
      <summary>
            Defines the DelimiterState enum.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.DelimiterState.Undefined">
      <summary>
            The Undefined
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.DelimiterState.Active">
      <summary>
            The Active
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.DelimiterState.Closer">
      <summary>
            The Closer
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.DelimiterState.Opener">
      <summary>
            The Opener
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext">
      <summary>
            Defines the IBlockParsingContext interface.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext.Push(Aspose.Html.Toolkit.Markdown.Syntax.BlockSyntaxNode)">
      <summary>
            Defines the Push method.
            </summary>
      <param name="block">The block.</param>
      <returns>The BlockSyntaxDescriptor.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext.GetOpenBlocks">
      <summary>
            Defines the GetOpenBlocks.
            </summary>
      <returns>The collection of BlockSyntaxDescriptor.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext.Peak">
      <summary>
            Defines the Peak method.
            </summary>
      <returns>The BlockSyntaxDescriptor.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext.Delete(Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor)">
      <summary>
            Defines the Delete method.
            </summary>
      <param name="head">The BlockSyntaxDescriptor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext.Close(Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor,Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockClosingReason)">
      <summary>
            Defines the Close method.
            </summary>
      <param name="head">The BlockSyntaxDescriptor.</param>
      <param name="reason">The BlockClosingReason.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext.Close(Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockClosingReason)">
      <summary>
            Defines the Close method.
            </summary>
      <param name="reason">The BlockClosingReason.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext.GetBlockSyntaxParsers">
      <summary>
            Defines the GetBlockSyntaxParsers method.
            </summary>
      <returns>The IEnumerable.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext.GetInlineSyntaxParsers">
      <summary>
            Defines the GetInlineSyntaxParsers method.
            </summary>
      <returns>The IEnumerable.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext.Source">
      <summary>
            Get the Source.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext.Reader">
      <summary>
            Get the Reader.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext.Instruction">
      <summary>
            Get the Instruction.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext.SyntaxFactory">
      <summary>
            Get the SyntaxFactory.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlineEmphasisPostProcessing">
      <summary>
            Defines the IInlineEmphasisPostProcessing interface.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlineLinkPostProcessing">
      <summary>
            Defines the IInlineLinkPostProcessing interface.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlineParsingContext">
      <summary>
            Defines the IInlineParsingContext interface.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlineParsingContext.Push(Aspose.Html.Toolkit.Markdown.Syntax.InlineSyntaxNode)">
      <summary>
            Defines the Push method.
            </summary>
      <param name="syntax">The syntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlineParsingContext.Push(Aspose.Html.Toolkit.Markdown.Syntax.Parser.DelimiterRun)">
      <summary>
            Defines the Push method.
            </summary>
      <param name="delimiter">The delimiter.</param>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlineParsingContext.Source">
      <summary>
            Get the Source. 
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlineParsingContext.Reader">
      <summary>
            Get the Reader.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlineParsingContext.SyntaxFactory">
      <summary>
            Get the SyntaxFactory.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlineParsingContext.Owner">
      <summary>
            Get the Owner.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlinePostProcessing">
      <summary>
            Defines the IInlinePostProcessing interface
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlinePostProcessing.Process(Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlinePostProcessingContext)">
      <summary>
            Defines the Process method.
            </summary>
      <param name="context">The context.</param>
      <returns>The InlineParsingInstruction.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlinePostProcessingContext">
      <summary>
            Defines the interface IInlinePostProcessingContext
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlinePostProcessingContext.ContainsLinkReferenceDefinition(System.String)">
      <summary>
            Defines the ContainsLinkReferenceDefinition
            </summary>
      <param name="label">The label.</param>
      <returns>The boolean.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlinePostProcessingContext.OpenedDelimiter">
      <summary>
            Get and set the OpenedDelimiter/
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlinePostProcessingContext.ClosedDelimiter">
      <summary>
            Get and set the ClosedDelimiter.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlinePostProcessingContext.Content">
      <summary>
            Get the Content.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlinePostProcessingContext.Delimiters">
      <summary>
            Get the Delimiters.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IMarkdownParserBuilder">
      <summary>
            Defines the base interface IMarkdownParserBuilder
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IMarkdownParserBuilder.UseBlockParser``1">
      <summary>
            Defines the UseBlockParser method.
            </summary>
      <typeparam name="T">The T type.</typeparam>
      <returns>The IMarkdownParserBuilder.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IMarkdownParserBuilder.UseInlineParser``1">
      <summary>
            Defines the UseInlineParser method.
            </summary>
      <typeparam name="T">The T type.</typeparam>
      <returns>The IMarkdownParserBuilder.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.IMarkdownParserBuilder.UseExtension``1">
      <summary>
            Defines the UseExtension method.
            </summary>
      <typeparam name="T">The T type.</typeparam>
      <returns>The IMarkdownParserBuilder.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.InlineParsingInstruction">
      <summary>
            Defines the InlineParsingInstruction struct.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.InlineParsingInstruction.None">
      <summary>
            The ParsingInstruction.None.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.InlineParsingInstruction.Handled">
      <summary>
            The Handled.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.InlineParsingInstruction.Equals(Aspose.Html.Toolkit.Markdown.Syntax.Parser.InlineParsingInstruction)">
      <summary>
            Compare two InlineParsingInstruction.
            </summary>
      <param name="other">The other.</param>
      <returns>The boolean.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.InlineParsingInstruction.Equals(System.Object)">
      <summary>
            Overrides the Equals method.
            </summary>
      <param name="obj">The object.</param>
      <returns>The boolean.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.InlineParsingInstruction.GetHashCode">
      <summary>
            Defines the GetHashCode
            </summary>
      <returns>The has code.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.InlineParsingInstruction.op_Equality(Aspose.Html.Toolkit.Markdown.Syntax.Parser.InlineParsingInstruction,Aspose.Html.Toolkit.Markdown.Syntax.Parser.InlineParsingInstruction)">
      <summary>
            Overrides the == operator.
            </summary>
      <param name="left">The left InlineParsingInstruction.</param>
      <param name="right">The right InlineParsingInstruction.</param>
      <returns>The boolean.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.InlineParsingInstruction.op_Inequality(Aspose.Html.Toolkit.Markdown.Syntax.Parser.InlineParsingInstruction,Aspose.Html.Toolkit.Markdown.Syntax.Parser.InlineParsingInstruction)">
      <summary>
            Overrides the  != operator
            </summary>
      <param name="left">The left InlineParsingInstruction.</param>
      <param name="right">The right InlineParsingInstruction.</param>
      <returns>The boolean.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.InlineParsingInstruction.Instruction">
      <summary>
            Get the Instruction.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction">
      <summary>
            Defines the LineParsingInstruction.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction.None">
      <summary>
            The None LineParsingInstruction.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction.Continue">
      <summary>
            The Continue.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction.NextLine">
      <summary>
            The NextLine.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction.WithTabsReservation(System.Int32)">
      <summary>
            Defines the interface for WithTabsReservation
            </summary>
      <param name="value">The int value.</param>
      <returns>The LineParsingInstruction.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction.WithContentIndentation(System.Int32)">
      <summary>
            Defines the interface for get LineParsingInstruction
            </summary>
      <param name="value">The int value.</param>
      <returns>The LineParsingInstruction.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction.GetTabsReservation">
      <summary>
            Defines the interface for get TabsReservation
            </summary>
      <returns>The reservation.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction.GetContentIndentation">
      <summary>
            Defines the interface for get indentation
            </summary>
      <returns>The indentation.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction.Equals(Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction)">
      <summary>
            Compare two LineParsingInstruction
            </summary>
      <param name="other">The LineParsingInstruction.</param>
      <returns>The boolean.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction.Equals(System.Object)">
      <summary>
            Compare two LineParsingInstruction
            </summary>
      <param name="obj">The object.</param>
      <returns>The boolean.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction.GetHashCode">
      <summary>
            Overrides the GetHashCode
            </summary>
      <returns>The Instruction.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction.op_Equality(Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction,Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction)">
      <summary>
            Overrides the == operator.
            </summary>
      <param name="left">The left LineParsingInstruction.</param>
      <param name="right">The right LineParsingInstruction.</param>
      <returns>The boolean.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction.op_Inequality(Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction,Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction)">
      <summary>
            Overrides the != operator.
            </summary>
      <param name="left">The left LineParsingInstruction.</param>
      <param name="right">The right LineParsingInstruction.</param>
      <returns>The boolean.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.LineParsingInstruction.Instruction">
      <summary>
            Get the Instruction
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownBlockParser">
      <summary>
            Defines the base class MarkdownBlockParser
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownBlockParser.CanParse(Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext)">
      <summary>
            Defines interface for get the CanParse value.
            </summary>
      <param name="context">The IBlockParsingContext.</param>
      <returns>The boolean result.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownBlockParser.Parse(Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext)">
      <summary>
            Defines interface for parse ofr the context..
            </summary>
      <param name="context">The context.</param>
      <returns>The LineParsingInstruction.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownBlockParser.Continue(Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor,Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext)">
      <summary>
            Defines the interface for Continue
            </summary>
      <param name="descriptor">The description.</param>
      <param name="context">The context.</param>
      <returns>The LineParsingInstruction.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownBlockParser.OnOpen(Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor,Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext)">
      <summary>
            Defines interface for OnOpen method.
            </summary>
      <param name="descriptor">The description.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownBlockParser.CanClose(Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor,Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockClosingReason,Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext)">
      <summary>
            Defines interface for CanClose method.
            </summary>
      <param name="descriptor">The description.</param>
      <param name="reason">The reason.</param>
      <param name="context">The context.</param>
      <returns>The boolean result.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownBlockParser.OnClose(Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext)">
      <summary>
            Defines interface for OnClose method.
            </summary>
      <param name="descriptor">The description.</param>
      <param name="parent">The parent.</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownBlockParser.OnProcessInline(Aspose.Html.Toolkit.Markdown.Syntax.Parser.BlockSyntaxDescriptor,Aspose.Html.Toolkit.Markdown.Syntax.Parser.IBlockParsingContext)">
      <summary>
            Defines the interface for OnProcessInline method.
            </summary>
      <param name="descriptor">The description.</param>
      <param name="context">The context.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownInlineSyntaxParser">
      <summary>
            Defines the base class MarkdownInlineSyntaxParser 
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownInlineSyntaxParser.CanParse(Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlineParsingContext)">
      <summary>
            Get the can parse boolean value.
            </summary>
      <param name="context">The context.</param>
      <returns>True if can parse.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownInlineSyntaxParser.Parse(Aspose.Html.Toolkit.Markdown.Syntax.Parser.IInlineParsingContext)">
      <summary>
            Defines the interface for parse.
            </summary>
      <param name="context">The context.</param>
      <returns>The InlineParsingInstruction.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownParser">
      <summary>
            Represents an MarkDown format document parser.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownParser.DefaultConfig">
      <summary>
            The default config actions.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownParser.FullConfig">
      <summary>
            The full default config.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownParser.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownParser" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownParser.#ctor(System.Action{Aspose.Html.Toolkit.Markdown.Syntax.Parser.IMarkdownParserBuilder})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownParser" /> class.
            </summary>
      <param name="builder">The MarkdownParserBuilder.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownParser.ParseFile(System.String)">
      <summary>
            Parse an file.
            </summary>
      <param name="path">The path to file.</param>
      <returns>The Markdown syntax tree.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownParser.Parse(System.IO.TextReader)">
      <summary>
            Parse an TextReader.
            </summary>
      <param name="reader">The TextReader.</param>
      <returns>The Markdown syntax tree.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownParser.Parse(System.IO.Stream)">
      <summary>
            Parse from Stream.
            </summary>
      <param name="stream">The Stream.</param>
      <returns>The Markdown syntax tree.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownParser.Parse(System.String)">
      <summary>
            Prase from the string context.
            </summary>
      <param name="content">The string content.</param>
      <returns>The Markdown syntax tree.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownParser.NewLine">
      <summary>
            The new line string.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownSyntaxExtension">
      <summary>
            Defines the base class for MarkdownSyntaxExtension
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownSyntaxExtension.Register``1">
      <summary>
            Defines the interface Register
            </summary>
      <typeparam name="T">The T type param.</typeparam>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownSyntaxExtension.Register(Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownBlockParser)">
      <summary>
            Defines the Register interface.
            </summary>
      <param name="parser">The MarkdownBlockParser.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.MarkdownSyntaxExtension.Setup(Aspose.Html.Toolkit.Markdown.Syntax.Parser.IMarkdownParserBuilder)">
      <summary>
            Defines the interface for Setup 
            </summary>
      <param name="builder">The builder.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.ParsingInstruction">
      <summary>
            The ParsingInstruction enum.
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.ParsingInstruction.None">
      <summary>
            The None = 0
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.ParsingInstruction.Handled">
      <summary>
            The Handled = 1 &lt;&lt; 0
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.ParsingInstruction.Continue">
      <summary>
            The Continue = 1 &lt;&lt;
            </summary>
    </member>
    <member name="F:Aspose.Html.Toolkit.Markdown.Syntax.Parser.ParsingInstruction.NextLine">
      <summary>
            The NextLine = 1 &lt;&lt; 2
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Parser.Extensions.GFM.GfmSyntaxExtension">
      <summary>
            Defines the GfmSyntaxExtension
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Parser.Extensions.GFM.GfmSyntaxExtension.Setup(Aspose.Html.Toolkit.Markdown.Syntax.Parser.IMarkdownParserBuilder)">
      <summary>
            Override the Setup
            </summary>
      <param name="builder">The builder.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.ChildFrontMatterSyntaxNode">
      <summary>
            Defines the ChildFrontMatterSyntaxNode
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.ChildFrontMatterSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoFrontMatterSyntaxNode)">
      <summary>
            Defines the base ChildFrontMatterSyntaxNode constructor.
            </summary>
      <param name="owner">The HugoFrontMatterSyntax.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.ChildFrontMatterSyntaxNode.GetEnumerator">
      <summary>
            Get the IEnumerator.
            </summary>
      <returns>The IEnumerator.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.ChildFrontMatterSyntaxNode.GetFrontMatter">
      <summary>
            Defines the interface GetFrontMatter
            </summary>
      <returns>The HugoFrontMatterSyntax.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoFrontMatterSyntaxNode">
      <summary>
            Defines the base class HugoFrontMatterSyntaxNode
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoFrontMatterSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxTree,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken,Aspose.Html.Toolkit.Markdown.Syntax.TextSyntaxNode,Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxToken)">
      <summary>
            Defines the HugoFrontMatterSyntax constructor.
            </summary>
      <param name="ownerSyntaxTree">The MarkdownSyntaxTree.</param>
      <param name="opening">The MarkdownSyntaxToken.</param>
      <param name="text">The TextSyntax.</param>
      <param name="closing">The MarkdownSyntaxToken.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoFrontMatterSyntaxNode.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the WriteComponentsTo interface.
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoFrontMatterSyntaxNode.GetTextContent">
      <summary>
            Defines the GetTextContent interface.
            </summary>
      <returns>The TextSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoFrontMatterSyntaxNode.Find(System.String[])">
      <summary>
            Defines the interface for find BaseSyntaxNode
            </summary>
      <param name="path">The string path.</param>
      <returns>The BaseSyntaxNode.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoFrontMatterSyntaxNode.Find``1(System.String[])">
      <summary>
            Defines the interface for find T
            </summary>
      <typeparam name="T">The T type.</typeparam>
      <param name="path">The string path.</param>
      <returns>The T object.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoFrontMatterSyntaxNode.FrontMatterRootNode">
      <summary>
            Get and set the RootNode
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoShortCodeSyntaxNode">
      <summary>
            Defines the HugoShortCodeSyntaxNode
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoShortCodeSyntaxNode.PreInsertionValidity(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxNode)">
      <summary>
            Defines the interface for PreInsertionValidity
            </summary>
      <param name="node">The MarkdownSyntaxNode.</param>
      <exception cref="T:System.InvalidOperationException">The InvalidOperationException.</exception>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoShortCodeSyntaxNode.WriteComponentsTo(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownTextWriter)">
      <summary>
            Defines the interface for WriteComponentsTo
            </summary>
      <param name="writer">The MarkdownTextWriter.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoShortCodeSyntaxNode.IsEndTag">
      <summary>
            Defines the interface for check IsEndTag
            </summary>
      <returns>The boolean.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoShortCodeSyntaxNode.GetParametersCount">
      <summary>
            Defines the GetParametersCount
            </summary>
      <returns>Teh count.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoShortCodeSyntaxNode.GetParameter(System.Int32)">
      <summary>
            Defines the GetParameter
            </summary>
      <param name="index">The index.</param>
      <returns>The  ShortCodeParameterSyntax.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Throw the ArgumentOutOfRangeException.</exception>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoSyntaxExtension">
      <summary>
            Defines the HugoSyntaxExtension.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoSyntaxExtension.Setup(Aspose.Html.Toolkit.Markdown.Syntax.Parser.IMarkdownParserBuilder)">
      <summary>
            Defines the interface for Setup
            </summary>
      <param name="builder">The builder.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoYamlBasedFrontMatterSyntaxNode">
      <summary>
            Defines the HugoYamlBasedFrontMatterSyntaxNode
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoYamlBasedFrontMatterSyntaxNode.Find``1(System.String[])">
      <summary>
            Defines the interface for find T by string Path
            </summary>
      <typeparam name="T">The T type.</typeparam>
      <param name="path">The string path.</param>
      <returns>The T type.</returns>
      <exception cref="T:System.ArgumentException">Throw the ArgumentException </exception>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoYamlBasedFrontMatterSyntaxNode.GetTextContent">
      <summary>
            Defines the GetTextContent interface.
            </summary>
      <returns>The TextSyntax.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoYamlBasedFrontMatterSyntaxNode.GetEnumerator">
      <summary>
            Get Enumerator.
            </summary>
      <returns>The IEnumerator.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoYamlBasedFrontMatterSyntaxNode.FrontMatterRootNode">
      <summary>
            Get and set the RootNode.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.ShortCodeParameterSyntaxNode">
      <summary>
            Defines the ShortCodeParameterSyntax.
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.ShortCodeParameterSyntaxNode.Accept(Aspose.Html.Toolkit.Markdown.Syntax.MarkdownSyntaxVisitor)">
      <summary>
            Defines the interface for accept visitor.
            </summary>
      <param name="visitor">The visitor.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.ShortCodeParameterSyntaxNode.GetName">
      <summary>
            Get string name.
            </summary>
      <returns>The string result.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.ShortCodeParameterSyntaxNode.GetValue">
      <summary>
            Get string Value
            </summary>
      <returns>The string result.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.ShortCodeParameterSyntaxNode.SetValue(System.String)">
      <summary>
            Defines the interface for set value.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlMappingSyntaxNode">
      <summary>
            Defines the YamlMappingSyntaxNode
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlMappingSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoFrontMatterSyntaxNode,YamlDotNet.RepresentationModel.YamlMappingNode)">
      <summary>
            Create the YamlMappingSyntaxNode
            </summary>
      <param name="owner">The owner.</param>
      <param name="adaptee">The adaptee.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlMappingSyntaxNode.GetEnumerator">
      <summary>
            Gets the enumerator.
            </summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlMappingSyntaxNode.Item(System.Int32)">
      <summary>
            Get the value by index.
            </summary>
      <param name="index">The int index.</param>
      <returns>The YamlSyntaxNode.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Throw the ArgumentOutOfRangeException</exception>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlMappingSyntaxNode.Item(System.String)">
      <summary>
            Get the YamlSyntaxNode by string key.
            </summary>
      <param name="key">The string key.</param>
      <returns>The YamlSyntaxNode.</returns>
      <exception cref="T:System.ArgumentException">
      </exception>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlMappingSyntaxNode.Keys">
      <summary>
            Get all Keys.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlMappingSyntaxNode.Values">
      <summary>
            Get all Values.
            </summary>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlMappingSyntaxNode.Children">
      <summary>
            Get the all Children.
            </summary>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlScalarSyntaxNode">
      <summary>
            Defines the YamlScalarSyntaxNode
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlScalarSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoFrontMatterSyntaxNode,YamlDotNet.RepresentationModel.YamlScalarNode)">
      <summary>
            Create the YamlScalarSyntaxNode
            </summary>
      <param name="owner">The owner.</param>
      <param name="adaptee">The adaptee.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlScalarSyntaxNode.GetValue">
      <summary>
            Defines the interface for get value.
            </summary>
      <returns>The string.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlScalarSyntaxNode.SetValue(System.String)">
      <summary>
            Defines the interface for set value.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlScalarSyntaxNode.GetEnumerator">
      <summary>
            Defines the interface for get IEnumerator
            </summary>
      <returns>The IEnumerator.</returns>
    </member>
    <member name="T:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlSequenceSyntaxNode">
      <summary>
            Defines the YamlSequenceSyntaxNode
            </summary>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlSequenceSyntaxNode.#ctor(Aspose.Html.Toolkit.Markdown.Syntax.Extensions.HugoFrontMatterSyntaxNode,YamlDotNet.RepresentationModel.YamlSequenceNode)">
      <summary>
            Creates of the YamlSequenceSyntaxNode
            </summary>
      <param name="owner">The owner.</param>
      <param name="adaptee">The adaptee.</param>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlSequenceSyntaxNode.Count">
      <summary>
            Defines the interface for get count.
            </summary>
      <returns>The integer result.</returns>
    </member>
    <member name="M:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlSequenceSyntaxNode.GetEnumerator">
      <summary>
            Defines the interface for get enumerator.
            </summary>
      <returns>The IEnumerator.</returns>
    </member>
    <member name="P:Aspose.Html.Toolkit.Markdown.Syntax.Extensions.YamlSequenceSyntaxNode.Item(System.Int32)">
      <summary>
            Get the YamlSyntaxNode by index.
            </summary>
      <param name="index">The index,</param>
      <returns>The YamlSyntaxNode.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Throw the ArgumentOutOfRangeException.</exception>
    </member>
  </members>
</doc>