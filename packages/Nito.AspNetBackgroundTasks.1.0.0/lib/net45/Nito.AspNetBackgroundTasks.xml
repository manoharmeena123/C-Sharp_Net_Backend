<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nito.AspNetBackgroundTasks</name>
    </assembly>
    <members>
        <member name="T:Nito.AspNetBackgroundTasks.BackgroundTaskManager">
            <summary>
            A type that tracks background operations and notifies ASP.NET that they are still in progress.
            </summary>
        </member>
        <member name="F:Nito.AspNetBackgroundTasks.BackgroundTaskManager.Instance">
            <summary>
            The background task manager for this app domain.
            </summary>
        </member>
        <member name="M:Nito.AspNetBackgroundTasks.BackgroundTaskManager.Run(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Executes an asynchronous background operation, registering it with ASP.NET.
            </summary>
            <param name="operation">The background operation.</param>
        </member>
        <member name="M:Nito.AspNetBackgroundTasks.BackgroundTaskManager.Run(System.Action)">
            <summary>
            Executes a background operation, registering it with ASP.NET.
            </summary>
            <param name="operation">The background operation.</param>
        </member>
        <member name="P:Nito.AspNetBackgroundTasks.BackgroundTaskManager.Shutdown">
            <summary>
            Gets a cancellation token that is set when ASP.NET is shutting down the app domain.
            </summary>
        </member>
        <member name="T:Nito.AspNetBackgroundTasks.Internal.AsyncCountdownEvent">
            <summary>
            An async-compatible countdown event.
            </summary>
        </member>
        <member name="F:Nito.AspNetBackgroundTasks.Internal.AsyncCountdownEvent._tcs">
            <summary>
            The TCS used to signal this event.
            </summary>
        </member>
        <member name="F:Nito.AspNetBackgroundTasks.Internal.AsyncCountdownEvent._count">
            <summary>
            The remaining count on this event.
            </summary>
        </member>
        <member name="M:Nito.AspNetBackgroundTasks.Internal.AsyncCountdownEvent.#ctor(System.Int32)">
            <summary>
            Creates an async-compatible countdown event.
            </summary>
            <param name="count">The number of signals this event will need before it becomes set. Must be greater than zero.</param>
        </member>
        <member name="M:Nito.AspNetBackgroundTasks.Internal.AsyncCountdownEvent.WaitAsync">
            <summary>
            Asynchronously waits for this event to be set.
            </summary>
        </member>
        <member name="M:Nito.AspNetBackgroundTasks.Internal.AsyncCountdownEvent.ModifyCount(System.Int32)">
            <summary>
            Attempts to modify the current count by the specified amount. This method returns <c>false</c> if the new current count value would be invalid, or if the count has already reached zero.
            </summary>
            <param name="signalCount">The amount to change the current count. This must be +1 or -1.</param>
        </member>
        <member name="M:Nito.AspNetBackgroundTasks.Internal.AsyncCountdownEvent.AddCount">
            <summary>
            Attempts to add one to the current count. This method throws <see cref="T:System.InvalidOperationException"/> if the count is already at zero or if the new count would be greater than <see cref="F:System.Int32.MaxValue"/>.
            </summary>
        </member>
        <member name="M:Nito.AspNetBackgroundTasks.Internal.AsyncCountdownEvent.Signal">
            <summary>
            Attempts to subtract one from the current count. This method throws <see cref="T:System.InvalidOperationException"/> if the count is already at zero or if the new count would be less than zero.
            </summary>
        </member>
        <member name="T:Nito.AspNetBackgroundTasks.Internal.RegisteredTasks">
            <summary>
            A type that tracks background operations and notifies ASP.NET that they are still in progress.
            </summary>
        </member>
        <member name="F:Nito.AspNetBackgroundTasks.Internal.RegisteredTasks._shutdown">
            <summary>
            A cancellation token that is set when ASP.NET is shutting down the app domain.
            </summary>
        </member>
        <member name="F:Nito.AspNetBackgroundTasks.Internal.RegisteredTasks._count">
            <summary>
            A countdown event that is incremented each time a task is registered and decremented each time it completes. When it reaches zero, we are ready to shut down the app domain. 
            </summary>
        </member>
        <member name="F:Nito.AspNetBackgroundTasks.Internal.RegisteredTasks._done">
            <summary>
            A task that completes after <see cref="F:Nito.AspNetBackgroundTasks.Internal.RegisteredTasks._count"/> reaches zero and the object has been unregistered.
            </summary>
        </member>
        <member name="M:Nito.AspNetBackgroundTasks.Internal.RegisteredTasks.#ctor">
            <summary>
            Creates an instance that is registered with the ASP.NET runtime.
            </summary>
        </member>
        <member name="M:Nito.AspNetBackgroundTasks.Internal.RegisteredTasks.Register(System.Threading.Tasks.Task)">
            <summary>
            Registers a task with the ASP.NET runtime. The task is unregistered when it completes.
            </summary>
            <param name="task">The task to register.</param>
        </member>
        <member name="M:Nito.AspNetBackgroundTasks.Internal.RegisteredTasks.Run(System.Func{System.Threading.Tasks.Task})">
            <summary>
            Executes an asynchronous background operation, registering it with ASP.NET.
            </summary>
            <param name="operation">The background operation.</param>
        </member>
        <member name="M:Nito.AspNetBackgroundTasks.Internal.RegisteredTasks.Run(System.Action)">
            <summary>
            Executes a background operation, registering it with ASP.NET.
            </summary>
            <param name="operation">The background operation.</param>
        </member>
        <member name="P:Nito.AspNetBackgroundTasks.Internal.RegisteredTasks.Shutdown">
            <summary>
            Gets a cancellation token that is set when ASP.NET is shutting down the app domain.
            </summary>
        </member>
    </members>
</doc>
